Reduce (CSL, rev 6346), 13-Jul-2022 ...






*** End-of-file read 




regressionmessage



Calling f5_groebner from reval1
Arg1: (system vars revgradlex)
Calling f5_groebner_lp2lp from system!-startup
Arg1: ((plus (minus (times 2 d h)) (minus (times e g))) (plus (times 4 b) (times
 9 e)) (plus (minus (times 4 c h)) (minus (times 3 d g)) (minus (times 2 e f))) 
(plus (times 9 a) (minus (times 7 c)) (minus (times 8 f))) (plus (minus (times 5
 c g)) (minus (times 4 d f)) (minus (times 3 e)) (minus (times 6 h))) (plus (
times 9 b) (minus (times 6 c f)) (minus (times 5 d)) (minus (times 7 g))) (plus 
(times 6 a) (minus (times 5 b)) (times 9 d)) (plus (minus (times 7 a)) (times 9 
c) 8))
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((d . 1) ((h . 1) . -2)) ((e . 1) ((g . 1) . -1))) . 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((d . 1) ((h . 1) . -2)) ((e . 1) ((g . 1) . -1)))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((h . 1) . -2))
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -2
Arg2: (2 0 0 0 1 0 0 0 1)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 0 1 0 0 0 1)) (-2) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 0 1 0 0 0 1)) (-2) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((e . 1) ((g . 1) . -1)))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((g . 1) . -1))
Arg2: (1 0 0 0 0 1 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -1
Arg2: (2 0 0 0 0 1 0 1 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 0 0 1 0 1 0)) (-1) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 0 0 1 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 0 0 1 0 1 0)) (-1) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 0 0 1 0 1 0)) (-1) 2)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 0 0 0 1 0 0 0 1)) (-2) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 0 0 0 1 0 1 0)) (-1) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 2)
poly_sf2poly1 => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 2)
poly_sq2poly1 => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 2)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((b . 1) . 4) ((e . 1) . 9)) . 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((b . 1) . 4) ((e . 1) . 9))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 4
Arg2: (1 0 1 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 1 0 0 0 0 0 0)) (4) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((e . 1) . 9))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 9
Arg2: (1 0 0 0 0 1 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 1 0 0 0 0 0 0)) (4) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_sf2poly1 => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_sq2poly1 => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((c . 1) ((h . 1) . -4)) ((d . 1) ((g . 1) . -3)) ((e . 1) ((f . 1) . -2
))) . 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((c . 1) ((h . 1) . -4)) ((d . 1) ((g . 1) . -3)) ((e . 1) ((f . 1) . -2)
))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((h . 1) . -4))
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -4
Arg2: (2 0 0 1 0 0 0 0 1)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 1 0 0 0 0 1)) (-4) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 1 0 0 0 0 1)) (-4) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((d . 1) ((g . 1) . -3)) ((e . 1) ((f . 1) . -2)))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((g . 1) . -3))
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -3
Arg2: (2 0 0 0 1 0 0 1 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 0 1 0 0 1 0)) (-3) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 0 1 0 0 1 0)) (-3) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((e . 1) ((f . 1) . -2)))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((f . 1) . -2))
Arg2: (1 0 0 0 0 1 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -2
Arg2: (2 0 0 0 0 1 1 0 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 0 0 1 1 0 0)) (-2) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 0 0 1 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 0 0 1 1 0 0)) (-2) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 0 0 1 1 0 0)) (-2) 2)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 0 0 0 1 0 0 1 0)) (-3) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 0 0 0 1 1 0 0)) (-2) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#)) (-2 -3)
 2)
poly_sf2poly1 => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#)) (-2 -3)
 2)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 0 0 1 0 0 0 0 1)) (-4) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#)) (-2 -3) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1
 0 0 0 0 1)) (-2 -3 -4) 2)
poly_sf2poly1 => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1
 0 0 0 0 1)) (-2 -3 -4) 2)
poly_sq2poly1 => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1
 0 0 0 0 1)) (-2 -3 -4) 2)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((a . 1) . 9) ((c . 1) . -7) ((f . 1) . -8)) . 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((a . 1) . 9) ((c . 1) . -7) ((f . 1) . -8))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 9
Arg2: (1 1 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 1 0 0 0 0 0 0 0)) (9) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((c . 1) . -7) ((f . 1) . -8))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -7
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 1 0 0 0 0 0)) (-7) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((f . 1) . -8))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -8
Arg2: (1 0 0 0 0 0 1 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 0 0 0 1 0 0)) (-8) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((1 0 0 0 0 0 1 0 0)) (-8) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 0 1 0 0 0 0 0)) (-7) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 0 0 0 1 0 0)) (-8) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1 . #1#)) (-7 -8) 1
)
poly_sf2poly1 => (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1 . #1#)) (-7 -8) 1
)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 1 0 0 0 0 0 0 0)) (9) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1 . #1#)) (-7 -8) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 
0 0 1 . #2#)) (9 -7 -8) 1)
poly_sf2poly1 => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 
0 0 1 . #2#)) (9 -7 -8) 1)
poly_sq2poly1 => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 
0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((c . 1) ((g . 1) . -5)) ((d . 1) ((f . 1) . -4)) ((e . 1) . -3) ((h . 1
) . -6)) . 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((c . 1) ((g . 1) . -5)) ((d . 1) ((f . 1) . -4)) ((e . 1) . -3) ((h . 1)
 . -6))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((g . 1) . -5))
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -5
Arg2: (2 0 0 1 0 0 0 1 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 1 0 0 0 1 0)) (-5) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 1 0 0 0 1 0)) (-5) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((d . 1) ((f . 1) . -4)) ((e . 1) . -3) ((h . 1) . -6))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((f . 1) . -4))
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -4
Arg2: (2 0 0 0 1 0 1 0 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 0 1 0 1 0 0)) (-4) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 0 1 0 1 0 0)) (-4) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((e . 1) . -3) ((h . 1) . -6))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -3
Arg2: (1 0 0 0 0 1 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 0 0 1 0 0 0)) (-3) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((h . 1) . -6))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -6
Arg2: (1 0 0 0 0 0 0 0 1)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 0 0 0 0 0 1)) (-6) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((1 0 0 0 0 0 0 0 1)) (-6) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 0 0 0 1 0 0 0)) (-3) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 0 0 0 0 0 1)) (-6) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 0 1)) (-3 -6) 1)
poly_sf2poly1 => (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 0 1)) (-3 -6) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 0 0 0 1 0 1 0 0)) (-4) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 0 1)) (-3 -6) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 0 1 0 1 . #1=(0 0)) (1 0 0 0 0 1 0 . #1#) (1 0 0 0 0
 0 0 0 1)) (-4 -3 -6) 2)
poly_sf2poly1 => (p ((2 0 0 0 1 0 1 . #1=(0 0)) (1 0 0 0 0 1 0 . #1#) (1 0 0 0 0
 0 0 0 1)) (-4 -3 -6) 2)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 0 0 1 0 0 0 1 0)) (-5) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 0 0 1 0 1 . #1=(0 0)) (1 0 0 0 0 1 0 . #1#) (1 0 0 0 0 0 0 0 1)) 
(-4 -3 -6) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (
1 0 0 0 0 1 0 . #2#) (1 0 0 0 0 0 0 0 1)) (-4 -5 -3 -6) 2)
poly_sf2poly1 => (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (
1 0 0 0 0 1 0 . #2#) (1 0 0 0 0 0 0 0 1)) (-4 -5 -3 -6) 2)
poly_sq2poly1 => (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (
1 0 0 0 0 1 0 . #2#) (1 0 0 0 0 0 0 0 1)) (-4 -5 -3 -6) 2)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((b . 1) . 9) ((c . 1) ((f . 1) . -6)) ((d . 1) . -5) ((g . 1) . -7)) . 
1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((b . 1) . 9) ((c . 1) ((f . 1) . -6)) ((d . 1) . -5) ((g . 1) . -7))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 9
Arg2: (1 0 1 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 1 0 0 0 0 0 0)) (9) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((c . 1) ((f . 1) . -6)) ((d . 1) . -5) ((g . 1) . -7))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((f . 1) . -6))
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -6
Arg2: (2 0 0 1 0 0 1 0 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 0 1 0 0 1 0 0)) (-6) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 0 1 0 0 1 0 0)) (-6) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((d . 1) . -5) ((g . 1) . -7))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -5
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 0 1 0 0 0 0)) (-5) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((g . 1) . -7))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -7
Arg2: (1 0 0 0 0 0 0 1 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 0 0 0 0 1 0)) (-7) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((1 0 0 0 0 0 0 1 0)) (-7) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 0 0 1 0 0 0 0)) (-5) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 0 0 0 0 1 0)) (-7) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 0 0 1 0 0 0 . #1=(0)) (1 0 0 0 0 0 0 1 . #1#)) (-5 -7)
 1)
poly_sf2poly1 => (p ((1 0 0 0 1 0 0 0 . #1=(0)) (1 0 0 0 0 0 0 1 . #1#)) (-5 -7)
 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 0 0 1 0 0 1 0 0)) (-6) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 0 1 0 0 0 . #1=(0)) (1 0 0 0 0 0 0 1 . #1#)) (-5 -7) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 1 0 0 1 . #1=(0 . #2=(0))) (1 0 0 0 1 0 0 . #1#) (1 
0 0 0 0 0 0 1 . #2#)) (-6 -5 -7) 2)
poly_sf2poly1 => (p ((2 0 0 1 0 0 1 . #1=(0 . #2=(0))) (1 0 0 0 1 0 0 . #1#) (1 
0 0 0 0 0 0 1 . #2#)) (-6 -5 -7) 2)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 1 0 0 0 0 0 0)) (9) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 0 1 0 0 1 . #1=(0 . #2=(0))) (1 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 0
 1 . #2#)) (-6 -5 -7) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 1 0 0 1 . #1=(0 . #3=(0))) (1 0 1 0 0 . #2=(0 0 . #1
#)) (1 0 0 0 1 . #2#) (1 0 0 0 0 0 0 1 . #3#)) (-6 9 -5 -7) 2)
poly_sf2poly1 => (p ((2 0 0 1 0 0 1 . #1=(0 . #3=(0))) (1 0 1 0 0 . #2=(0 0 . #1
#)) (1 0 0 0 1 . #2#) (1 0 0 0 0 0 0 1 . #3#)) (-6 9 -5 -7) 2)
poly_sq2poly1 => (p ((2 0 0 1 0 0 1 . #1=(0 . #3=(0))) (1 0 1 0 0 . #2=(0 0 . #1
#)) (1 0 0 0 1 . #2#) (1 0 0 0 0 0 0 1 . #3#)) (-6 9 -5 -7) 2)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((a . 1) . 6) ((b . 1) . -5) ((d . 1) . 9)) . 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((a . 1) . 6) ((b . 1) . -5) ((d . 1) . 9))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 6
Arg2: (1 1 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 1 0 0 0 0 0 0 0)) (6) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((b . 1) . -5) ((d . 1) . 9))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -5
Arg2: (1 0 1 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 1 0 0 0 0 0 0)) (-5) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((d . 1) . 9))
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 9
Arg2: (1 0 0 0 1 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 0 1 0 0 0 0)) (9) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((1 0 0 0 1 0 0 0 0)) (9) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 1 0 0 0 0 0 0)) (-5) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 0 1 0 0 0 0)) (9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#)) (-5 9) 1)
poly_sf2poly1 => (p ((1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#)) (-5 9) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 1 0 0 0 0 0 0 0)) (6) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#)) (-5 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 1 0 . #1=(0 0 . #2=(0 0 0 0))) (1 0 1 . #1#) (1 0 0 0 1
 . #2#)) (6 -5 9) 1)
poly_sf2poly1 => (p ((1 1 0 . #1=(0 0 . #2=(0 0 0 0))) (1 0 1 . #1#) (1 0 0 0 1
 . #2#)) (6 -5 9) 1)
poly_sq2poly1 => (p ((1 1 0 . #1=(0 0 . #2=(0 0 0 0))) (1 0 1 . #1#) (1 0 0 0 1
 . #2#)) (6 -5 9) 1)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((a . 1) . -7) ((c . 1) . 9) . 8) . 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((a . 1) . -7) ((c . 1) . 9) . 8)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -7
Arg2: (1 1 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 1 0 0 0 0 0 0 0)) (-7) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((c . 1) . 9) . 8)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 9
Arg2: (1 0 0 1 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 1 0 0 0 0 0)) (9) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: 8
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((0 0 0 0 0 0 0 0 0)) (8) 0)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 0 1 0 0 0 0 0)) (9) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((0 0 0 0 0 0 0 0 0)) (8) 0)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (0 0 0 0 . #1#)) (9 8) 1)
poly_sf2poly1 => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (0 0 0 0 . #1#)) (9 8) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 1 0 0 0 0 0 0 0)) (-7) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (0 0 0 0 . #1#)) (9 8) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 1 . #2=(0 0 . #1=(0 0 0 0 0))) (1 0 0 1 . #1#) (0 0 . #2
#)) (-7 9 8) 1)
poly_sf2poly1 => (p ((1 1 . #2=(0 0 . #1=(0 0 0 0 0))) (1 0 0 1 . #1#) (0 0 . #2
#)) (-7 9 8) 1)
poly_sq2poly1 => (p ((1 1 . #2=(0 0 . #1=(0 0 0 0 0))) (1 0 0 1 . #1#) (0 0 . #2
#)) (-7 9 8) 1)
Calling f5_groebner_poly2poly from f5_groebner_lp2lp
Arg1: ((p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 2) (p ((1 0 1 0 0 0
 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1) (p ((2 0 0 0 0 1 1 0 . #2=(0)) (2 0
 0 0 1 0 0 1 . #2#) (2 0 0 1 0 0 0 0 1)) (-2 -3 -4) 2) (p ((1 1 0 0 . #3=(0 0 0
 . #4=(0 0))) (1 0 0 1 . #3#) (1 0 0 0 0 0 1 . #4#)) (9 -7 -8) 1) (p ((2 0 0 0 1
 0 1 . #6=(0 . #5=(0))) (2 0 0 1 0 0 0 1 . #5#) (1 0 0 0 0 1 0 . #6#) (1 0 0 0 0
 0 0 0 1)) (-4 -5 -3 -6) 2) (p ((2 0 0 1 0 0 1 . #7=(0 . #9=(0))) (1 0 1 0 0 . #
8=(0 0 . #7#)) (1 0 0 0 1 . #8#) (1 0 0 0 0 0 0 1 . #9#)) (-6 9 -5 -7) 2) (p ((1
 1 0 . #10=(0 0 . #11=(0 0 0 0))) (1 0 1 . #10#) (1 0 0 0 1 . #11#)) (6 -5 9) 1)
 (p ((1 1 . #13=(0 0 . #12=(0 0 0 0 0))) (1 0 0 1 . #12#) (0 0 . #13#)) (-7 9 8)
 1))
(p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 2)
(p ((1 0 1 0 0 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (4 9) 1)
(p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (-2 -3 -4) 2)
(p ((1 1 0 0 0 0 0 0 0) (1 0 0 1 0 0 0 0 0) (1 0 0 0 0 0 1 0 0)) (9 -7 -8) 1)
(p ((2 0 0 0 1 0 1 0 0) (2 0 0 1 0 0 0 1 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 0
1)) (-4 -5 -3 -6) 2)
(p ((2 0 0 1 0 0 1 0 0) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 0 0 1
0)) (-6 9 -5 -7) 2)
(p ((1 1 0 0 0 0 0 0 0) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0)) (6 -5 9) 1)
(p ((1 1 0 0 0 0 0 0 0) (1 0 0 1 0 0 0 0 0) (0 0 0 0 0 0 0 0 0)) (-7 9 8) 1)
Calling core_constructmodule from f5_groebner_poly2poly
Arg1: ((p ((1 1 . #2=(0 0 . #1=(0 0 0 0 0))) (1 0 0 1 . #1#) (0 0 . #2#)) (-7 9 
8) 1) (p ((1 1 0 . #3=(0 0 . #4=(0 0 0 0))) (1 0 1 . #3#) (1 0 0 0 1 . #4#)) (6 
-5 9) 1) (p ((2 0 0 1 0 0 1 . #5=(0 . #7=(0))) (1 0 1 0 0 . #6=(0 0 . #5#)) (1 0
 0 0 1 . #6#) (1 0 0 0 0 0 0 1 . #7#)) (-6 9 -5 -7) 2) (p ((2 0 0 0 1 0 1 . #9=(
0 . #8=(0))) (2 0 0 1 0 0 0 1 . #8#) (1 0 0 0 0 1 0 . #9#) (1 0 0 0 0 0 0 0 1)) 
(-4 -5 -3 -6) 2) (p ((1 1 0 0 . #10=(0 0 0 . #11=(0 0))) (1 0 0 1 . #10#) (1 0 0
 0 0 0 1 . #11#)) (9 -7 -8) 1) (p ((2 0 0 0 0 1 1 0 . #12=(0)) (2 0 0 0 1 0 0 1
 . #12#) (2 0 0 1 0 0 0 0 1)) (-2 -3 -4) 2) (p ((1 0 1 0 0 0 . #13=(0 0 0)) (1 0
 0 0 0 1 . #13#)) (4 9) 1) (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 
2))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 . #2=(0 0 . #1=(0 0 0 0 0))) (1 0 0 1 . #1#) (0 0 . #2#)) (-7 9 8
) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 . #2=(0 0 . #1=(0 0 0 0 0))) (1 0 0 1 . #1#) (0 0 . #2#)) (-7 9 8
) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 . #2=(0 0 . #1=(0 0 0 0 0))) (1 0 0 1
 . #1#) (0 0 . #2#)) (7 -9 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 . #1=(0 0 . #2=(0 0 0 0))) (1 0 1 . #1#) (1 0 0 0 1 . #2#)) (6 
-5 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 . #1=(0 0 . #2=(0 0 0 0))) (1 0 1 . #1#) (1 0 0 0 1 . #2#)) (6 
-5 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 . #1=(0 0 . #2=(0 0 0 0))) (1 0 1 . #
1#) (1 0 0 0 1 . #2#)) (6 -5 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (-1 -2) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 
2) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (-2 -3 -4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (-2 -3 -4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (1 0 0 0 0 1
 0 . #2#) (1 0 0 0 0 0 0 0 1)) (-4 -5 -3 -6) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (1 0 0 0 0 1
 0 . #2#) (1 0 0 0 0 0 0 0 1)) (-4 -5 -3 -6) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0
 0 0 1 . #1#) (1 0 0 0 0 1 0 . #2#) (1 0 0 0 0 0 0 0 1)) (4 5 3 6) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 1 0 0 1 . #1=(0 . #3=(0))) (1 0 1 0 0 . #2=(0 0 . #1#)) (1 0 0 
0 1 . #2#) (1 0 0 0 0 0 0 1 . #3#)) (-6 9 -5 -7) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 1 0 0 1 . #1=(0 . #3=(0))) (1 0 1 0 0 . #2=(0 0 . #1#)) (1 0 0 
0 1 . #2#) (1 0 0 0 0 0 0 1 . #3#)) (-6 9 -5 -7) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 1 0 0 1 . #1=(0 . #3=(0))) (1 0 1 0 0
 . #2=(0 0 . #1#)) (1 0 0 0 1 . #2#) (1 0 0 0 0 0 0 1 . #3#)) (6 -9 5 7) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (0 0 0 0 . #1#)) (-9 -8) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 7
Arg4: (p ((1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#)) (-5 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 6
poly_paircomb => (p ((1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 1 . #2=(0 0 0 0 0)) (1 0 
0 0 1 . #1#) (0 0 0 0 . #2#)) (35 -54 -63 -48) 1)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (0 0 0 0 . #1#)) (-54 
-63 -48) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 35
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1
 0 0 0) (0 0 0 0 . #1#)) (-216 -252 -315 -192) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (-216 -252 -315 -192) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (-216 -252 -315 -192) 1)
poly_contentputin => 3
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#)) (-5 9) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 6
Arg4: (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1 . #1#)) (-7 -8) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 9
poly_paircomb => (p ((1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 1 0 0 0 . #2=(0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 0 1 . #2#)) (-45 42 81 48) 1)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 0 1 . #1#)) 
(42 81 48) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -45
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1
 0 0 0) (1 0 0 0 0 0 1 . #1#)) (168 324 405 192) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 
0 0 0 0 0 1 . #1#)) (168 324 405 192) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 
0 0 0 0 0 1 . #1#)) (168 324 405 192) 1)
poly_contentputin => 3
poly_normalizebycontentputin => (p ((1 0 0 1 0 0 0 . #1=(0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 . #1#)) (56 108 135 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 
2) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (1 0 0 0 0 1
 0 . #2#) (1 0 0 0 0 0 0 0 1)) (4 5 3 6) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (1 0 0 0 0 1
 0 . #2#) (1 0 0 0 0 0 0 0 1)) (4 5 3 6) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0
 0 0 1 . #1#) (1 0 0 0 0 1 0 . #2#) (1 0 0 0 0 0 0 0 1)) (4 5 3 6) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 1 0 0 . #1=(0 0 0 . #2=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 0 0 1
 . #2#)) (-9 5 7) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 6
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)) (108 135 
64) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 56
poly_paircomb => (p ((2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (1 0 1 0 0 . #1=(0 0 0 . #2=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 0 0 1 . #2#)) (
-648 -810 -384 -504 280 392) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (1 0 1 0 0
 . #1=(0 0 0 . #2=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 0 0 1 . #2#)) (-648 -810 
-384 -504 280 392) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (1 0 1 0 0
 . #1=(0 0 0 . #2=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 0 0 1 . #2#)) (-648 -810 
-384 -504 280 392) 2)
poly_contentputin => 2
poly_normalizebycontentputin => (p ((2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0
 0 0 0 0 2 0 0) (1 0 1 0 0 . #1=(0 0 0 . #2=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 0
 0 1 . #2#)) (324 405 192 252 -140 -196) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (1 0 1 0 0 . #1=(0 0 0 . #2=(0
))) (1 0 0 0 1 . #1#) (1 0 0 0 0 0 0 1 . #2#)) (405 192 252 -140 -196) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 324
Arg4: (p ((2 0 0 1 0 0 0 1 . #1=(0)) (1 0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 0 0 1)
) (5 3 6) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #
2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (1620 768 -1620 1008 -560 -972 
-784 -1944) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (1 0 1 0 0 . #1=(0 0 0
 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1
 0 0 0 0 0 0 0 1)) (768 -1620 1008 -560 -972 -784 -1944) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1620
Arg4: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (1536 -3240
 -4860 -6480 2016 -1120 -1944 -1568 -3888) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (1536 -3240 -4860 
-6480 2016 -1120 -1944 -1568 -3888) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (1536 -3240 -4860 
-6480 2016 -1120 -1944 -1568 -3888) 2)
poly_contentputin => 4
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0
)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (384 -810 -1215 -1620 504 -280 -486 -392 -972) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (1 0 0 0 0 1
 0 . #2#) (1 0 0 0 0 0 0 0 1)) (4 5 3 6) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0 0 0 1 . #1#) (1 0 0 0 0 1
 0 . #2#) (1 0 0 0 0 0 0 0 1)) (4 5 3 6) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 1 0 1 . #2=(0 . #1=(0))) (2 0 0 1 0
 0 0 1 . #1#) (1 0 0 0 0 1 0 . #2#) (1 0 0 0 0 0 0 0 1)) (4 5 3 6) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 
2) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)) (108 135 
64) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 56
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 72
poly_paircomb => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)
 (0 0 0 0 0 0 0 0 0)) (3072 3840 4608 -3584) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (3072 3840 4608 -3584) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (3072 3840 4608 -3584) 1)
poly_contentputin => 256
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 
2) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 1 0 0 0 1 . #1=(0)) (1 0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 0 0 1)
) (5 3 6) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 4
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . 
#1=(0)) (1 0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 0 1)) (-60 
-72 60 36 56 72) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #1=(0)) (1 
0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 0 1)) (-60 -72 60 36 56 
72) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #1=(0)) (1 
0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 0 1)) (-60 -72 60 36 56 
72) 2)
poly_contentputin => 4
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0
 0 1 0 0 0 1 . #1=(0)) (1 0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 
0 0 1)) (15 18 -15 -9 -14 -18) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0
)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (384 -810 -1215 -1620 504 -280 -486 -392 -972) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0
)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (384 -810 -1215 -1620 504 -280 -486 -392 -972) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #1=(0)) (1 0 0 0 0 1 0 0 . #1#)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 0 1)) (18 -15 -9 -14 -18) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 15
Arg4: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #1=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 1 0 0) (1 0 0 0
 0 0 0 0 1)) (36 -30 -45 -60 -18 -28 -36) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 1 0 0 0 1 . #1=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 0 0 0 1 0 0 . #1#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 0 1)) (-30 -45 -60 -18 
-28 -36) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 36
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0
 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #
2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (17640 
26460 35280 -18144 10080 10584 -10752 14112 21168) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (17640 26460 35280 
-18144 10080 10584 -10752 14112 21168) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (17640 26460 35280 
-18144 10080 10584 -10752 14112 21168) 2)
poly_contentputin => 84
poly_normalizebycontentputin => (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 
0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (210 315 420 -216 120 126 -128 168 252) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 
2) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 2) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (1 
2) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #2=(0
))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #2#) (1 0 0 0 0 0 0 0 1)) (315 420 -216 120 126 -128 168 252) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 210
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 1 0 0 0 0 1)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (5040 -22050 30240 -15552 8640 
9072 -9216 -1344 18144) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (5040 -22050 30240 -15552 8640 9072 -9216 
-1344 18144) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (5040 -22050 30240 -15552 8640 9072 -9216 
-1344 18144) 2)
poly_contentputin => 6
poly_normalizebycontentputin => (p ((2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0
 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (840 -3675 5040 
-2592 1440 1512 -1536 -224 3024) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0
)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (384 -810 -1215 -1620 504 -280 -486 -392 -972) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0
)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (384 -810 -1215 -1620 504 -280 -486 -392 -972) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-3675 5040 -2592 1440 1512 -1536 -224 3024) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 840
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (-56700 -15120 60480 -31104 17280
 18144 -18432 9072 36288) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (-56700 -15120 60480 -31104 17280 18144 
-18432 9072 36288) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (-56700 -15120 60480 -31104 17280 18144 
-18432 9072 36288) 2)
poly_contentputin => 36
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0
 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 
864 -480 -504 512 -252 -1008) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 1 0 0 0 1)) (2) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (-420 1680 3150 -864 480 504 -512
 252 1008) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (-420 1680 3150 -864 480 504 -512 252 1008) 
2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (-420 1680 3150 -864 480 504 -512 252 1008) 
2)
poly_contentputin => 2
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 
432 -240 -252 256 -126 -504) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 
432 -240 -252 256 -126 -504) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0
 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 
864 -480 -504 512 -252 -1008) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0
)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (384 -810 -1215 -1620 504 -280 -486 -392 -972) 2)
core_constructmodule => ((lp (p (#2=(1 0 0 0 1 0 0 0 0) #3=(1 0 0 0 0 1 . #5=(0 
0 0)) #8=(1 0 0 0 0 0 1 . #6=(0 0)) . #4=((0 0 0 0 . #1=(0 0 0 0 0)))) (12 15 18
 -14) 1) (sgn 0 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 0 1 . #1#) #2# #3# . #4#) (72
 84 105 64) 1) (sgn 1 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 1 0 0 0 . #5#) #3#) (4 
9) 1) (sgn 2 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 1 0 0 . #7=(0 0 0 . #6#)) (1 0 0 1
 . #7#) #8#) (9 -7 -8) 1) (sgn 3 (0 0 0 0 0 0 0 0 0))) (lp (p (#10=(2 0 0 0 0 0 
1 1 0) #11=(2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) . #12=(#14=(1 0 1 0 0 . #9=(0
 0 0 . #17=(0))) #15=(1 0 0 0 1 . #9#) #16=(1 0 0 0 0 1 0 0 . #13=(0)) (1 0 0 0 
0 0 1 0 0) (1 0 0 0 0 0 0 1 0) #18=(1 0 0 0 0 0 0 0 1))) (210 -840 -1575 432 
-240 -252 256 -126 -504) 2) (sgn 4 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 1 0 
1 0) #10# #11# . #12#) (1575 420 -1680 864 -480 -504 512 -252 -1008) 2) (sgn 5 (
0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #13#) #20=(2
 0 0 0 1 0 0 1 . #19=(0)) #11# #14# #15# #16# (1 0 0 0 0 0 0 1 . #17#) #18#) (
384 -810 -1215 -1620 504 -280 -486 -392 -972) 2) (sgn 6 (0 0 0 0 0 0 0 0 0))) (
lp (p ((2 0 0 0 0 1 1 0 . #19#) #20# #11#) (2 3 4) 2) (sgn 7 (0 0 0 0 0 0 0 0 0)
)))
Calling core_groebner1 from f5_groebner_poly2poly
Arg1: ((lp (p (#2=(1 0 0 0 1 0 0 0 0) #3=(1 0 0 0 0 1 . #5=(0 0 0)) #8=(1 0 0 0 
0 0 1 . #6=(0 0)) . #4=((0 0 0 0 . #1=(0 0 0 0 0)))) (12 15 18 -14) 1) (sgn 0 (0
 0 0 0 0 0 0 0 0))) (lp (p ((1 0 0 1 . #1#) #2# #3# . #4#) (72 84 105 64) 1) (
sgn 1 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 1 0 0 0 . #5#) #3#) (4 9) 1) (sgn 2 (0 
0 0 0 0 0 0 0 0))) (lp (p ((1 1 0 0 . #7=(0 0 0 . #6#)) (1 0 0 1 . #7#) #8#) (9 
-7 -8) 1) (sgn 3 (0 0 0 0 0 0 0 0 0))) (lp (p (#10=(2 0 0 0 0 0 1 1 0) #11=(2 0 
0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) . #12=(#14=(1 0 1 0 0 . #9=(0 0 0 . #17=(0)))
 #15=(1 0 0 0 1 . #9#) #16=(1 0 0 0 0 1 0 0 . #13=(0)) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) #18=(1 0 0 0 0 0 0 0 1))) (210 -840 -1575 432 -240 -252 256 -126 
-504) 2) (sgn 4 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 1 0 1 0) #10# #11# . #
12#) (1575 420 -1680 864 -480 -504 512 -252 -1008) 2) (sgn 5 (0 0 0 0 0 0 0 0 0)
)) (lp (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #13#) #20=(2 0 0 0 1 0 0 1 . #
19=(0)) #11# #14# #15# #16# (1 0 0 0 0 0 0 1 . #17#) #18#) (384 -810 -1215 -1620
 504 -280 -486 -392 -972) 2) (sgn 6 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 1 1
 0 . #19#) #20# #11#) (2 3 4) 2) (sgn 7 (0 0 0 0 0 0 0 0 0))))
(uwuw ((lp (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0
0 0 0 0 0 0 0)) (12 15 18 -14) 1) (sgn 0 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 0 1
0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (72 84
105 64) 1) (sgn 1 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 1 0 0 0 0 0 0) (1 0 0 0 0 1
0 0 0)) (4 9) 1) (sgn 2 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 1 0 0 0 0 0 0 0) (1 0 0
1 0 0 0 0 0) (1 0 0 0 0 0 1 0 0)) (9 -7 -8) 1) (sgn 3 (0 0 0 0 0 0 0 0 0))) (lp
(p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 0 0 0
0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504) 2) (sgn 4 (
0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0
0 0 0 1) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504
512 -252 -1008) 2) (sgn 5 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 0 2 0 0) (2 0
0 1 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 0 0 0 0) (1 0
0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (384
-810 -1215 -1620 504 -280 -486 -392 -972) 2) (sgn 6 (0 0 0 0 0 0 0 0 0))) (lp (p
((2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2) (sgn 7
(0 0 0 0 0 0 0 0 0)))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 
0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 . #1#)) (72 84 105 64) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1
 . #1#) (1 0 0 0 0 0 1 . #2#)) (9 -7 -8) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 
432 -240 -252 256 -126 -504) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0
 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 
864 -480 -504 512 -252 -1008) 2)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg2: (1 0 0 0 0 0 1 0 0)
Arg3: 1575
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 2 1 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
) (88200 1323000 2480625 -352800 -680400 378000 396900 181440 -100800 -509040 
107520 198450 -52920 793800 -211680) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 2 1 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0
 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (88200 
1323000 2480625 -352800 -680400 378000 396900 181440 -100800 -509040 107520 
198450 -52920 793800 -211680) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 2 1 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0
 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (88200 
1323000 2480625 -352800 -680400 378000 396900 181440 -100800 -509040 107520 
198450 -52920 793800 -211680) 3)
poly_contentputin => 105
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 2 1 0) (3 0 0 1 0 1 0 0 1) (3 0
 0 0 1 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0
 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0
 0 0 0 0 2 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1)) (840 12600 23625 -3360 -6480 3600 3780 1728 -960 -4848 1024 
1890 -504 7560 -2016) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (12600 23625 -3360 -6480 3600
 3780 1728 -960 -4848 1024 1890 -504 7560 -2016) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 840
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 1 0 1 0 1)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (2646000 4961250 1323000 -1360800 
756000 793800 -806400 396900 1587600) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 1 0 0 1) (3 0 0 0 1 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (4961250 1323000 -1360800 756000 793800 -806400 396900 1587600) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2646000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 1 0 1 0 1)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (134946000 -277830000 95256000 
-97977600 54432000 57153600 -58060800 28576800 -55036800) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 0 0 1) (3 0 0 0 1 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-277830000 95256000 -97977600 54432000 57153600 -58060800 28576800 
-55036800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 134946000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 0 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-5358150000 1143072000 -2429028000 
-1175731200 653184000 685843200 -696729600 342921600 1228802400) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 2 0 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-5358150000 1143072000 -2429028000 -1175731200 
653184000 685843200 -696729600 342921600 1228802400) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 2 0 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-5358150000 1143072000 -2429028000 -1175731200 
653184000 685843200 -696729600 342921600 1228802400) 3)
poly_contentputin => 680400
poly_normalizebycontentputin => (p ((3 0 0 0 0 2 0 0 1) (3 0 0 0 1 0 1 0 1) (3 0
 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0
 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (7875 -1680 3570 1728 
-960 -1008 1024 -504 -1806) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0
)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 
1)) (384 -810 -1215 -1620 504 -280 -486 -392 -972) 2)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg2: (1 0 0 0 0 0 0 1 0)
Arg3: 384
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 1 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 1 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1)) (-170100 -255150 322560 604800 -340200 -165888 92160 96768
 -98304 105840 -58800 -102060 48384 -82320 193536 -204120) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 1 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (-170100 -255150 322560 604800 -340200 -165888 92160 96768 -98304 
105840 -58800 -102060 48384 -82320 193536 -204120) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 1 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (-170100 -255150 322560 604800 -340200 -165888 92160 96768 -98304 
105840 -58800 -102060 48384 -82320 193536 -204120) 3)
poly_contentputin => 6
poly_normalizebycontentputin => (p ((3 0 0 1 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0
 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0
 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0
 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (28350 42525 -53760 -100800 56700 27648 
-15360 -16128 16384 -17640 9800 17010 -8064 13720 -32256 34020) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 2 0) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 1 0
 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (42525 
-53760 -100800 56700 27648 -15360 -16128 16384 -17640 9800 17010 -8064 13720 
-32256 34020) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 28350
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 2 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 1 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1)) (680400 -2976750 -3870720 -7257600 4082400 1990656 
-1105920 -1161216 1179648 -1270080 705600 1224720 -580608 -826560 -2322432 
2449440) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 2 0) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 1 0
 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-2976750
 -3870720 -7257600 4082400 1990656 -1105920 -1161216 1179648 -1270080 705600 
1224720 -580608 -826560 -2322432 2449440) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 680400
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 2 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 1 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1)) (-45927000 -12247200 -46448640 -87091200 48988800 23887872
 -13271040 -13934592 14155776 -15240960 8467200 14696640 -6967296 -393120 
-27869184 29393280) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 2 0) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 1 0
 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-12247200 -46448640 -87091200 48988800 23887872 -13271040 -13934592 14155776 
-15240960 8467200 14696640 -6967296 -393120 -27869184 29393280) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -45927000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)
) (-73156608000 -137168640000 37623398400 -20901888000 -21946982400 22295347200 
15676416000 -8709120000 12541132800 -12192768000 -43893964800) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (-137168640000 37623398400 
-20901888000 -21946982400 22295347200 15676416000 -8709120000 12541132800 
-12192768000 -43893964800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -73156608000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)
) (-3730987008000 7681443840000 2708884684800 -1504935936000 -1580182732800 
1605264998400 1128701952000 -627056640000 902961561600 -877879296000 
1521657446400) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (7681443840000 2708884684800 
-1504935936000 -1580182732800 1605264998400 1128701952000 -627056640000 
902961561600 -877879296000 1521657446400) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3730987008000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)
) (148142131200000 67157766144000 32506616217600 -18059231232000 -18962192793600
 19263179980800 13544423424000 -7524679680000 10835538739200 -10534551552000 
-33973928755200) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (
148142131200000 67157766144000 32506616217600 -18059231232000 -18962192793600 
19263179980800 13544423424000 -7524679680000 10835538739200 -10534551552000 
-33973928755200) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (
148142131200000 67157766144000 32506616217600 -18059231232000 -18962192793600 
19263179980800 13544423424000 -7524679680000 10835538739200 -10534551552000 
-33973928755200) 3)
poly_contentputin => 18811699200
poly_normalizebycontentputin => (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (2 0
 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0
 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 0 1 0 1)) (7875 3570 1728 -960 -1008 1024 720 -400 576 -560 -1806) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg2: (1 0 0 0 0 0 0 1 0)
Arg3: 7875
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 210
poly_paircomb => (p ((4 0 0 0 0 0 2 1 1) (4 0 0 1 0 1 0 0 2) (4 0 0 0 1 1 0 0 2)
 (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0)
 (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 1 0 0 2)) (749700 6615000 
12403125 362880 -201600 -211680 215040 151200 -84000 120960 -117600 -3402000 
1890000 1984500 -2016000 992250 -379260 3969000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 0 0 0 2 1 1) (4 0 0 1 0 1 0 0 2) (4 0 0 0 1 1 0 0 2) (3 0 1 0 0
 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 1 0 0 2)) (749700 6615000 12403125 
362880 -201600 -211680 215040 151200 -84000 120960 -117600 -3402000 1890000 
1984500 -2016000 992250 -379260 3969000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 0 0 0 2 1 1) (4 0 0 1 0 1 0 0 2) (4 0 0 0 1 1 0 0 2) (3 0 1 0 0
 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 1 0 0 2)) (749700 6615000 12403125 
362880 -201600 -211680 215040 151200 -84000 120960 -117600 -3402000 1890000 
1984500 -2016000 992250 -379260 3969000) 4)
poly_contentputin => 105
poly_normalizebycontentputin => (p ((4 0 0 0 0 0 2 1 1) (4 0 0 1 0 1 0 0 2) (4 0
 0 0 1 1 0 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0
 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0
 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0
 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 1 0 0 2)) (
7140 63000 118125 3456 -1920 -2016 2048 1440 -800 1152 -1120 -32400 18000 18900 
-19200 9450 -3612 37800) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 1 0 1 0 0 2) (4 0 0 0 1 1 0 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1
 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 1 0 0 2)) (63000 118125 3456 -1920 -2016 2048 1440 -800 
1152 -1120 -32400 18000 18900 -19200 9450 -3612 37800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 7140
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 210
poly_paircomb => (p ((4 0 0 1 0 1 0 0 2) (4 0 0 0 1 1 0 0 2) (4 0 0 1 0 0 1 0 2)
 (4 0 0 0 1 0 1 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
) (13230000 24806250 5997600 11245500 725760 -403200 -423360 430080 302400 
-168000 241920 -235200 -6804000 3780000 3969000 -3084480 1713600 -2232720 
-1827840 1984500 141120 7938000 3598560) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 1 1 0 0 2) (4 0 0 1 0 0 1 0 2) (4 0 0 0 1 0 1 0 2) (3 0 1 0 0
 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)) (24806250 5997600 11245500 
725760 -403200 -423360 430080 302400 -168000 241920 -235200 -6804000 3780000 
3969000 -3084480 1713600 -2232720 -1827840 1984500 141120 7938000 3598560) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 13230000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (3 0 0 0 0 1 0 0 2)
Arg6: 72
poly_paircomb => (p ((4 0 0 0 1 1 0 0 2) (4 0 0 0 0 2 0 0 2) (4 0 0 1 0 0 1 0 2)
 (4 0 0 0 1 0 1 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
) (674730000 -1389150000 431827200 809676000 52254720 -29030400 -30481920 
30965760 21772800 -12096000 17418240 -16934400 -489888000 272160000 285768000 
-222082560 123379200 -160755840 -131604480 142884000 10160640 -275184000 
259096320) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 2 0 0 2) (4 0 0 1 0 0 1 0 2) (4 0 0 0 1 0 1 0 2) (3 0 1 0 0
 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)) (-1389150000 431827200 
809676000 52254720 -29030400 -30481920 30965760 21772800 -12096000 17418240 
-16934400 -489888000 272160000 285768000 -222082560 123379200 -160755840 
-131604480 142884000 10160640 -275184000 259096320) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 674730000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (3 0 0 0 0 1 0 0 2)
Arg6: 12
poly_paircomb => (p ((4 0 0 0 0 2 0 0 2) (4 0 0 1 0 0 1 0 2) (4 0 0 0 1 0 1 0 2)
 (4 0 0 0 0 1 1 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
) (-26790750000 5181926400 9716112000 -12145140000 627056640 -348364800 
-365783040 371589120 261273600 -145152000 209018880 -203212800 -5878656000 
3265920000 3429216000 -2664990720 1480550400 -1929070080 -1579253760 1714608000 
121927680 6144012000 3109155840) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 1 0 0 1 0 2) (4 0 0 0 1 0 1 0 2) (4 0 0 0 0 1 1 0 2) (3 0 1 0 0
 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)) (5181926400 9716112000 
-12145140000 627056640 -348364800 -365783040 371589120 261273600 -145152000 
209018880 -203212800 -5878656000 3265920000 3429216000 -2664990720 1480550400 
-1929070080 -1579253760 1714608000 121927680 6144012000 3109155840) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -26790750000
Arg4: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-1680 3570 1728 -960 -1008 1024 -504 -1806) 3)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 7875
poly_paircomb => (p ((4 0 0 1 0 0 1 0 2) (4 0 0 0 1 0 1 0 2) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 1 0 2)) (40807670400000 31505922000000 4938071040000 
-2743372800000 -2880541440000 2926264320000 2057529600000 -1143072000000 
1646023680000 -1600300800000 -20986801920000 11659334400000 12242301120000 
-12436623360000 960180480000 24484602240000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 1 0 1 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 1 0 2)) (
31505922000000 4938071040000 -2743372800000 -2880541440000 2926264320000 
2057529600000 -1143072000000 1646023680000 -1600300800000 -20986801920000 
11659334400000 12242301120000 -12436623360000 960180480000 24484602240000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 40807670400000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (3 0 0 0 0 0 1 0 2)
Arg6: 72
poly_paircomb => (p ((4 0 0 0 1 0 1 0 2) (4 0 0 0 0 1 1 0 2) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 1 0 2)) (-1159417929600000 -4284805392000000 355541114880000 
-197522841600000 -207398983680000 210691031040000 148142131200000 
-82301184000000 118513704960000 -115221657600000 -1511049738240000 
839472076800000 881445680640000 -895436881920000 69132994560000 -848799544320000
) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 1 1 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 1 0 2)) (
-4284805392000000 355541114880000 -197522841600000 -207398983680000 
210691031040000 148142131200000 -82301184000000 118513704960000 -115221657600000
 -1511049738240000 839472076800000 881445680640000 -895436881920000 
69132994560000 -848799544320000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1159417929600000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (3 0 0 0 0 0 1 0 2)
Arg6: 12
poly_paircomb => (p ((4 0 0 0 0 1 1 0 2) (4 0 0 0 0 0 2 0 2) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 1 0 2)) (-34026395760000000 20869522732800000 4266493378560000 
-2370274099200000 -2488787804160000 2528292372480000 1777705574400000 
-987614208000000 1422164459520000 -1382659891200000 -18132596858880000 
10073664921600000 10577348167680000 -10745242583040000 829595934720000 
-26417445546240000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 0 2 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 1 0 2)) (
20869522732800000 4266493378560000 -2370274099200000 -2488787804160000 
2528292372480000 1777705574400000 -987614208000000 1422164459520000 
-1382659891200000 -18132596858880000 10073664921600000 10577348167680000 
-10745242583040000 829595934720000 -26417445546240000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -34026395760000000
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 7875
poly_paircomb => (p ((4 0 0 0 0 0 2 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0)
 (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0)
 (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 0 0 1 0 2)) (
285821724384000000000 33598635356160000000 -18665908531200000000 
-19599203957760000000 19910302433280000000 13999431398400000000 
-7777461888000000000 11199545118720000000 -10888446643200000000 
-83996588390400000000 46664771328000000000 48998009894400000000 
-49775756083200000000 24499004947200000000 -13610558304000000000 
26132271943680000000 -19054781625600000000 -269489054419200000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 0 0 0 2 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 0 0 1 0 2)) (285821724384000000000 
33598635356160000000 -18665908531200000000 -19599203957760000000 
19910302433280000000 13999431398400000000 -7777461888000000000 
11199545118720000000 -10888446643200000000 -83996588390400000000 
46664771328000000000 48998009894400000000 -49775756083200000000 
24499004947200000000 -13610558304000000000 26132271943680000000 
-19054781625600000000 -269489054419200000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 0 0 0 2 0 2) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 0 0 1 0 2)) (285821724384000000000 
33598635356160000000 -18665908531200000000 -19599203957760000000 
19910302433280000000 13999431398400000000 -7777461888000000000 
11199545118720000000 -10888446643200000000 -83996588390400000000 
46664771328000000000 48998009894400000000 -49775756083200000000 
24499004947200000000 -13610558304000000000 26132271943680000000 
-19054781625600000000 -269489054419200000000) 4)
poly_contentputin => 77774618880000000
poly_normalizebycontentputin => (p ((4 0 0 0 0 0 2 0 2) (3 0 1 0 0 0 1 1 0) (3 0
 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0
 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0
 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0
 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 0 0 1 0 2)) (
3675 432 -240 -252 256 180 -100 144 -140 -1080 600 630 -640 315 -175 336 -245 
-3465) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0
 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 0 0 0 0 1 0 2)) (432 -240 -252 256 180 -100 144 -140 -1080 600 
630 -640 315 -175 336 -245 -3465) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3675
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 384
poly_paircomb => (p ((4 0 0 1 0 0 0 1 2) (4 0 0 0 1 0 0 1 2) (4 0 0 1 0 0 0 0 3)
 (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0)
 (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (2976750 4465125 5953500 165888 -92160
 -96768 98304 69120 -38400 55296 -53760 -414720 230400 241920 -245760 120960 
-67200 129024 -94080 -1852200 1029000 1786050 -1330560 1440600 3572100) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 1 0 0 0 1 2) (4 0 0 0 1 0 0 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0
 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (2976750 4465125 5953500 165888 -92160 -96768 
98304 69120 -38400 55296 -53760 -414720 230400 241920 -245760 120960 -67200 
129024 -94080 -1852200 1029000 1786050 -1330560 1440600 3572100) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 1 0 0 0 1 2) (4 0 0 0 1 0 0 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0
 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (2976750 4465125 5953500 165888 -92160 -96768 
98304 69120 -38400 55296 -53760 -414720 230400 241920 -245760 120960 -67200 
129024 -94080 -1852200 1029000 1786050 -1330560 1440600 3572100) 4)
poly_contentputin => 3
poly_normalizebycontentputin => (p ((4 0 0 1 0 0 0 1 2) (4 0 0 0 1 0 0 1 2) (4 0
 0 1 0 0 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0
 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0
 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0
 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0
 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0
 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (992250 1488375 1984500
 55296 -30720 -32256 32768 23040 -12800 18432 -17920 -138240 76800 80640 -81920 
40320 -22400 43008 -31360 -617400 343000 595350 -443520 480200 1190700) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 1 0 0 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1
 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (1488375 1984500 55296 -30720 -32256 32768 23040 -12800 18432 -17920 
-138240 76800 80640 -81920 40320 -22400 43008 -31360 -617400 343000 595350 
-443520 480200 1190700) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 992250
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (3 0 0 0 0 0 0 1 2)
Arg6: 72
poly_paircomb => (p ((4 0 0 0 1 0 0 1 2) (4 0 0 0 0 1 0 1 2) (4 0 0 1 0 0 0 0 3)
 (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0)
 (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (23814000 -104186250 142884000 3981312
 -2211840 -2322432 2359296 1658880 -921600 1327104 -1290240 -9953280 5529600 
5806080 -5898240 2903040 -1612800 3096576 -2257920 -44452800 24696000 42865200 
-31933440 -28929600 85730400) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 1 0 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1
 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (-104186250 142884000 3981312 -2211840 -2322432 2359296 1658880 
-921600 1327104 -1290240 -9953280 5529600 5806080 -5898240 2903040 -1612800 
3096576 -2257920 -44452800 24696000 42865200 -31933440 -28929600 85730400) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 23814000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (3 0 0 0 0 0 0 1 2)
Arg6: 12
poly_paircomb => (p ((4 0 0 0 0 1 0 1 2) (4 0 0 0 0 0 1 1 2) (4 0 0 1 0 0 0 0 3)
 (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0)
 (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-1607445000 -428652000 1714608000 
47775744 -26542080 -27869184 28311552 19906560 -11059200 15925248 -15482880 
-119439360 66355200 69672960 -70778880 34836480 -19353600 37158912 -27095040 
-533433600 296352000 514382400 -383201280 -13759200 1028764800) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 0 1 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1
 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (-428652000 1714608000 47775744 -26542080 -27869184 28311552 19906560
 -11059200 15925248 -15482880 -119439360 66355200 69672960 -70778880 34836480 
-19353600 37158912 -27095040 -533433600 296352000 514382400 -383201280 -13759200
 1028764800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1607445000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 1575
poly_paircomb => (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2)) (75246796800 -41803776000 -43893964800 44590694400 
31352832000 -17418240000 25082265600 -24385536000 -188116992000 104509440000 
109734912000 -111476736000 54867456000 -30481920000 58525286400 -42674688000 
548674560000 -304819200000 219469824000 -426746880000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)) (
-41803776000 -43893964800 44590694400 31352832000 -17418240000 25082265600 
-24385536000 -188116992000 104509440000 109734912000 -111476736000 54867456000 
-30481920000 58525286400 -42674688000 548674560000 -304819200000 219469824000 
-426746880000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 75246796800
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 1 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0)
 (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 1 0 0 0 0 0 1)
) (-8778792960000 -9217732608000 9364045824000 6584094720000 -3657830400000 
5267275776000 -5120962560000 63207309312000 118513704960000 -39504568320000 
21946982400000 23044331520000 -23410114560000 11522165760000 -6401203200000 
12290310144000 -8961684480000 115221657600000 -64012032000000 46088663040000 
-89616844800000 -32506616217600 18059231232000 18962192793600 -19263179980800 
9481096396800 37924385587200) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1
 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 1 0 0 0 0 0 1)) (-9217732608000 9364045824000
 6584094720000 -3657830400000 5267275776000 -5120962560000 63207309312000 
118513704960000 -39504568320000 21946982400000 23044331520000 -23410114560000 
11522165760000 -6401203200000 12290310144000 -8961684480000 115221657600000 
-64012032000000 46088663040000 -89616844800000 -32506616217600 18059231232000 
18962192793600 -19263179980800 9481096396800 37924385587200) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -8778792960000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1)
 (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 1 0 0 0 0 0 1)
) (21069103104000 270386823168000 79009136640000 -43893964800000 63207309312000 
-61451550720000 758487711744000 1422164459520000 -474054819840000 
263363788800000 276531978240000 -280921374720000 138265989120000 -76814438400000
 147483721728000 -107540213760000 1382659891200000 -768144384000000 
553063956480000 -1075402137600000 -390079394611200 216710774784000 
227546313523200 -231158159769600 113773156761600 -122903101440000 
455092627046400) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 1 0 0 0 0 0 1)) (270386823168000 
79009136640000 -43893964800000 63207309312000 -61451550720000 758487711744000 
1422164459520000 -474054819840000 263363788800000 276531978240000 
-280921374720000 138265989120000 -76814438400000 147483721728000 
-107540213760000 1382659891200000 -768144384000000 553063956480000 
-1075402137600000 -390079394611200 216710774784000 227546313523200 
-231158159769600 113773156761600 -122903101440000 455092627046400) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 21069103104000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0)
 (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1)
) (417010223185920000 124439390208000000 -69132994560000000 99551512166400000 
-96786192384000000 1194618145996800000 2239909023744000000 -746636341248000000 
35396093214720000 414797967360000000 435537865728000000 -442451165184000000 
217768932864000000 -120982740480000000 232286861721600000 -169375836672000000 
2177689328640000000 -1209827404800000000 871075731456000000 -1693758366720000000
 -614375046512640000 341319470284800000 358385443799040000 -382277806718976000 
10113169489920000 10618827964416000 -10787380789248000 179192721899520000 
-188262970785792000 716770887598080000 21237655928832000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0
 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1)) (124439390208000000 
-69132994560000000 99551512166400000 -96786192384000000 1194618145996800000 
2239909023744000000 -746636341248000000 35396093214720000 414797967360000000 
435537865728000000 -442451165184000000 217768932864000000 -120982740480000000 
232286861721600000 -169375836672000000 2177689328640000000 -1209827404800000000 
871075731456000000 -1693758366720000000 -614375046512640000 341319470284800000 
358385443799040000 -382277806718976000 10113169489920000 10618827964416000 
-10787380789248000 179192721899520000 -188262970785792000 716770887598080000 
21237655928832000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 417010223185920000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1)) (
26132271943680000000 -14517928857600000000 20905817554944000000 
-20325100400640000000 250869810659328000000 470380894986240000000 
-156793631662080000000 357721767051264000000 743898674663424000000 
91462951802880000000 -92914744688640000000 45731475901440000000 
-25406375500800000000 48780240961536000000 -35568925701120000000 
457314759014400000000 -254063755008000000000 182925903605760000000 
-355689257011200000000 -129018759767654400000 71677088759808000000 
75260943197798400000 -260426755827302400000 102206219157504000000 
107316530115379200000 -109019967101337600000 37630471598899200000 
13008064256409600000 150521886395596800000 214633060230758400000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0
 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 0 0 1 0 1)) (-14517928857600000000 20905817554944000000 
-20325100400640000000 250869810659328000000 470380894986240000000 
-156793631662080000000 357721767051264000000 743898674663424000000 
91462951802880000000 -92914744688640000000 45731475901440000000 
-25406375500800000000 48780240961536000000 -35568925701120000000 
457314759014400000000 -254063755008000000000 182925903605760000000 
-355689257011200000000 -129018759767654400000 71677088759808000000 
75260943197798400000 -260426755827302400000 102206219157504000000 
107316530115379200000 -109019967101337600000 37630471598899200000 
13008064256409600000 150521886395596800000 214633060230758400000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 26132271943680000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 0 2 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1)) (
-58071715430400000000 -235190447493120000000 83623270219776000000 
-81300401602560000000 1003479242637312000000 1881523579944960000000 
-627174526648320000000 1430887068205056000000 2975594698653696000000 
365851807211520000000 -371658978754560000000 182925903605760000000 
-101625502003200000000 195120963846144000000 -142275702804480000000 
1829259036057600000000 -1016255020032000000000 731703614423040000000 
-1422757028044800000000 -516075039070617600000 286708355039232000000 
301043772791193600000 -1041707023309209600000 408824876630016000000 
429266120461516800000 -436079868405350400000 150521886395596800000 
52032257025638400000 602087545582387200000 858532240923033600000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0
 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 0 0 1 0 1)) (-235190447493120000000 83623270219776000000 
-81300401602560000000 1003479242637312000000 1881523579944960000000 
-627174526648320000000 1430887068205056000000 2975594698653696000000 
365851807211520000000 -371658978754560000000 182925903605760000000 
-101625502003200000000 195120963846144000000 -142275702804480000000 
1829259036057600000000 -1016255020032000000000 731703614423040000000 
-1422757028044800000000 -516075039070617600000 286708355039232000000 
301043772791193600000 -1041707023309209600000 408824876630016000000 
429266120461516800000 -436079868405350400000 150521886395596800000 
52032257025638400000 602087545582387200000 858532240923033600000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -58071715430400000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 2 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1)) (
-1951209638461440000000 2048770120384512000000 -975604819230720000000 
12041750911647744000000 22578282959339520000000 -7526094319779840000000 
17170644818460672000000 35707136383844352000000 4390221686538240000000 
-4459907745054720000000 2195110843269120000000 -1219506024038400000000 
2341451566153728000000 -1707308433653760000000 21951108432691200000000 
-12195060240384000000000 8780443373076480000000 -17073084336537600000000 
-6192900468847411200000 3440500260470784000000 3612525273494323200000 
-12500484279710515200000 4905898519560192000000 5151193445538201600000 
-5232958420864204800000 1806262636747161600000 624387084307660800000 
-813004016025600000000 7225050546988646400000 10302386891076403200000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1
 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 0 0 1 0 1)) (2048770120384512000000 -975604819230720000000 
12041750911647744000000 22578282959339520000000 -7526094319779840000000 
17170644818460672000000 35707136383844352000000 4390221686538240000000 
-4459907745054720000000 2195110843269120000000 -1219506024038400000000 
2341451566153728000000 -1707308433653760000000 21951108432691200000000 
-12195060240384000000000 8780443373076480000000 -17073084336537600000000 
-6192900468847411200000 3440500260470784000000 3612525273494323200000 
-12500484279710515200000 4905898519560192000000 5151193445538201600000 
-5232958420864204800000 1806262636747161600000 624387084307660800000 
-813004016025600000000 7225050546988646400000 10302386891076403200000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1951209638461440000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1)
 (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (4046320987759411200000000 
-1536577590288384000000000 18965757685845196800000000 35560795660959744000000000
 -11853598553653248000000000 27043765589075558400000000 
56238739804554854400000000 6914599156297728000000000 -7024354698461184000000000 
3457299578148864000000000 -3278032192615219200000000 -1920721987860480000000000 
3687786216692121600000000 -2689010783004672000000000 34572995781488640000000000 
-19207219878604800000000000 13829198312595456000000000 
-26890107830046720000000000 -9753818238434672640000000 5418787910241484800000000
 5689727305753559040000000 -19688262740544061440000000 7726790168307302400000000
 8113129676722667520000000 -8241909512861122560000000 4530708780507463680000000 
-936580626461491200000000 -983409657784565760000000 1982428992676823040000000 
-1772186154132602880000000 11379454611507118080000000 16226259353445335040000000
 -1966819315569131520000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (-1536577590288384000000000 18965757685845196800000000 
35560795660959744000000000 -11853598553653248000000000 
27043765589075558400000000 56238739804554854400000000 6914599156297728000000000 
-7024354698461184000000000 3457299578148864000000000 -3278032192615219200000000 
-1920721987860480000000000 3687786216692121600000000 -2689010783004672000000000 
34572995781488640000000000 -19207219878604800000000000 
13829198312595456000000000 -26890107830046720000000000 
-9753818238434672640000000 5418787910241484800000000 5689727305753559040000000 
-19688262740544061440000000 7726790168307302400000000 8113129676722667520000000 
-8241909512861122560000000 4530708780507463680000000 -936580626461491200000000 
-983409657784565760000000 1982428992676823040000000 -1772186154132602880000000 
11379454611507118080000000 16226259353445335040000000 -1966819315569131520000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 4046320987759411200000000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1)) (-322681293960560640000000000 3982809114027491328000000000
 7467767088801546240000000000 -2489255696267182080000000000 
5679190773705867264000000000 11810135358956519424000000000 
1452065822822522880000000000 -1475114486676848640000000000 
726032911411261440000000000 2710522869268709376000000000 
5969603938270371840000000000 774435105505345536000000000 
-564692264430981120000000000 7260329114112614400000000000 
-4033516174507008000000000000 2904131645645045760000000000 
-5646922644309811200000000000 -2048301830071281254400000000 
1137945461150711808000000000 1194842734208247398400000000 
-4134535175514252902400000000 1622625935344533504000000000 
1703757232111760179200000000 -1730800997700835737600000000 
-796561822805498265600000000 774435105505345536000000000 
813156860780612812800000000 -619548084404276428800000000 
137677352089839206400000000 2389685468416494796800000000 
3407514464223520358400000000 1626313721561225625600000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (-322681293960560640000000000 3982809114027491328000000000 
7467767088801546240000000000 -2489255696267182080000000000 
5679190773705867264000000000 11810135358956519424000000000 
1452065822822522880000000000 -1475114486676848640000000000 
726032911411261440000000000 2710522869268709376000000000 
5969603938270371840000000000 774435105505345536000000000 
-564692264430981120000000000 7260329114112614400000000000 
-4033516174507008000000000000 2904131645645045760000000000 
-5646922644309811200000000000 -2048301830071281254400000000 
1137945461150711808000000000 1194842734208247398400000000 
-4134535175514252902400000000 1622625935344533504000000000 
1703757232111760179200000000 -1730800997700835737600000000 
-796561822805498265600000000 774435105505345536000000000 
813156860780612812800000000 -619548084404276428800000000 
137677352089839206400000000 2389685468416494796800000000 
3407514464223520358400000000 1626313721561225625600000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (-322681293960560640000000000 3982809114027491328000000000 
7467767088801546240000000000 -2489255696267182080000000000 
5679190773705867264000000000 11810135358956519424000000000 
1452065822822522880000000000 -1475114486676848640000000000 
726032911411261440000000000 2710522869268709376000000000 
5969603938270371840000000000 774435105505345536000000000 
-564692264430981120000000000 7260329114112614400000000000 
-4033516174507008000000000000 2904131645645045760000000000 
-5646922644309811200000000000 -2048301830071281254400000000 
1137945461150711808000000000 1194842734208247398400000000 
-4134535175514252902400000000 1622625935344533504000000000 
1703757232111760179200000000 -1730800997700835737600000000 
-796561822805498265600000000 774435105505345536000000000 
813156860780612812800000000 -619548084404276428800000000 
137677352089839206400000000 2389685468416494796800000000 
3407514464223520358400000000 1626313721561225625600000000) 4)
poly_contentputin => 21951108432691200000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0
 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0
 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0
 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0
 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0
 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0
 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0
 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0
 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (14700 -181440 -340200 113400 -258720 
-538020 -66150 67200 -33075 -123480 -271950 -35280 25725 -330750 183750 -132300 
257250 93312 -51840 -54432 188352 -73920 -77616 78848 36288 -35280 -37044 28224 
-6272 -108864 -155232 -74088) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1
 . #1#) (2 0 0 1 0 0 0 0 1)) (2 3 4) 2)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (3 4) 2)
Arg2: (1 0 0 0 0 0 0 0 1)
Arg3: 2
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 0 0 0 0 2 0 1) (3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 0 0 0 1 0 1)) (-7140 23625 31500 -3456 1920 2016 -2048 -1440 800 -1152 
1120 3612) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 2 0 1) (3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0
 0 1 0 1)) (-7140 23625 31500 -3456 1920 2016 -2048 -1440 800 -1152 1120 3612) 3
)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 2 0 1) (3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0
 0 1 0 1)) (-7140 23625 31500 -3456 1920 2016 -2048 -1440 800 -1152 1120 3612) 3
)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 2 0 1) (3 0 0 0 1 0 0 1 1) (3 0
 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0
 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0
 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (7140 -23625 -31500 3456 -1920 -2016 2048 
1440 -800 1152 -1120 -3612) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (3 4) 2)
Arg2: (1 0 0 0 0 0 0 1 0)
Arg3: 2
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 1 0 0 2 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (630 1680 3150 840
 -864 480 504 -512 252 1008) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 1 0 0 2 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0
 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (630 1680 3150 840 -864 480 
504 -512 252 1008) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 1 0 0 2 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0
 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (630 1680 3150 840 -864 480 
504 -512 252 1008) 3)
poly_contentputin => 2
poly_normalizebycontentputin => (p ((3 0 0 0 1 0 0 2 0) (3 0 0 1 0 1 0 0 1) (3 0
 0 0 1 1 0 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0
 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
315 840 1575 420 -432 240 252 -256 126 504) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (3 4) 2)
Arg2: (1 0 0 0 0 0 1 0 0)
Arg3: 2
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 1 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 1 0 1 1 0)
 (3 0 0 1 0 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (1620 2430 1152 
3240 1536 -1008 560 972 784 1944) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 1 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 1 0
 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (1620 2430 1152 3240 1536 
-1008 560 972 784 1944) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 1 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 1 0
 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (1620 2430 1152 3240 1536 
-1008 560 972 784 1944) 3)
poly_contentputin => 2
poly_normalizebycontentputin => (p ((3 0 0 1 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0
 0 0 1 0 1 1 0) (3 0 0 1 0 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0
 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
810 1215 576 1620 768 -504 280 486 392 972) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (-23625 
-31500 3456 -1920 -2016 2048 1440 -800 1152 -1120 -3612) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 7140
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (5783400 -396900 -529200 1327104 
-737280 -774144 786432 552960 -307200 442368 -430080 -3598560 1999200 3470040 
-1387008 2798880 6940080) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (-396900 -529200 1327104 -737280 -774144 786432 552960 -307200 442368
 -430080 -3598560 1999200 3470040 -1387008 2798880 6940080) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 5783400
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 1 0 0 0 0 2)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-514382400 -607257000 -38102400 
95551488 -53084160 -55738368 56623104 39813120 -22118400 31850496 -30965760 
-259096320 143942400 249842880 -99864576 -168618240 499685760) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (-607257000 -38102400 95551488 -53084160 -55738368 56623104 39813120 
-22118400 31850496 -30965760 -259096320 143942400 249842880 -99864576 -168618240
 499685760) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -514382400
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 1 0 0 0 0 2)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (428652000 9258883200 -457228800 
1146617856 -637009920 -668860416 679477248 477757440 -265420800 382205952 
-371589120 -3109155840 1727308800 2998114560 -1198374912 -9224772480 5996229120)
 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (9258883200 -457228800 1146617856 -637009920 -668860416 679477248 
477757440 -265420800 382205952 -371589120 -3109155840 1727308800 2998114560 
-1198374912 -9224772480 5996229120) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 428652000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (14402707200000 1805923123200 -1003290624000 -1053455155200 1070176665600 
752467968000 -418037760000 601974374400 -585252864000 -5267275776000 
2926264320000 4938071040000 -2106910310400 -14420996352000 9876142080000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1805923123200 -1003290624000
 -1053455155200 1070176665600 752467968000 -418037760000 601974374400 
-585252864000 -5267275776000 2926264320000 4938071040000 -2106910310400 
-14420996352000 9876142080000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 14402707200000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (12098274048000000 22684263840000000 379243855872000 
-210691031040000 -221225582592000 224737099776000 158018273280000 
-87787929600000 126414618624000 -122903101440000 -7328097423360000 
4071165235200000 4666477132800000 -4129544208384000 -1213668126720000 
9332954265600000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
22684263840000000 379243855872000 -210691031040000 -221225582592000 
224737099776000 158018273280000 -87787929600000 126414618624000 -122903101440000
 -7328097423360000 4071165235200000 4666477132800000 -4129544208384000 
-1213668126720000 9332954265600000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 12098274048000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (617011976448000000 -1270318775040000000 27305557622784000
 -15169754234880000 -15928241946624000 16181071183872000 11377315676160000 
-6320730931200000 9101852540928000 -8849023303680000 -527623014481920000 
293123896934400000 335986353561600000 -297327183003648000 -87384105123840000 
-102316831948800000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-1270318775040000000 27305557622784000 -15169754234880000 -15928241946624000 
16181071183872000 11377315676160000 -6320730931200000 9101852540928000 
-8849023303680000 -527623014481920000 293123896934400000 335986353561600000 
-297327183003648000 -87384105123840000 -102316831948800000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 617011976448000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (-24499004947200000000 -11106215576064000000 
327666691473408000 -182037050818560000 -191138903359488000 194172854206464000 
136527788113920000 -75848771174400000 109222230491136000 -106188279644160000 
-6331476173783040000 3517486763212800000 4031836242739200000 
-3567926196043776000 -1048609261486080000 7410365686886400000) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (-24499004947200000000 -11106215576064000000 327666691473408000 
-182037050818560000 -191138903359488000 194172854206464000 136527788113920000 
-75848771174400000 109222230491136000 -106188279644160000 -6331476173783040000 
3517486763212800000 4031836242739200000 -3567926196043776000 
-1048609261486080000 7410365686886400000) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (-24499004947200000000 -11106215576064000000 327666691473408000 
-182037050818560000 -191138903359488000 194172854206464000 136527788113920000 
-75848771174400000 109222230491136000 -106188279644160000 -6331476173783040000 
3517486763212800000 4031836242739200000 -3567926196043776000 
-1048609261486080000 7410365686886400000) 3)
poly_contentputin => 5925685248000
poly_normalizebycontentputin => (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0
 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0
 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0
 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (4134375 1874250 -55296 30720 32256 -32768 
-23040 12800 -18432 17920 1068480 -593600 -680400 602112 176960 -1250550) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (840 1575 420 -432 240 252 -256 126 504) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 315
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 2 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 1 0 1 0 0 1)
 (3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 0 0 1 0 0 1)) (-4725 -5670 10080 18900 5040 -5184 2880 3024 -3072 1512 
4410 6048) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 2 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0
 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)) (-5670 
10080 18900 5040 -5184 2880 3024 -3072 1512 4410 6048) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -4725
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 2 0) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)) (-6945750 15876000 29767500 -8164800 
4536000 4762800 -4838400 4082400 -2268000 2419200 5755050 9525600 -4762800) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 0 1 1)) (15876000 29767500 -8164800 4536000 4762800 -4838400 4082400 -2268000
 2419200 5755050 9525600 -4762800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -6945750
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)
) (3333960000 6251175000 -5834430000 -10939556250 -1714608000 952560000 
1000188000 -1016064000 3857868000 -2143260000 -1750329000 2286144000 333396000 
2000376000 -4500846000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)) (6251175000 -5834430000 
-10939556250 -1714608000 952560000 1000188000 -1016064000 3857868000 -2143260000
 -1750329000 2286144000 333396000 2000376000 -4500846000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3333960000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)
) (170031960000 -350065800000 -420078960000 -787648050000 -123451776000 
68584320000 72013536000 -73156608000 277766496000 -154314720000 -126023688000 
164602368000 24004512000 -69346368000 -324060912000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 0 0 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)) (-350065800000 -420078960000 
-787648050000 -123451776000 68584320000 72013536000 -73156608000 277766496000 
-154314720000 -126023688000 164602368000 24004512000 -69346368000 -324060912000)
 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 170031960000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)
) (-6751269000000 -3060575280000 -5040947520000 -9451776600000 -1481421312000 
823011840000 864162432000 -877879296000 3333197952000 -1851776640000 
-1512284256000 1975228416000 288054144000 1548291024000 -3888730944000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 0 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)) (-3060575280000 
-5040947520000 -9451776600000 -1481421312000 823011840000 864162432000 
-877879296000 3333197952000 -1851776640000 -1512284256000 1975228416000 
288054144000 1548291024000 -3888730944000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -6751269000000
Arg4: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-1680 3570 1728 -960 -1008 1024 -504 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 0 0 1 0 1 0 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 0 1 1)) (-11342131920000000 -39697461720000000
 -74432740725000000 26248933872000000 -14582741040000000 -15311878092000000 
15554923776000000 2268426384000000 -30623756184000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0
 0 0 1 1)) (-39697461720000000 -74432740725000000 26248933872000000 
-14582741040000000 -15311878092000000 15554923776000000 2268426384000000 
-30623756184000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -11342131920000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
) (170131978800000000 204158374560000000 -476369540640000000 -893192888700000000
 314987206464000000 -174992892480000000 -183742537104000000 186659085312000000 
27221116608000000 -158789846880000000 -367485074208000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 2 0 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (204158374560000000 
-476369540640000000 -893192888700000000 314987206464000000 -174992892480000000 
-183742537104000000 186659085312000000 27221116608000000 -158789846880000000 
-367485074208000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 170131978800000000
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 0 0 0 0 2 0 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
1000376035344000000000 -3751410132540000000000 -7033893998512500000000 
-293988059366400000000 163326699648000000000 171493034630400000000 
-174215146291200000000 2358029226168000000000 -1310016236760000000000 
-1446972479694000000000 1371944277043200000000 309640201416000000000 
-943211690467200000000 -2893944959388000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-3751410132540000000000 -7033893998512500000000 
-293988059366400000000 163326699648000000000 171493034630400000000 
-174215146291200000000 2358029226168000000000 -1310016236760000000000 
-1446972479694000000000 1371944277043200000000 309640201416000000000 
-943211690467200000000 -2893944959388000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1000376035344000000000
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-630236902266720000000000 -1485558412485840000000000 1620609177257280000000000 
-112891414796697600000000 62717452664832000000000 65853325298073600000000 
-66898616175820800000000 905483222848512000000000 -503046234915840000000000 
-555637432202496000000000 526826602384588800000000 118901837343744000000000 
-504189521813376000000000 280105289896320000000000 486182753177184000000000 
-362193289139404800000000 -719127458550144000000000 972365506354368000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-1485558412485840000000000 
1620609177257280000000000 -112891414796697600000000 62717452664832000000000 
65853325298073600000000 -66898616175820800000000 905483222848512000000000 
-503046234915840000000000 -555637432202496000000000 526826602384588800000000 
118901837343744000000000 -504189521813376000000000 280105289896320000000000 
486182753177184000000000 -362193289139404800000000 -719127458550144000000000 
972365506354368000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -630236902266720000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 1 0 0 0 0 2)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-54020305908576000000000000 66174874738005600000000000 
116683860762524160000000000 -8128181865362227200000000 4515656591867904000000000
 4741439421461299200000000 -4816700364659097600000000 65194792045092864000000000
 -36219328913940480000000000 -40005895118579712000000000 
37931515371690393600000000 8560932288749568000000000 -36301645570563072000000000
 20167580872535040000000000 35005158228757248000000000 
-26077916818037145600000000 -11442015270540288000000000 
70010316457514496000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (66174874738005600000000000 
116683860762524160000000000 -8128181865362227200000000 4515656591867904000000000
 4741439421461299200000000 -4816700364659097600000000 65194792045092864000000000
 -36219328913940480000000000 -40005895118579712000000000 
37931515371690393600000000 8560932288749568000000000 -36301645570563072000000000
 20167580872535040000000000 35005158228757248000000000 
-26077916818037145600000000 -11442015270540288000000000 
70010316457514496000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -54020305908576000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 1 0 0 0 0 2)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
1604403085484707200000000000 972365506354368000000000000 
1400206329150289920000000000 -97538182384346726400000000 
54187879102414848000000000 56897273057535590400000000 
-57800404375909171200000000 782337504541114368000000000 
-434631946967285760000000000 -480070741422956544000000000 
455178184460284723200000000 102731187464994816000000000 
-435619746846756864000000000 242010970470420480000000000 
420061898745086976000000000 -312935001816445747200000000 
-893588465966547456000000000 840123797490173952000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (972365506354368000000000000 
1400206329150289920000000000 -97538182384346726400000000 
54187879102414848000000000 56897273057535590400000000 
-57800404375909171200000000 782337504541114368000000000 
-434631946967285760000000000 -480070741422956544000000000 
455178184460284723200000000 102731187464994816000000000 
-435619746846756864000000000 242010970470420480000000000 
420061898745086976000000000 -312935001816445747200000000 
-893588465966547456000000000 840123797490173952000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1604403085484707200000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 1 1) (3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (857626376604552576000000000000 
4900722152026014720000000000000 -153622637255346094080000000000 
85345909586303385600000000000 89613205065618554880000000000 
-91035636892056944640000000000 1232181569652255129600000000000 
-684545316473475072000000000000 -756111417741156556800000000000 
716905640524948439040000000000 161801620257366835200000000000 
-2072305367142429081600000000000 1151280759523571712000000000000 
1470216645607804416000000000000 -1314327007629072138240000000000 
-1003092256355166028800000000000 2940433291215608832000000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (4900722152026014720000000000000 -153622637255346094080000000000 
85345909586303385600000000000 89613205065618554880000000000 
-91035636892056944640000000000 1232181569652255129600000000000 
-684545316473475072000000000000 -756111417741156556800000000000 
716905640524948439040000000000 161801620257366835200000000000 
-2072305367142429081600000000000 1151280759523571712000000000000 
1470216645607804416000000000000 -1314327007629072138240000000000 
-1003092256355166028800000000000 2940433291215608832000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 857626376604552576000000000000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1749557808273287255040000000000000 
1350761543152170307200000000000000 -32260753823622679756800000000000 
17922641013123710976000000000000 18818773063779896524800000000000 
-19117483747331958374400000000000 258758129626973577216000000000000 
-143754516459429765120000000000000 -158783397725642876928000000000000 
150550184510239172198400000000000 33978340254047035392000000000000 
-805678721793076819968000000000000 447599289885042677760000000000000 
524867342481986176512000000000000 -495561024012870608486400000000000 
-102588450382411241472000000000000 1049734684963972353024000000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1350761543152170307200000000000000 -32260753823622679756800000000000
 17922641013123710976000000000000 18818773063779896524800000000000 
-19117483747331958374400000000000 258758129626973577216000000000000 
-143754516459429765120000000000000 -158783397725642876928000000000000 
150550184510239172198400000000000 33978340254047035392000000000000 
-805678721793076819968000000000000 447599289885042677760000000000000 
524867342481986176512000000000000 -495561024012870608486400000000000 
-102588450382411241472000000000000 1049734684963972353024000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1749557808273287255040000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-49708024787999867304960000000000000 
-183703569868695161779200000000000000 -2322774275300832942489600000000000 
1290430152944907190272000000000000 1354951660592152549785600000000000 
-1376458829807901002956800000000000 18630585333142097559552000000000000 
-10350325185078943088640000000000000 -11432404636246287138816000000000000 
10839613284737220398284800000000000 2446440498291386548224000000000000 
-58008867969101531037696000000000000 32227148871723072798720000000000000 
37790448658703004708864000000000000 -35680393728926683811020800000000000 
-7386368427533609385984000000000000 -36390802412084374904832000000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (-183703569868695161779200000000000000 
-2322774275300832942489600000000000 1290430152944907190272000000000000 
1354951660592152549785600000000000 -1376458829807901002956800000000000 
18630585333142097559552000000000000 -10350325185078943088640000000000000 
-11432404636246287138816000000000000 10839613284737220398284800000000000 
2446440498291386548224000000000000 -58008867969101531037696000000000000 
32227148871723072798720000000000000 37790448658703004708864000000000000 
-35680393728926683811020800000000000 -7386368427533609385984000000000000 
-36390802412084374904832000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -49708024787999867304960000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-1458822466604343931776000000000000000 894744446183997611489280000000000000 
-27873291303609995309875200000000000 15485161835338886283264000000000000 
16259419927105830597427200000000000 -16517505957694812035481600000000000 
223567023997705170714624000000000000 -124203902220947317063680000000000000 
-137188855634955445665792000000000000 130075359416846644779417600000000000 
29357285979496638578688000000000000 -696106415629218372452352000000000000 
386725786460676873584640000000000000 453485383904436056506368000000000000 
-428164724747120205732249600000000000 -88636421130403312631808000000000000 
-1132601975977010641127424000000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (894744446183997611489280000000000000 
-27873291303609995309875200000000000 15485161835338886283264000000000000 
16259419927105830597427200000000000 -16517505957694812035481600000000000 
223567023997705170714624000000000000 -124203902220947317063680000000000000 
-137188855634955445665792000000000000 130075359416846644779417600000000000 
29357285979496638578688000000000000 -696106415629218372452352000000000000 
386725786460676873584640000000000000 453485383904436056506368000000000000 
-428164724747120205732249600000000000 -88636421130403312631808000000000000 
-1132601975977010641127424000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1458822466604343931776000000000000000
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1874250 
-55296 30720 32256 -32768 -23040 12800 -18432 17920 1068480 -593600 -680400 
602112 176960 -1250550) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4134375
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (6433407077725156739132160000000000000000000 
-195905685846716376410750976000000000000000 
108836492137064653561528320000000000000000 
114278316743917886239604736000000000000000 
-116092258279535630465630208000000000000000 
890698645209948230985154560000000000000000 
-494832580672193461658419200000000000000000 
-567190175015768920674508800000000000000000 
510891298384574079659409408000000000000000 
147516127823031258381189120000000000000000 
-1319242332999640304383672320000000000000000 
732912407222022391324262400000000000000000 
882295827802307209938124800000000000000000 
-891819020864300367124758528000000000000000 
-108302979920706493495050240000000000000000 
-6506931730042015673293670400000000000000000) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (6433407077725156739132160000000000000000000 
-195905685846716376410750976000000000000000 
108836492137064653561528320000000000000000 
114278316743917886239604736000000000000000 
-116092258279535630465630208000000000000000 
890698645209948230985154560000000000000000 
-494832580672193461658419200000000000000000 
-567190175015768920674508800000000000000000 
510891298384574079659409408000000000000000 
147516127823031258381189120000000000000000 
-1319242332999640304383672320000000000000000 
732912407222022391324262400000000000000000 
882295827802307209938124800000000000000000 
-891819020864300367124758528000000000000000 
-108302979920706493495050240000000000000000 
-6506931730042015673293670400000000000000000) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (6433407077725156739132160000000000000000000 
-195905685846716376410750976000000000000000 
108836492137064653561528320000000000000000 
114278316743917886239604736000000000000000 
-116092258279535630465630208000000000000000 
890698645209948230985154560000000000000000 
-494832580672193461658419200000000000000000 
-567190175015768920674508800000000000000000 
510891298384574079659409408000000000000000 
147516127823031258381189120000000000000000 
-1319242332999640304383672320000000000000000 
732912407222022391324262400000000000000000 
882295827802307209938124800000000000000000 
-891819020864300367124758528000000000000000 
-108302979920706493495050240000000000000000 
-6506931730042015673293670400000000000000000) 3)
poly_contentputin => 3334451352238500415488000000000000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0
 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0
 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0
 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 
-148400 -170100 153216 44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0
 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0
 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0
 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 
-148400 -170100 153216 44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 1 0 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 1 0 1 0 0 1) (3 0 0 1 0
 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (1215 576 1620 768 -504 280 486 392 972) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 810
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 1 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 1 0 1 0) (3 0 0 0 0 2 0 1 0) (3 0 0 0 1 0 1 1 0)
 (3 0 0 1 0 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (19440 -85050 
41472 116640 55296 -36288 20160 34992 -23616 69984) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 0 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 1 0 1 0 0 1) (3 0 0 1 0
 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-85050 41472 116640 55296 -36288 20160 34992 
-23616 69984) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 19440
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 0 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 1 0 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-1312200 497664 
-349920 1399680 663552 -435456 241920 419904 -11232 839808) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 1 0 1 0 0 1) (3 0 0 1 0
 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (497664 -349920 1399680 663552 -435456 241920 
419904 -11232 839808) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1312200
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 1 0 1 1 0) (3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0)) (783820800 
1045094400 447897600 -248832000 671846400 -348364800) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0)) (1045094400 447897600 -248832000 671846400 
-348364800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 783820800
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 1 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 1 1 0 0 0 1) (3 0 0 0 2 0 0 0 1) (3 0 0 1 0 0 1 0 1)
 (2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 1 0 0 0 1)) (658409472000 1234517760000 219469824000 -338610585600 
188116992000 94058496000 145268121600 -200658124800 141087744000 98761420800 
-73156608000 395045683200) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 2 0 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 1 0 0 0 0) (2 0 0 0 2
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (
1234517760000 219469824000 -338610585600 188116992000 94058496000 145268121600 
-200658124800 141087744000 98761420800 -73156608000 395045683200) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 658409472000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 1 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 2 0 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 1 0 1)
 (2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 1 0 0 0 1)) (33578883072000 -69132994560000 15801827328000 
-24379962163200 13544423424000 6772211712000 10459304755200 -14447384985600 
10158317568000 7110822297600 -5267275776000 -13694917017600) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 1 0 1) (2 0 1 0 1 0 0 0 0) (2 0 0 0 2
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (
-69132994560000 15801827328000 -24379962163200 13544423424000 6772211712000 
10459304755200 -14447384985600 10158317568000 7110822297600 -5267275776000 
-13694917017600) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 33578883072000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 1 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 1 1 0 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 1 0 0 0 1)) (-1333279180800000 189621927936000 -604419895296000 
-292559545958400 162533081088000 81266540544000 125511657062400 -173368619827200
 121899810816000 85329867571200 -63207309312000 305765358796800) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (2 0 1 0 1 0 0 0 0) (2 0 0 0 2
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (
189621927936000 -604419895296000 -292559545958400 162533081088000 81266540544000
 125511657062400 -173368619827200 121899810816000 85329867571200 -63207309312000
 305765358796800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1333279180800000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 0 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (19999187712000000
 2275463135232000 -7253038743552000 23999025254400000 -3510714551500800 
1950396973056000 975198486528000 1506139884748800 -2080423437926400 
1462797729792000 1023958410854400 -758487711744000 3669184305561600 
-18665908531200000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 1
 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (2275463135232000 -7253038743552000 
23999025254400000 -3510714551500800 1950396973056000 975198486528000 
1506139884748800 -2080423437926400 1462797729792000 1023958410854400 
-758487711744000 3669184305561600 -18665908531200000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 19999187712000000
Arg4: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-1680 3570 1728 -960 -1008 1024 -504 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (
17919272189952000000 -23519044749312000000 117595223746560000000 
-27646877093068800000 15359376162816000000 -26878908284928000000 
31060071795916800000 20159181213696000000 -16383334573670400000 
-8959636094976000000 8063672485478400000 4106499876864000000 
28894826406297600000 -110875496675328000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 1 0 0 0 0) (2 0 0 0 2
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (-23519044749312000000 117595223746560000000 
-27646877093068800000 15359376162816000000 -26878908284928000000 
31060071795916800000 20159181213696000000 -16383334573670400000 
-8959636094976000000 8063672485478400000 4106499876864000000 
28894826406297600000 -110875496675328000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 17919272189952000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 1 0 0 0 0)
 (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (
-3198590085906432000000 6585332529807360000000 -1990575150700953600000 
1105875083722752000000 -1935281396514816000000 2236325169306009600000 
1451461047386112000000 -1179600089304268800000 -645093798838272000000 
580584418954444800000 295667991134208000000 2080427501253427200000 
-7983035760623616000000 -1146833420156928000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 0 1) (2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (6585332529807360000000 -1990575150700953600000 
1105875083722752000000 -1935281396514816000000 2236325169306009600000 
1451461047386112000000 -1179600089304268800000 -645093798838272000000 
580584418954444800000 295667991134208000000 2080427501253427200000 
-7983035760623616000000 -1146833420156928000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3198590085906432000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (2 0 1 0 1 0 0 0 0)
 (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (
127002841646284800000000 57574621546315776000000 -23886901808411443200000 
13270501004673024000000 -23223376758177792000000 26835902031672115200000 
17417532568633344000000 -14155201071651225600000 -7741125586059264000000 
6967013027453337600000 3548015893610496000000 24965130015041126400000 
-95796429127483392000000 -58542262244573184000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (57574621546315776000000 -23886901808411443200000
 13270501004673024000000 -23223376758177792000000 26835902031672115200000 
17417532568633344000000 -14155201071651225600000 -7741125586059264000000 
6967013027453337600000 3548015893610496000000 24965130015041126400000 
-95796429127483392000000 -58542262244573184000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 127002841646284800000000
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((2 0 1 0 1 0 0 0 0) (2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (-188109351741240115200000000 
104505195411800064000000000 -182884091970650112000000000 
211332728499417907200000000 137163068977987584000000000 
-219460910364780134400000000 10450519541180006400000000 
67057500389238374400000000 -130050909845795635200000000 
-91442045985325056000000000 105666364249708953600000000 
27940625162182656000000000 -73153636788260044800000000 
71121591321919488000000000 196600398868448870400000000 
-754396879378931712000000000 -231653183162823475200000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1)) (104505195411800064000000000 -182884091970650112000000000 
211332728499417907200000000 137163068977987584000000000 
-219460910364780134400000000 10450519541180006400000000 
67057500389238374400000000 -130050909845795635200000000 
-91442045985325056000000000 105666364249708953600000000 
27940625162182656000000000 -73153636788260044800000000 
71121591321919488000000000 196600398868448870400000000 
-754396879378931712000000000 -231653183162823475200000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -188109351741240115200000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (1 0 0 0 1 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 2 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1)) (418020781647200256000000000 -731536367882600448000000000 
2538315079668832665600000000 548652275911950336000000000 
-877843641459120537600000000 41802078164720025600000000 
268230001556953497600000000 -520203639383182540800000000 
-365768183941300224000000000 422665456998835814400000000 
111762500648730624000000000 -292614547153040179200000000 
284486365287677952000000000 786401595473795481600000000 
-3017587517515726848000000000 -926612732651293900800000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (
-731536367882600448000000000 2538315079668832665600000000 
548652275911950336000000000 -877843641459120537600000000 
41802078164720025600000000 268230001556953497600000000 
-520203639383182540800000000 -365768183941300224000000000 
422665456998835814400000000 111762500648730624000000000 
-292614547153040179200000000 284486365287677952000000000 
786401595473795481600000000 -3017587517515726848000000000 
-926612732651293900800000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 418020781647200256000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (1 0 0 0 1 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 0 0 1 0 0 0 0)) (-8778436414591205376000000000 
24189469231317988147200000000 6583827310943404032000000000 
-10534123697509446451200000000 -7022749131672964300800000000 
3218760018683441971200000000 -6242443672598190489600000000 
-4389218207295602688000000000 5071985483986029772800000000 
1341150007784767488000000000 -3511374565836482150400000000 
3413836383452135424000000000 9436819145685545779200000000 
-36211050210188722176000000000 -11119352791815526809600000000 
5852290943060803584000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0)) (
24189469231317988147200000000 6583827310943404032000000000 
-10534123697509446451200000000 -7022749131672964300800000000 
3218760018683441971200000000 -6242443672598190489600000000 
-4389218207295602688000000000 5071985483986029772800000000 
1341150007784767488000000000 -3511374565836482150400000000 
3413836383452135424000000000 9436819145685545779200000000 
-36211050210188722176000000000 -11119352791815526809600000000 
5852290943060803584000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -8778436414591205376000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0)
) (96757876925271952588800000000 105341236975094464512000000000 
-42136494790037785804800000000 -28090996526691857203200000000 
12875040074733767884800000000 -24969774690392761958400000000 
-17556872829182410752000000000 20287941935944119091200000000 
5364600031139069952000000000 -14045498263345928601600000000 
13655345533808541696000000000 37747276582742183116800000000 
-144844200840754888704000000000 -44477411167262107238400000000 
23409163772243214336000000000) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0)) (
105341236975094464512000000000 -42136494790037785804800000000 
-28090996526691857203200000000 12875040074733767884800000000 
-24969774690392761958400000000 -17556872829182410752000000000 
20287941935944119091200000000 5364600031139069952000000000 
-14045498263345928601600000000 13655345533808541696000000000 
37747276582742183116800000000 -144844200840754888704000000000 
-44477411167262107238400000000 23409163772243214336000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 96757876925271952588800000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
) (-187273310177945714688000000000 -505637937480453429657600000000 
-337091958320302286438400000000 -1587141303758089931980800000000 
-299637296284713143500800000000 -210682473950188929024000000000 
243455303231329429094400000000 64375200373668839424000000000 
-168545979160151143219200000000 163864146405702500352000000000 
452967318992906197401600000000 -1738130410089058664448000000000 
-533728934007145286860800000000 280909965266918572032000000000 
1354610276953807336243200000000) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (
-187273310177945714688000000000 -505637937480453429657600000000 
-337091958320302286438400000000 -1587141303758089931980800000000 
-299637296284713143500800000000 -210682473950188929024000000000 
243455303231329429094400000000 64375200373668839424000000000 
-168545979160151143219200000000 163864146405702500352000000000 
452967318992906197401600000000 -1738130410089058664448000000000 
-533728934007145286860800000000 280909965266918572032000000000 
1354610276953807336243200000000) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (
-187273310177945714688000000000 -505637937480453429657600000000 
-337091958320302286438400000000 -1587141303758089931980800000000 
-299637296284713143500800000000 -210682473950188929024000000000 
243455303231329429094400000000 64375200373668839424000000000 
-168545979160151143219200000000 163864146405702500352000000000 
452967318992906197401600000000 -1738130410089058664448000000000 
-533728934007145286860800000000 280909965266918572032000000000 
1354610276953807336243200000000) 3)
poly_contentputin => 390152729537386905600000000
poly_normalizebycontentputin => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0
 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0
 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0
 0 0 0 1 0 0 0)) (480 1296 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 
-720 -3472) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (1296 864 4068 768 540 -624 
-165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg2: (1 0 0 0 0 0 0 0 1)
Arg3: 480
Arg4: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-1680 3570 1728 -960 -1008 1024 -504 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
) (10206000 7610400 30321900 6048000 4252500 -4914000 -1299375 3402000 -3307500 
-9142875 35083125 10773000 -829440 460800 483840 -491520 241920 -5670000 
-26475120) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (10206000
 7610400 30321900 6048000 4252500 -4914000 -1299375 3402000 -3307500 -9142875 
35083125 10773000 -829440 460800 483840 -491520 241920 -5670000 -26475120) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (10206000
 7610400 30321900 6048000 4252500 -4914000 -1299375 3402000 -3307500 -9142875 
35083125 10773000 -829440 460800 483840 -491520 241920 -5670000 -26475120) 4)
poly_contentputin => 15
poly_normalizebycontentputin => (p ((3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0
 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0
 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0
 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0
 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0
 0 0 0 1 0 0 1)) (680400 507360 2021460 403200 283500 -327600 -86625 226800 
-220500 -609525 2338875 718200 -55296 30720 32256 -32768 16128 -378000 -1765008)
 4)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1874250 
-55296 30720 32256 -32768 -23040 12800 -18432 17920 1068480 -593600 -680400 
602112 176960 -1250550) 3)
Arg2: (1 0 0 0 0 1 0 0 0)
Arg3: 4134375
Arg4: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-1680 3570 1728 -960 -1008 1024 -504 -1806) 3)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 7875
poly_paircomb => (p ((4 0 0 0 1 0 1 0 2) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0)
 (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0)
 (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 1 0 0 2)
) (6945750000 -435456000 241920000 254016000 -258048000 -181440000 100800000 
-145152000 141120000 1270080000 -705600000 -1190700000 508032000 3477285000 
-2381400000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 0 1 0 1 0 2) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0
 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 1 0 0 2)) (
6945750000 -435456000 241920000 254016000 -258048000 -181440000 100800000 
-145152000 141120000 1270080000 -705600000 -1190700000 508032000 3477285000 
-2381400000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 0 1 0 1 0 2) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0
 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 1 0 0 2)) (
6945750000 -435456000 241920000 254016000 -258048000 -181440000 100800000 
-145152000 141120000 1270080000 -705600000 -1190700000 508032000 3477285000 
-2381400000) 4)
poly_contentputin => 63000
poly_normalizebycontentputin => (p ((4 0 0 0 1 0 1 0 2) (3 0 1 0 0 1 1 0 0) (3 0
 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0
 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0
 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0
 0 0 0 1 0 0 2)) (110250 -6912 3840 4032 -4096 -2880 1600 -2304 2240 20160 
-11200 -18900 8064 55195 -37800) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (507360 2021460 403200 283500
 -327600 -86625 226800 -220500 -609525 2338875 718200 -55296 30720 32256 -32768 
16128 -378000 -1765008) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 680400
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (2029440 1962240 
1612800 1134000 -1310400 -346500 907200 -882000 -2438100 9355500 2872800 -221184
 122880 129024 -131072 64512 -1512000 -7060032) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (1962240 1612800 1134000 -1310400 -346500 907200 
-882000 -2438100 9355500 2872800 -221184 122880 129024 -131072 64512 -1512000 
-7060032) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2029440
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (-6894720 
-17176320 13608000 -15724800 -4158000 10886400 -10584000 -29257200 112266000 
34473600 -2654208 1474560 1548288 -1572864 774144 -18144000 -84720384 28412160) 
4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (-17176320 13608000 -15724800 -4158000 10886400 
-10584000 -29257200 112266000 34473600 -2654208 1474560 1548288 -1572864 774144 
-18144000 -84720384 28412160) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -6894720
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1)) (-110649369600 107163000000 -123832800000 -32744250000 
85730400000 -83349000000 -230400450000 884094750000 271479600000 -20901888000 
11612160000 12192768000 11914076160 -6618931200 -19336181760 7060193280 
4964198400 -2757888000 6096384000 3971358720 -3861043200 -142884000000 
-667173024000 211293895680) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (
107163000000 -123832800000 -32744250000 85730400000 -83349000000 -230400450000 
884094750000 271479600000 -20901888000 11612160000 12192768000 11914076160 
-6618931200 -19336181760 7060193280 4964198400 -2757888000 6096384000 3971358720
 -3861043200 -142884000000 -667173024000 211293895680) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -110649369600
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (41150592000000 -89625989376000 -181990779264000 
-12573792000000 32920473600000 -32006016000000 -179251978752000 -88473772800000 
339492384000000 104248166400000 -8026324992000 4459069440000 4682022912000 
4575005245440 -2541669580800 -7425093795840 2711114219520 1906252185600 
-1059028992000 2341011456000 1525001748480 -1482640588800 55767282278400 
-85849279488000 -309970034841600 81136855941120 -43374552883200 -107551187251200
) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-89625989376000 -181990779264000 -12573792000000 32920473600000 -32006016000000 
-179251978752000 -88473772800000 339492384000000 104248166400000 -8026324992000 
4459069440000 4682022912000 4575005245440 -2541669580800 -7425093795840 
2711114219520 1906252185600 -1059028992000 2341011456000 1525001748480 
-1482640588800 55767282278400 -85849279488000 -309970034841600 81136855941120 
-43374552883200 -107551187251200) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 41150592000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (-358503957504000 -727963117056000 -420650496000000 131681894400000 
-128024064000000 -717007915008000 -353895091200000 1357969536000000 
416992665600000 -32105299968000 17836277760000 18728091648000 18300020981760 
-10166678323200 -29700375183360 10844456878080 7625008742400 -4236115968000 
9364045824000 6100006993920 -5930562355200 223069129113600 -343397117952000 
-1239880139366400 324547423764480 -173498211532800 -430204749004800) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-727963117056000 
-420650496000000 131681894400000 -128024064000000 -717007915008000 
-353895091200000 1357969536000000 416992665600000 -32105299968000 17836277760000
 18728091648000 18300020981760 -10166678323200 -29700375183360 10844456878080 
7625008742400 -4236115968000 9364045824000 6100006993920 -5930562355200 
223069129113600 -343397117952000 -1239880139366400 324547423764480 
-173498211532800 -430204749004800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -358503957504000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-22299011997696000 7356079825920000 9481096396800000 -9217732608000000 
-51624569880576000 -25480446566400000 97773806592000000 30023471923200000 
-2311581597696000 1284211998720000 1348422598656000 1317601510686720 
-732000839270400 -2138427013201920 780800895221760 549000629452800 
-305000349696000 674211299328000 439200503562240 -427000489574400 
16060977296179200 -24724592492544000 -89271370034380800 23367414511042560 
10452382049894400 -30974741928345600) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (7356079825920000 9481096396800000 
-9217732608000000 -51624569880576000 -25480446566400000 97773806592000000 
30023471923200000 -2311581597696000 1284211998720000 1348422598656000 
1317601510686720 -732000839270400 -2138427013201920 780800895221760 
549000629452800 -305000349696000 674211299328000 439200503562240 
-427000489574400 16060977296179200 -24724592492544000 -89271370034380800 
23367414511042560 10452382049894400 -30974741928345600) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -22299011997696000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (422758137876480000 515155372720128000
 -110612791296000000 -619494838566912000 -305765358796800000 1173285679104000000
 360281663078400000 -27738979172352000 15410543984640000 16181071183872000 
15811218128240640 -8784010071244800 -25661124158423040 9369610742661120 
6588007553433600 -3660004196352000 8090535591936000 5270406042746880 
-5124005874892800 192731727554150400 -296695109910528000 -1071256440412569600 
280408974132510720 -186757583369011200 -371696903140147200) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (515155372720128000 -110612791296000000 -619494838566912000 
-305765358796800000 1173285679104000000 360281663078400000 -27738979172352000 
15410543984640000 16181071183872000 15811218128240640 -8784010071244800 
-25661124158423040 9369610742661120 6588007553433600 -3660004196352000 
8090535591936000 5270406042746880 -5124005874892800 192731727554150400 
-296695109910528000 -1071256440412569600 280408974132510720 -186757583369011200 
-371696903140147200) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 422758137876480000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (633811294126080000000 -174215146291200000000 
-265470699110400000000 -481580440104960000000 1847924944588800000000 
567443619348480000000 -43688892196454400000 24271606775808000000 
25485187114598400000 24902668551979008000 -13834815862210560000 
-40416270549516288000 14757136919691264000 10376111896657920000 
-5764506609254400000 12742593557299200000 8300889517326336000 
-8070309252956160000 -61710560227491840000 -264370891928371200000 
-1474158792160051200000 225191967665946624000 -187608143061319680000 
-159282419466240000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-174215146291200000000 -265470699110400000000 -481580440104960000000 
1847924944588800000000 567443619348480000000 -43688892196454400000 
24271606775808000000 25485187114598400000 24902668551979008000 
-13834815862210560000 -40416270549516288000 14757136919691264000 
10376111896657920000 -5764506609254400000 12742593557299200000 
8300889517326336000 -8070309252956160000 -61710560227491840000 
-264370891928371200000 -1474158792160051200000 225191967665946624000 
-187608143061319680000 -159282419466240000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 633811294126080000000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (-36585180721152000000000 476652640252723200000000 897120895826534400000000 
388064238363648000000000 119163160063180800000000 -9174667361255424000000 
5097037422919680000000 5351889294065664000000 5229560395915591680000 
-2905311331064217600000 -8487416815398420480000 3098998753135165440000 
2178983498298163200000 -1210546387943424000000 2675944647032832000000 
1743186798638530560000 -1694764943120793600000 -286765696710239846400000 
96596823285301248000000 -149852900233838592000000 -114965378086427688960000 
40462513017008947200000 285991584151633920000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-36585180721152000000000 476652640252723200000000 897120895826534400000000 
388064238363648000000000 119163160063180800000000 -9174667361255424000000 
5097037422919680000000 5351889294065664000000 5229560395915591680000 
-2905311331064217600000 -8487416815398420480000 3098998753135165440000 
2178983498298163200000 -1210546387943424000000 2675944647032832000000 
1743186798638530560000 -1694764943120793600000 -286765696710239846400000 
96596823285301248000000 -149852900233838592000000 -114965378086427688960000 
40462513017008947200000 285991584151633920000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-36585180721152000000000 476652640252723200000000 897120895826534400000000 
388064238363648000000000 119163160063180800000000 -9174667361255424000000 
5097037422919680000000 5351889294065664000000 5229560395915591680000 
-2905311331064217600000 -8487416815398420480000 3098998753135165440000 
2178983498298163200000 -1210546387943424000000 2675944647032832000000 
1743186798638530560000 -1694764943120793600000 -286765696710239846400000 
96596823285301248000000 -149852900233838592000000 -114965378086427688960000 
40462513017008947200000 285991584151633920000000) 4)
poly_contentputin => 6636767477760000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0
 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0
 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0
 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0
 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0
 0 0 0 0 0 0 2)) (5512500 -71820000 -135174375 -58471875 -17955000 1382400 
-768000 -806400 -787968 437760 1278848 -466944 -328320 182400 -403200 -262656 
255360 43208640 -14554800 22579200 17322496 -6096720 -43092000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0
 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 1 0 0 2)) (-6912 3840 4032 -4096 -2880 
1600 -2304 2240 20160 -11200 -18900 8064 55195 -37800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 110250
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (3 0 0 0 0 0 1 0 2)
Arg6: 12
poly_paircomb => (p ((4 0 0 0 0 1 1 0 2) (4 0 0 0 0 0 2 0 2) (3 0 1 0 0 1 1 0 0)
 (3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0)
 (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1)
 (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)) (-1653750 -1984500 -82944 46080 48384 
-49152 -34560 19200 -27648 26880 241920 -134400 -226800 96768 662340 -453600 
1543500) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 0 2 0 2) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0
 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2)) (-1984500 -82944 46080 48384 -49152 -34560 19200 -27648 26880 241920 
-134400 -226800 96768 662340 -453600 1543500) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1653750
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 7875
poly_paircomb => (p ((4 0 0 0 0 0 2 0 2) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0)
 (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0)
 (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
) (-9724050000 -653184000 362880000 381024000 -387072000 -272160000 151200000 
-217728000 211680000 1905120000 -1058400000 -1786050000 2857680000 -1587600000 
-904932000 1693440000 1190700000 -661500000 5215927500 952560000 -926100000 
-3572100000 9168390000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0
 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)) (-653184000 362880000 
381024000 -387072000 -272160000 151200000 -217728000 211680000 1905120000 
-1058400000 -1786050000 2857680000 -1587600000 -904932000 1693440000 1190700000 
-661500000 5215927500 952560000 -926100000 -3572100000 9168390000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -9724050000
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 384
poly_paircomb => (p ((4 0 0 1 0 0 0 1 2) (4 0 0 0 1 0 0 1 2) (4 0 0 1 0 0 0 0 3)
 (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0)
 (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0)
 (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-7876480500000 -11814720750000 
-15752961000000 -250822656000 139345920000 146313216000 -148635648000 
-104509440000 58060800000 -83607552000 81285120000 731566080000 -406425600000 
-685843200000 1097349120000 -609638400000 -347493888000 650280960000 
457228800000 -254016000000 2002916160000 365783040000 -355622400000 
4900921200000 -2722734000000 -6097574700000 3520661760000 -3811827600000 
-9451776600000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 1 0 0 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1
 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1
 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (-11814720750000 -15752961000000 -250822656000 139345920000 
146313216000 -148635648000 -104509440000 58060800000 -83607552000 81285120000 
731566080000 -406425600000 -685843200000 1097349120000 -609638400000 
-347493888000 650280960000 457228800000 -254016000000 2002916160000 365783040000
 -355622400000 4900921200000 -2722734000000 -6097574700000 3520661760000 
-3811827600000 -9451776600000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -7876480500000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (3 0 0 0 0 0 0 1 2)
Arg6: 72
poly_paircomb => (p ((4 0 0 0 1 0 0 1 2) (4 0 0 0 0 1 0 1 2) (4 0 0 1 0 0 0 0 3)
 (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0)
 (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0)
 (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-189035532000000 827030452500000 
-1134213192000000 -18059231232000 10032906240000 10534551552000 -10701766656000 
-7524679680000 4180377600000 -6019743744000 5852528640000 52672757760000 
-29262643200000 -49380710400000 79009136640000 -43893964800000 -25019559936000 
46820229120000 32920473600000 -18289152000000 144209963520000 26336378880000 
-25604812800000 352866326400000 -196036848000000 -439025378400000 
253487646720000 229643164800000 -680527915200000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 1 0 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1
 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1
 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (827030452500000 -1134213192000000 -18059231232000 10032906240000 
10534551552000 -10701766656000 -7524679680000 4180377600000 -6019743744000 
5852528640000 52672757760000 -29262643200000 -49380710400000 79009136640000 
-43893964800000 -25019559936000 46820229120000 32920473600000 -18289152000000 
144209963520000 26336378880000 -25604812800000 352866326400000 -196036848000000 
-439025378400000 253487646720000 229643164800000 -680527915200000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -189035532000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (3 0 0 0 0 0 0 1 2)
Arg6: 12
poly_paircomb => (p ((4 0 0 0 0 1 0 1 2) (4 0 0 0 0 0 1 1 2) (4 0 0 1 0 0 0 0 3)
 (3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0)
 (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0)
 (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (12759898410000000 3402639576000000 
-13610558304000000 -216710774784000 120394874880000 126414618624000 
-128421199872000 -90296156160000 50164531200000 -72236924928000 70230343680000 
632073093120000 -351151718400000 -592568524800000 948109639680000 
-526727577600000 -300234719232000 561842749440000 395045683200000 
-219469824000000 1730519562240000 316036546560000 -307257753600000 
4234395916800000 -2352442176000000 -5268304540800000 3041851760640000 
109220529600000 -8166334982400000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 0 1 1 2) (4 0 0 1 0 0 0 0 3) (3 0 1 0 0 1 1 0 0) (3 0 0 0 1
 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1
 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (3402639576000000 -13610558304000000 -216710774784000 120394874880000
 126414618624000 -128421199872000 -90296156160000 50164531200000 -72236924928000
 70230343680000 632073093120000 -351151718400000 -592568524800000 
948109639680000 -526727577600000 -300234719232000 561842749440000 
395045683200000 -219469824000000 1730519562240000 316036546560000 
-307257753600000 4234395916800000 -2352442176000000 -5268304540800000 
3041851760640000 109220529600000 -8166334982400000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 12759898410000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 1575
poly_paircomb => (p ((3 0 1 0 0 1 1 0 0) (3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0)
 (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)) (-341319470284800000 
189621927936000000 199103024332800000 -202263389798400000 -142216445952000000 
79009136640000000 -113773156761600000 110612791296000000 995515121664000000 
-553063956480000000 -933295426560000000 1493272682496000000 -829595934720000000 
-472869682790400000 884902330368000000 622196951040000000 -345664972800000000 
2725568310528000000 497757560832000000 -483930961920000000 -4355378657280000000 
2419654809600000000 -1866590853120000000 -1742151462912000000 
3387516733440000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0
 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2)) (189621927936000000 199103024332800000 -202263389798400000 
-142216445952000000 79009136640000000 -113773156761600000 110612791296000000 
995515121664000000 -553063956480000000 -933295426560000000 1493272682496000000 
-829595934720000000 -472869682790400000 884902330368000000 622196951040000000 
-345664972800000000 2725568310528000000 497757560832000000 -483930961920000000 
-4355378657280000000 2419654809600000000 -1866590853120000000 
-1742151462912000000 3387516733440000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -341319470284800000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 1 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 1 1 1 0 0) (3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0)
 (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0)
 (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2)) (758487711744000000 3868287329894400000 
-809053559193600000 -568865783808000000 316036546560000000 -455092627046400000 
442451165184000000 3982060486656000000 -2212255825920000000 -3733181706240000000
 5973090729984000000 -3318383738880000000 -1891478731161600000 
3539609321472000000 2488787804160000000 -1382659891200000000 
10902273242112000000 1991030243328000000 -1935723847680000000 
-17421514629120000000 9678619238400000000 -7466363412480000000 
-6968605851648000000 13550066933760000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1
 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)) (
3868287329894400000 -809053559193600000 -568865783808000000 316036546560000000 
-455092627046400000 442451165184000000 3982060486656000000 -2212255825920000000 
-3733181706240000000 5973090729984000000 -3318383738880000000 
-1891478731161600000 3539609321472000000 2488787804160000000 
-1382659891200000000 10902273242112000000 1991030243328000000 
-1935723847680000000 -17421514629120000000 9678619238400000000 
-7466363412480000000 -6968605851648000000 13550066933760000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 758487711744000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 1 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 1 0 0) (3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0)
 (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1)
 (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 0 0 0 1 1 0 0)) (35042132282572800000 -23361421521715200000 
-6826389405696000000 3792438558720000000 -5461111524556800000 
5309413982208000000 47784725839872000000 -26547069911040000000 
-44798180474880000000 71677088759808000000 -39820604866560000000 
-22697744773939200000 42475311857664000000 29865453649920000000 
-16591918694400000000 130827278905344000000 23892362919936000000 
-23228686172160000000 -209058175549440000000 116143430860800000000 
-89596360949760000000 -83623270219776000000 162600803205120000000 
10618827964416000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 0 0 0 1 1 0 0)) (
-23361421521715200000 -6826389405696000000 3792438558720000000 
-5461111524556800000 5309413982208000000 47784725839872000000 
-26547069911040000000 -44798180474880000000 71677088759808000000 
-39820604866560000000 -22697744773939200000 42475311857664000000 
29865453649920000000 -16591918694400000000 130827278905344000000 
23892362919936000000 -23228686172160000000 -209058175549440000000 
116143430860800000000 -89596360949760000000 -83623270219776000000 
162600803205120000000 10618827964416000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 35042132282572800000
Arg4: (p ((2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1)) (3 4) 2)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0)
 (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1)
 (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 0 0 0 1 1 0 0)) (-46722843043430400000 -13652778811392000000 
-97541519730278400000 -10922223049113600000 10618827964416000000 
95569451679744000000 -140168529130291200000 -53094139822080000000 
-89596360949760000000 143354177519616000000 -79641209733120000000 
-45395489547878400000 84950623715328000000 59730907299840000000 
-33183837388800000000 261654557810688000000 47784725839872000000 
-46457372344320000000 -418116351098880000000 232286861721600000000 
-179192721899520000000 -167246540439552000000 325201606410240000000 
21237655928832000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 0 0 0
 1 1 0 0)) (-46722843043430400000 -13652778811392000000 -97541519730278400000 
-10922223049113600000 10618827964416000000 95569451679744000000 
-140168529130291200000 -53094139822080000000 -89596360949760000000 
143354177519616000000 -79641209733120000000 -45395489547878400000 
84950623715328000000 59730907299840000000 -33183837388800000000 
261654557810688000000 47784725839872000000 -46457372344320000000 
-418116351098880000000 232286861721600000000 -179192721899520000000 
-167246540439552000000 325201606410240000000 21237655928832000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 0 0 0
 1 1 0 0)) (-46722843043430400000 -13652778811392000000 -97541519730278400000 
-10922223049113600000 10618827964416000000 95569451679744000000 
-140168529130291200000 -53094139822080000000 -89596360949760000000 
143354177519616000000 -79641209733120000000 -45395489547878400000 
84950623715328000000 59730907299840000000 -33183837388800000000 
261654557810688000000 47784725839872000000 -46457372344320000000 
-418116351098880000000 232286861721600000000 -179192721899520000000 
-167246540439552000000 325201606410240000000 21237655928832000000) 4)
poly_contentputin => 4740548198400000
poly_normalizebycontentputin => (p ((3 0 0 0 0 1 2 0 0) (3 0 1 0 0 1 0 1 0) (3 0
 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0
 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0
 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0
 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0
 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0
 0 0 0 0 0 1 2) (2 0 0 0 0 1 1 0 0)) (9856 2880 20576 2304 -2240 -20160 29568 
11200 18900 -30240 16800 9576 -17920 -12600 7000 -55195 -10080 9800 88200 -49000
 37800 35280 -68600 -4480) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 0 0 0 1 1 0 0)) (2880 
20576 2304 -2240 -20160 29568 11200 18900 -30240 16800 9576 -17920 -12600 7000 
-55195 -10080 9800 88200 -49000 37800 35280 -68600 -4480) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 9856
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 1 0 0 1 0 1 0) (3 0 0 1 0 1 0 1 0) (3 0 0 0 1 1 0 1 0)
 (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1)
 (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (1105920 7983360 19876224 884736 
-860160 -7741440 27320832 4300800 7257600 -11612160 6451200 3677184 -6881280 
-4838400 2688000 -21194880 -3870720 3763200 33868800 -18816000 14515200 13547520
 -26342400 -4967424 2759680 4790016 -1720320 3863552 9580032) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 1 0 2 0) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (7983360 19876224 884736 -860160 -7741440 27320832 4300800 7257600 
-11612160 6451200 3677184 -6881280 -4838400 2688000 -21194880 -3870720 3763200 
33868800 -18816000 14515200 13547520 -26342400 -4967424 2759680 4790016 -1720320
 3863552 9580032) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1105920
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 1 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 1 0 1 0 1 0) (3 0 0 0 1 1 0 1 0) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 0 1 0 0 1)
 (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1)
) (12573792000 31305052800 -464486400 1393459200 -1354752000 1857945600 
-12192768000 43030310400 6773760000 11430720000 -18289152000 10160640000 
5791564800 -10838016000 -7620480000 4233600000 -33381936000 -6096384000 
5927040000 53343360000 -29635200000 22861440000 21337344000 -41489280000 
-955514880 530841600 -7266309120 4346496000 7544275200 -566231040 -2709504000 
278691840 6085094400 1114767360 15088550400) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 1 0 1 0) (3 0 1 0 0 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 1 0 2 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (31305052800 -464486400 
1393459200 -1354752000 1857945600 -12192768000 43030310400 6773760000 
11430720000 -18289152000 10160640000 5791564800 -10838016000 -7620480000 
4233600000 -33381936000 -6096384000 5927040000 53343360000 -29635200000 
22861440000 21337344000 -41489280000 -955514880 530841600 -7266309120 4346496000
 7544275200 -566231040 -2709504000 278691840 6085094400 1114767360 15088550400) 
4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 12573792000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 1 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 1 0 1 0) (3 0 0 0 0 2 0 1 0) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 0 1 0 0 1)
 (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1)
) (1197765273600 -1320248160000 -33443020800 100329062400 -97542144000 
133772083200 -877879296000 3098182348800 487710720000 823011840000 
-1316818944000 731566080000 416992665600 -780337152000 -548674560000 
304819200000 -2403499392000 -438939648000 426746880000 3840721920000 
-2133734400000 1646023680000 1536288768000 -2987228160000 -68797071360 
38220595200 -523174256640 312947712000 543187814400 -40768634880 -195084288000 
20065812480 -366595891200 80263249920 1086375628800) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 0 1 0) (3 0 1 0 0 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 1 0 2 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (-1320248160000 -33443020800 
100329062400 -97542144000 133772083200 -877879296000 3098182348800 487710720000 
823011840000 -1316818944000 731566080000 416992665600 -780337152000 
-548674560000 304819200000 -2403499392000 -438939648000 426746880000 
3840721920000 -2133734400000 1646023680000 1536288768000 -2987228160000 
-68797071360 38220595200 -523174256640 312947712000 543187814400 -40768634880 
-195084288000 20065812480 -366595891200 80263249920 1086375628800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1197765273600
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 0 1 0) (3 0 1 0 0 0 1 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 0 0 1 0 2 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1)
 (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (-33809457024000 
-401316249600 -20355826176000 -1170505728000 1605264998400 -10534551552000 
37178188185600 5852528640000 9876142080000 -15801827328000 8778792960000 
5003911987200 -9364045824000 -6584094720000 3657830400000 -28841992704000 
-5267275776000 5120962560000 46088663040000 -25604812800000 19752284160000 
18435465216000 -35846737920000 -825564856320 458647142400 -6278091079680 
3755372544000 6518253772800 -489223618560 -2341011456000 240789749760 
12369563136000 963158999040 13036507545600) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 1 0
 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (-401316249600 -20355826176000 -1170505728000 
1605264998400 -10534551552000 37178188185600 5852528640000 9876142080000 
-15801827328000 8778792960000 5003911987200 -9364045824000 -6584094720000 
3657830400000 -28841992704000 -5267275776000 5120962560000 46088663040000 
-25604812800000 19752284160000 18435465216000 -35846737920000 -825564856320 
458647142400 -6278091079680 3755372544000 6518253772800 -489223618560 
-2341011456000 240789749760 12369563136000 963158999040 13036507545600) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -33809457024000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0)
 (3 0 1 1 0 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1)) (-632073093120000 -17860454277120000 
-1843546521600000 2528292372480000 -16591918694400000 1755758592000000 
9217732608000000 15554923776000000 -24887878041600000 13826598912000000 
7881161379840000 -14748372172800000 -10369949184000000 5761082880000000 
-45426138508800000 -8295959347200000 8065516032000000 72589644288000000 
-40327580160000000 31109847552000000 29035857715200000 -56458612224000000 
-1300264648704000 722369249280000 19323377418240000 -10313827614720000 
-6773716647936000 -770527199232000 13623348953088000 379243855872000 
10962078769152000 1516975423488000 -13547433295872000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 0
 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 1 0 0 1)) (-17860454277120000 -1843546521600000 2528292372480000 
-16591918694400000 1755758592000000 9217732608000000 15554923776000000 
-24887878041600000 13826598912000000 7881161379840000 -14748372172800000 
-10369949184000000 5761082880000000 -45426138508800000 -8295959347200000 
8065516032000000 72589644288000000 -40327580160000000 31109847552000000 
29035857715200000 -56458612224000000 -1300264648704000 722369249280000 
19323377418240000 -10313827614720000 -6773716647936000 -770527199232000 
13623348953088000 379243855872000 10962078769152000 1516975423488000 
-13547433295872000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -632073093120000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 1 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 1 1 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)
) (-3750695398195200000 -387144769536000000 -995515121664000000 
-3484302925824000000 368709304320000000 1935723847680000000 3266533992960000000 
-5226454388736000000 2903585771520000000 1655043889766400000 
-3097158156288000000 -2177689328640000000 1209827404800000000 
-9539489086848000000 -1742151462912000000 1693758366720000000 
15243825300480000000 -8468791833600000000 6533067985920000000 
6097530120192000000 -11856308567040000000 3898626838364160000 
-2165903799091200000 -1422480496066560000 2860903280148480000 
2302036541521920000 -2844960992133120000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 2 0) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-387144769536000000 
-995515121664000000 -3484302925824000000 368709304320000000 1935723847680000000 
3266533992960000000 -5226454388736000000 2903585771520000000 1655043889766400000
 -3097158156288000000 -2177689328640000000 1209827404800000000 
-9539489086848000000 -1742151462912000000 1693758366720000000 
15243825300480000000 -8468791833600000000 6533067985920000000 
6097530120192000000 -11856308567040000000 3898626838364160000 
-2165903799091200000 -1422480496066560000 2860903280148480000 
2302036541521920000 -2844960992133120000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3750695398195200000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 2 1 0) (3 0 0 0 0 1 0 2 0) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (1575292067241984000000 
-609753012019200000000 -1567936316620800000000 -5487777108172800000000 
580717154304000000000 3048765060096000000000 5144791038912000000000 
-8231665662259200000000 -6301168268967936000000 4573147590144000000000 
2606694126382080000000 -4878024096153600000000 -3429860692608000000000 
1905478162560000000000 -15024695311785600000000 -2743888554086400000000 
2667669427584000000000 24009024848256000000000 -13338347137920000000000 
10289582077824000000000 9603609939302400000000 -18673685993088000000000 
6140337270423552000000 -3411298483568640000000 -2240406781304832000000 
3240600824040652800000 -1800333791133696000000 2615572185543475200000 
1920356043875942400000 3625707552897024000000 -945175240345190400000 
-4480813562609664000000 -3780700961380761600000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 2 0) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0
 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1)) (-609753012019200000000 -1567936316620800000000 
-5487777108172800000000 580717154304000000000 3048765060096000000000 
5144791038912000000000 -8231665662259200000000 -6301168268967936000000 
4573147590144000000000 2606694126382080000000 -4878024096153600000000 
-3429860692608000000000 1905478162560000000000 -15024695311785600000000 
-2743888554086400000000 2667669427584000000000 24009024848256000000000 
-13338347137920000000000 10289582077824000000000 9603609939302400000000 
-18673685993088000000000 6140337270423552000000 -3411298483568640000000 
-2240406781304832000000 3240600824040652800000 -1800333791133696000000 
2615572185543475200000 1920356043875942400000 3625707552897024000000 
-945175240345190400000 -4480813562609664000000 -3780700961380761600000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1575292067241984000000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 1 0 2 0) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 1 0 0 1)
 (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
-128048132524032000000000 -329266626490368000000000 -1152433192716288000000000 
121950602403840000000000 640240662620160000000000 1080406118171520000000000 
-1728649789074432000000000 3441445999836364800000000 547405766540236800000000 
-1024385060192256000000000 -720270745447680000000000 400150414137600000000000 
-3155186015474976000000000 -576216596358144000000000 560210579792640000000000 
5041895218133760000000000 -2801052898963200000000000 2160812236343040000000000 
2016758087253504000000000 -3921474058548480000000000 1289470826788945920000000 
-716372681549414400000000 -470485424074014720000000 946243759909109760000000 
761398586108375040000000 -940970848148029440000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 1 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-329266626490368000000000 
-1152433192716288000000000 121950602403840000000000 640240662620160000000000 
1080406118171520000000000 -1728649789074432000000000 3441445999836364800000000 
547405766540236800000000 -1024385060192256000000000 -720270745447680000000000 
400150414137600000000000 -3155186015474976000000000 -576216596358144000000000 
560210579792640000000000 5041895218133760000000000 -2801052898963200000000000 
2160812236343040000000000 2016758087253504000000000 -3921474058548480000000000 
1289470826788945920000000 -716372681549414400000000 -470485424074014720000000 
946243759909109760000000 761398586108375040000000 -940970848148029440000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -128048132524032000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 2 0) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 1 0 0 1)
 (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 0 1 1)) (53780215660093440000000000 -518594936722329600000000000 
-1815082278528153600000000000 192072198786048000000000000 
1008379043626752000000000000 1701639636120144000000000000 
-2722623417792230400000000000 5420277449742274560000000000 
862164082300872960000000000 -1613406469802803200000000000 
-1134426424080096000000000000 -215120862640373760000000000 
630236902266720000000000000 -4969417974373087200000000000 
-907541139264076800000000000 882331663173408000000000000 
7940984968560672000000000000 -4411658315867040000000000000 
3403279272240288000000000000 3176393987424268800000000000 
-6176321642213856000000000000 2030916552192589824000000000 
-1128286973440327680000000000 -741014542916573184000000000 
1490333921856847872000000000 110633586500763648000000000 
-61463103611535360000000000 1134666514328578560000000000 
65560643852304384000000000 -32268129396056064000000000 
-1482029085833146368000000000 -129072517584224256000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 1 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1
 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 0 1 1)) (
-518594936722329600000000000 -1815082278528153600000000000 
192072198786048000000000000 1008379043626752000000000000 
1701639636120144000000000000 -2722623417792230400000000000 
5420277449742274560000000000 862164082300872960000000000 
-1613406469802803200000000000 -1134426424080096000000000000 
-215120862640373760000000000 630236902266720000000000000 
-4969417974373087200000000000 -907541139264076800000000000 
882331663173408000000000000 7940984968560672000000000000 
-4411658315867040000000000000 3403279272240288000000000000 
3176393987424268800000000000 -6176321642213856000000000000 
2030916552192589824000000000 -1128286973440327680000000000 
-741014542916573184000000000 1490333921856847872000000000 
110633586500763648000000000 -61463103611535360000000000 
1134666514328578560000000000 65560643852304384000000000 
-32268129396056064000000000 -1482029085833146368000000000 
-129072517584224256000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 53780215660093440000000000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 210
poly_paircomb => (p ((3 0 1 0 1 0 0 0 1) (3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1)
 (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (-108904936711689216000000000000 
-381167278490912256000000000000 40335161745070080000000000000 
211759599161617920000000000000 357344323585230240000000000000 
-571750917736368384000000000000 1138258264445877657600000000000 
181054457283183321600000000000 -338815358658588672000000000000 
-238229549056820160000000000000 217053589140658368000000000000 
-1043577774618348312000000000000 -190583639245456128000000000000 
185289649266415680000000000000 1667606843397741120000000000000 
-926448246332078400000000000000 714688647170460480000000000000 
667042737359096448000000000000 -1297027544864909760000000000000 
426492475960443863040000000000 -236940264422468812800000000000 
-155613054012480368640000000000 312970123589938053120000000000 
251832582355345044480000000000 -311226108024960737280000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-381167278490912256000000000000 40335161745070080000000000000 
211759599161617920000000000000 357344323585230240000000000000 
-571750917736368384000000000000 1138258264445877657600000000000 
181054457283183321600000000000 -338815358658588672000000000000 
-238229549056820160000000000000 217053589140658368000000000000 
-1043577774618348312000000000000 -190583639245456128000000000000 
185289649266415680000000000000 1667606843397741120000000000000 
-926448246332078400000000000000 714688647170460480000000000000 
667042737359096448000000000000 -1297027544864909760000000000000 
426492475960443863040000000000 -236940264422468812800000000000 
-155613054012480368640000000000 312970123589938053120000000000 
251832582355345044480000000000 -311226108024960737280000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -108904936711689216000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 1 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 1 0 0 1)) (-1524669113963649024000000000000 
161340646980280320000000000000 1827182827051674624000000000000 
1429377294340920960000000000000 -2287003670945473536000000000000 
4553033057783510630400000000000 724217829132733286400000000000 
-1355261434634354688000000000000 -952918196227280640000000000000 
868214356562633472000000000000 -4174311098473393248000000000000 
-762334556981824512000000000000 741158597065662720000000000000 
6670427373590964480000000000000 -3705792985328313600000000000000 
2858754588681841920000000000000 2668170949436385792000000000000 
-5188110179459639040000000000000 1705969903841775452160000000000 
-947761057689875251200000000000 -622452216049921474560000000000 
1251880494359752212480000000000 1007330329421380177920000000000 
-1244904432099842949120000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
161340646980280320000000000000 1827182827051674624000000000000 
1429377294340920960000000000000 -2287003670945473536000000000000 
4553033057783510630400000000000 724217829132733286400000000000 
-1355261434634354688000000000000 -952918196227280640000000000000 
868214356562633472000000000000 -4174311098473393248000000000000 
-762334556981824512000000000000 741158597065662720000000000000 
6670427373590964480000000000000 -3705792985328313600000000000000 
2858754588681841920000000000000 2668170949436385792000000000000 
-5188110179459639040000000000000 1705969903841775452160000000000 
-947761057689875251200000000000 -622452216049921474560000000000 
1251880494359752212480000000000 1007330329421380177920000000000 
-1244904432099842949120000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1524669113963649024000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)
) (645362587921121280000000000000 7308731308206698496000000000000 
19439531203036525056000000000000 -9148014683781894144000000000000 
18212132231134042521600000000000 2896871316530933145600000000000 
-5421045738537418752000000000000 -3811672784909122560000000000000 
3472857426250533888000000000000 -16697244393893572992000000000000 
-3049338227927298048000000000000 2964634388262650880000000000000 
26681709494363857920000000000000 -14823171941313254400000000000000 
11435018354727367680000000000000 10672683797745543168000000000000 
-20752440717838556160000000000000 6823879615367101808640000000000 
-3791044230759501004800000000000 -2489808864199685898240000000000 
5007521977439008849920000000000 4029321317685520711680000000000 
-4979617728399371796480000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
7308731308206698496000000000000 19439531203036525056000000000000 
-9148014683781894144000000000000 18212132231134042521600000000000 
2896871316530933145600000000000 -5421045738537418752000000000000 
-3811672784909122560000000000000 3472857426250533888000000000000 
-16697244393893572992000000000000 -3049338227927298048000000000000 
2964634388262650880000000000000 26681709494363857920000000000000 
-14823171941313254400000000000000 11435018354727367680000000000000 
10672683797745543168000000000000 -20752440717838556160000000000000 
6823879615367101808640000000000 -3791044230759501004800000000000 
-2489808864199685898240000000000 5007521977439008849920000000000 
4029321317685520711680000000000 -4979617728399371796480000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 645362587921121280000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
472018196805508104192000000000000 1331883174886912069632000000000000 
-658657057232296378368000000000000 1311273520641651061555200000000000 
208574734790227186483200000000000 -390315293174694150144000000000000 
-274440440513456824320000000000000 250045734690038439936000000000000 
-1202201596360337255424000000000000 -219552352410765459456000000000000 
213453675954910863360000000000000 1921083083594197770240000000000000 
-1067268379774554316800000000000000 823321321540370472960000000000000 
768433233437679108096000000000000 -1494175731684376043520000000000000 
491319332306431330222080000000000 -272955184614684072345600000000000 
-179266238222377384673280000000000 360541582375608637194240000000000 
290111134873357491240960000000000 -399835682071706531266560000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (1331883174886912069632000000000000 
-658657057232296378368000000000000 1311273520641651061555200000000000 
208574734790227186483200000000000 -390315293174694150144000000000000 
-274440440513456824320000000000000 250045734690038439936000000000000 
-1202201596360337255424000000000000 -219552352410765459456000000000000 
213453675954910863360000000000000 1921083083594197770240000000000000 
-1067268379774554316800000000000000 823321321540370472960000000000000 
768433233437679108096000000000000 -1494175731684376043520000000000000 
491319332306431330222080000000000 -272955184614684072345600000000000 
-179266238222377384673280000000000 360541582375608637194240000000000 
290111134873357491240960000000000 -399835682071706531266560000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 472018196805508104192000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (8902325146560323272704000000000000 
-7903884686787556540416000000000000 15735282247699812738662400000000000 
-5993430725016419637657600000000000 -4683783518096329801728000000000000 
-3293285286161481891840000000000000 3000548816280461279232000000000000 
-14426419156324047065088000000000000 -2634628228929185513472000000000000 
2561444111458930360320000000000000 23052997003130373242880000000000000 
-12807220557294651801600000000000000 9879855858484445675520000000000000 
9221198801252149297152000000000000 -17930108780212512522240000000000000 
5895831987677175962664960000000000 -3275462215376208868147200000000000 
-2151194858668528616079360000000000 4326498988507303646330880000000000 
3481333618480289894891520000000000 1810226570416635083489280000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-7903884686787556540416000000000000 
15735282247699812738662400000000000 -5993430725016419637657600000000000 
-4683783518096329801728000000000000 -3293285286161481891840000000000000 
3000548816280461279232000000000000 -14426419156324047065088000000000000 
-2634628228929185513472000000000000 2561444111458930360320000000000000 
23052997003130373242880000000000000 -12807220557294651801600000000000000 
9879855858484445675520000000000000 9221198801252149297152000000000000 
-17930108780212512522240000000000000 5895831987677175962664960000000000 
-3275462215376208868147200000000000 -2151194858668528616079360000000000 
4326498988507303646330880000000000 3481333618480289894891520000000000 
1810226570416635083489280000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 8902325146560323272704000000000000
Arg4: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-1680 3570 1728 -960 -1008 1024 -504 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 1 0 0 1)) (-62243091908452007755776000000000000000 
138871253946857368415109120000000000000 -78979567732724658730106880000000000000 
-36884795205008597188608000000000000000 -25934621628521669898240000000000000000 
23629321928208632573952000000000000000 -113608050856051870637568000000000000000 
-20747697302817335918592000000000000000 20171372377739076587520000000000000000 
181542351399651689287680000000000000000 -100856861888695382937600000000000000000
 77803864885565009694720000000000000000 72616940559860675715072000000000000000 
-141199606644173536112640000000000000000 31046459049701522090754048000000000000 
-17248032805389734494863360000000000000 -7967115764281856992739328000000000000 
24955198584417245183606784000000000000 31902274119398685851713536000000000000 
30333133456718945112981504000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
138871253946857368415109120000000000000 -78979567732724658730106880000000000000 
-36884795205008597188608000000000000000 -25934621628521669898240000000000000000 
23629321928208632573952000000000000000 -113608050856051870637568000000000000000 
-20747697302817335918592000000000000000 20171372377739076587520000000000000000 
181542351399651689287680000000000000000 -100856861888695382937600000000000000000
 77803864885565009694720000000000000000 72616940559860675715072000000000000000 
-141199606644173536112640000000000000000 31046459049701522090754048000000000000 
-17248032805389734494863360000000000000 -7967115764281856992739328000000000000 
24955198584417245183606784000000000000 31902274119398685851713536000000000000 
30333133456718945112981504000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -62243091908452007755776000000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)
) (555485015787429473660436480000000000000 
244269556245169434881556480000000000000 -147539180820034388754432000000000000000
 -103738486514086679592960000000000000000 94517287712834530295808000000000000000
 -454432203424207482550272000000000000000 
-82990789211269343674368000000000000000 80685489510956306350080000000000000000 
726169405598606757150720000000000000000 -403427447554781531750400000000000000000
 311215459542260038778880000000000000000 290467762239442702860288000000000000000
 -564798426576694144450560000000000000000 
124185836198806088363016192000000000000 -68992131221558937979453440000000000000 
-31868463057127427970957312000000000000 99820794337668980734427136000000000000 
127609096477594743406854144000000000000 121332533826875780451926016000000000000)
 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1)) (
244269556245169434881556480000000000000 -147539180820034388754432000000000000000
 -103738486514086679592960000000000000000 94517287712834530295808000000000000000
 -454432203424207482550272000000000000000 
-82990789211269343674368000000000000000 80685489510956306350080000000000000000 
726169405598606757150720000000000000000 -403427447554781531750400000000000000000
 311215459542260038778880000000000000000 290467762239442702860288000000000000000
 -564798426576694144450560000000000000000 
124185836198806088363016192000000000000 -68992131221558937979453440000000000000 
-31868463057127427970957312000000000000 99820794337668980734427136000000000000 
127609096477594743406854144000000000000 121332533826875780451926016000000000000)
 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 555485015787429473660436480000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
) (-5401040561869408886327869440000000000000 
-11769200454014143190941040640000000000000 
-1244861838169040155115520000000000000000 
1134207452554014363549696000000000000000 
-5453186441090489790603264000000000000000 
-995889470535232124092416000000000000000 968225874131475676200960000000000000000
 8714032867183281085808640000000000000000 
-4841129370657378381004800000000000000000 
3734585514507120465346560000000000000000 
3485613146873312434323456000000000000000 
-6777581118920329733406720000000000000000 
1490230034385673060356194304000000000000 
-827905574658707255753441280000000000000 
-382421556685529135651487744000000000000 
1197849532052027768813125632000000000000 
1531309157731136920882249728000000000000 
1455990405922509365423112192000000000000 
7776790221024012631246110720000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (
-11769200454014143190941040640000000000000 
-1244861838169040155115520000000000000000 
1134207452554014363549696000000000000000 
-5453186441090489790603264000000000000000 
-995889470535232124092416000000000000000 968225874131475676200960000000000000000
 8714032867183281085808640000000000000000 
-4841129370657378381004800000000000000000 
3734585514507120465346560000000000000000 
3485613146873312434323456000000000000000 
-6777581118920329733406720000000000000000 
1490230034385673060356194304000000000000 
-827905574658707255753441280000000000000 
-382421556685529135651487744000000000000 
1197849532052027768813125632000000000000 
1531309157731136920882249728000000000000 
1455990405922509365423112192000000000000 
7776790221024012631246110720000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -5401040561869408886327869440000000000000
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)) (
-73400738769487587904470201139200000000000000 
-9803286975581191221534720000000000000000000 
8931883688862863112953856000000000000000000 
-42943843223587607101000704000000000000000000 
-7842629580464952977227776000000000000000000 
7624778758785370950082560000000000000000000 
68623008829068338550743040000000000000000000 
-38123893793926854750412800000000000000000000 
29409860926743573664604160000000000000000000 
27449203531627335420297216000000000000000000 
-53373451311497596650577920000000000000000000 
11735561520787175350305030144000000000000000 
-6519756400437319639058350080000000000000000 
-3011569758898541943255465984000000000000000 
9332998090910338555574558392320000000000000 
-5184998939394632530874754662400000000000000 
3988816178545354521984871956480000000000000 
5530665535354274699599738306560000000000000 
3888749204545974398156065996800000000000000 
-2160416224747763554531147776000000000000000 
12059059617132703251947716608000000000000000 
3110999363636779518524852797440000000000000 
-3024582714646868976343606886400000000000000 
11465924446639761252707008512000000000000000 
51487943735827947022354989711360000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1)) (-9803286975581191221534720000000000000000000 
8931883688862863112953856000000000000000000 
-42943843223587607101000704000000000000000000 
-7842629580464952977227776000000000000000000 
7624778758785370950082560000000000000000000 
68623008829068338550743040000000000000000000 
-38123893793926854750412800000000000000000000 
29409860926743573664604160000000000000000000 
27449203531627335420297216000000000000000000 
-53373451311497596650577920000000000000000000 
11735561520787175350305030144000000000000000 
-6519756400437319639058350080000000000000000 
-3011569758898541943255465984000000000000000 
9332998090910338555574558392320000000000000 
-5184998939394632530874754662400000000000000 
3988816178545354521984871956480000000000000 
5530665535354274699599738306560000000000000 
3888749204545974398156065996800000000000000 
-2160416224747763554531147776000000000000000 
12059059617132703251947716608000000000000000 
3110999363636779518524852797440000000000000 
-3024582714646868976343606886400000000000000 
11465924446639761252707008512000000000000000 
51487943735827947022354989711360000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -73400738769487587904470201139200000000000000
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-3764462198623177429069332480000000000000000000 
-59454598403284946202620862922752000000000000000 
-85752054268404079868557013680128000000000000000 
-16490435797857641126784270336000000000000000000 
-3011569758898541943255465984000000000000000000 
2927915043373582444831703040000000000000000000 
26351235390362242003485327360000000000000000000 
-118909196806569892405241725845504000000000000000 
-14639575216867912224158515200000000000000000000 
11293386595869532287207997440000000000000000000 
10540494156144896801394130944000000000000000000 
-20495405303615077113821921280000000000000000000 
4506455623982275334517131575296000000000000000 
-2503586457767930741398406430720000000000000000 
-1156442787417040106210098937856000000000000000 
3583871266909570005340630422650880000000000000 
-1991039592727538891855905790361600000000000000 
1531705412561416136442190831288320000000000000 
2123775565576041484646299509719040000000000000 
1493279694545654168891929342771200000000000000 
-829599830303141204939960745984000000000000000 
4630678892978958048747923177472000000000000000 
1194623755636523335113543474216960000000000000 
-1161439762424397686915945044377600000000000000 
36993972339821744303852981374156800000000000000 
-20552206855456524613251656318976000000000000000 
-31269844054461299400533026485043200000000000000 
19771370394557931656584316049162240000000000000 
-28773089597639134458552318846566400000000000000 
-71345518083941935443145035507302400000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-59454598403284946202620862922752000000000000000
 -85752054268404079868557013680128000000000000000 
-16490435797857641126784270336000000000000000000 
-3011569758898541943255465984000000000000000000 
2927915043373582444831703040000000000000000000 
26351235390362242003485327360000000000000000000 
-118909196806569892405241725845504000000000000000 
-14639575216867912224158515200000000000000000000 
11293386595869532287207997440000000000000000000 
10540494156144896801394130944000000000000000000 
-20495405303615077113821921280000000000000000000 
4506455623982275334517131575296000000000000000 
-2503586457767930741398406430720000000000000000 
-1156442787417040106210098937856000000000000000 
3583871266909570005340630422650880000000000000 
-1991039592727538891855905790361600000000000000 
1531705412561416136442190831288320000000000000 
2123775565576041484646299509719040000000000000 
1493279694545654168891929342771200000000000000 
-829599830303141204939960745984000000000000000 
4630678892978958048747923177472000000000000000 
1194623755636523335113543474216960000000000000 
-1161439762424397686915945044377600000000000000 
36993972339821744303852981374156800000000000000 
-20552206855456524613251656318976000000000000000 
-31269844054461299400533026485043200000000000000 
19771370394557931656584316049162240000000000000 
-28773089597639134458552318846566400000000000000 
-71345518083941935443145035507302400000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3764462198623177429069332480000000000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-237818393613139784810483451691008000000000000000 
-343008217073616319474228054720512000000000000000 
-32081583403821967645513089024000000000000000000 
-12046279035594167773021863936000000000000000000 
11711660173494329779326812160000000000000000000 
105404941561448968013941309440000000000000000000 
-475636787226279569620966903382016000000000000000 
-58558300867471648896634060800000000000000000000 
45173546383478129148831989760000000000000000000 
42161976624579587205576523776000000000000000000 
-81981621214460308455287685120000000000000000000 
18025822495929101338068526301184000000000000000 
-10014345831071722965593625722880000000000000000 
-4625771149668160424840395751424000000000000000 
14335485067638280021362521690603520000000000000 
-7964158370910155567423623161446400000000000000 
6126821650245664545768763325153280000000000000 
8495102262304165938585198038876160000000000000 
5973118778182616675567717371084800000000000000 
-3318399321212564819759842983936000000000000000 
18522715571915832194991692709888000000000000000 
4778495022546093340454173896867840000000000000 
-4645759049697590747663780177510400000000000000 
147975889359286977215411925496627200000000000000 
-82208827421826098453006625275904000000000000000 
-125079376217845197602132105940172800000000000000 
79085481578231726626337264196648960000000000000 
-115092358390556537834209275386265600000000000000 
-285382072335767741772580142029209600000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (-343008217073616319474228054720512000000000000000 
-32081583403821967645513089024000000000000000000 
-12046279035594167773021863936000000000000000000 
11711660173494329779326812160000000000000000000 
105404941561448968013941309440000000000000000000 
-475636787226279569620966903382016000000000000000 
-58558300867471648896634060800000000000000000000 
45173546383478129148831989760000000000000000000 
42161976624579587205576523776000000000000000000 
-81981621214460308455287685120000000000000000000 
18025822495929101338068526301184000000000000000 
-10014345831071722965593625722880000000000000000 
-4625771149668160424840395751424000000000000000 
14335485067638280021362521690603520000000000000 
-7964158370910155567423623161446400000000000000 
6126821650245664545768763325153280000000000000 
8495102262304165938585198038876160000000000000 
5973118778182616675567717371084800000000000000 
-3318399321212564819759842983936000000000000000 
18522715571915832194991692709888000000000000000 
4778495022546093340454173896867840000000000000 
-4645759049697590747663780177510400000000000000 
147975889359286977215411925496627200000000000000 
-82208827421826098453006625275904000000000000000 
-125079376217845197602132105940172800000000000000 
79085481578231726626337264196648960000000000000 
-115092358390556537834209275386265600000000000000 
-285382072335767741772580142029209600000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -237818393613139784810483451691008000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (-4719846565796633078063809997832192000000000000000 
22661057324304495734623820017827840000000000000000 
-867332090562780079657574203392000000000000000000 
843239532491591744111530475520000000000000000000 
7589155792424325697003774279680000000000000000000 
-34245848680292129012709617043505152000000000000000 
-4216197662457958720557652377600000000000000000000 
3252495339610425298715903262720000000000000000000 
3035662316969730278801509711872000000000000000000 
-5902676727441142208780713328640000000000000000000 
1297859219706895296340933893685248000000000000000 
-721032899837164053522741052047360000000000000000 
-333055522776107550588508494102528000000000000000 
1032154924869956161538101561723453440000000000000 
-573419402705531200854500867624140800000000000000 
441131158817687847295350959411036160000000000000 
611647362885899947578134258799083520000000000000 
430064552029148400640875650718105600000000000000 
-238924751127304667022708694843392000000000000000 
1333635521177939918039401875111936000000000000000 
344051641623318720512700520574484480000000000000 
-334494651578226533831792172780748800000000000000 
10654264033868662359509658635757158400000000000000 
-5919035574371479088616477019865088000000000000000 
-9005715087684854227353511627692441600000000000000 
5694154673632684317096283022158725120000000000000 
6933727387120875503807873080413388800000000000000 
-20547509208175277407625770226103091200000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
22661057324304495734623820017827840000000000000000 
-867332090562780079657574203392000000000000000000 
843239532491591744111530475520000000000000000000 
7589155792424325697003774279680000000000000000000 
-34245848680292129012709617043505152000000000000000 
-4216197662457958720557652377600000000000000000000 
3252495339610425298715903262720000000000000000000 
3035662316969730278801509711872000000000000000000 
-5902676727441142208780713328640000000000000000000 
1297859219706895296340933893685248000000000000000 
-721032899837164053522741052047360000000000000000 
-333055522776107550588508494102528000000000000000 
1032154924869956161538101561723453440000000000000 
-573419402705531200854500867624140800000000000000 
441131158817687847295350959411036160000000000000 
611647362885899947578134258799083520000000000000 
430064552029148400640875650718105600000000000000 
-238924751127304667022708694843392000000000000000 
1333635521177939918039401875111936000000000000000 
344051641623318720512700520574484480000000000000 
-334494651578226533831792172780748800000000000000 
10654264033868662359509658635757158400000000000000 
-5919035574371479088616477019865088000000000000000 
-9005715087684854227353511627692441600000000000000 
5694154673632684317096283022158725120000000000000 
6933727387120875503807873080413388800000000000000 
-20547509208175277407625770226103091200000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -4719846565796633078063809997832192000000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (342730386378603444986442990181416960000000000000000 
74549253097586034449257689520275456000000000000000 
10118874389899100929338365706240000000000000000000 
91069869509091908364045291356160000000000000000000 
-410950184163505548152515404522061824000000000000000 
-50594371949495504646691828531200000000000000000000 
39029944075325103584590839152640000000000000000000 
36427947803636763345618116542464000000000000000000 
-70832120729293706505368559943680000000000000000000 
15574310636482743556091206724222976000000000000000 
-8652394798045968642272892624568320000000000000000 
-3996666273313290607062101929230336000000000000000 
12385859098439473938457218740681441280000000000000 
-6881032832466374410254010411489689600000000000000 
5293573905812254167544211512932433920000000000000 
7339768354630799370937611105589002240000000000000 
5160774624349780807690507808617267200000000000000 
-2867097013527656004272504338120704000000000000000 
16003626254135279016472822501343232000000000000000 
4128619699479824646152406246893813760000000000000 
-4013935818938718405981506073368985600000000000000 
127851168406423948314115903629085900800000000000000 
-71028426892457749063397724238381056000000000000000 
-108068581052218250728242139532309299200000000000000 
68329856083592211805155396265904701440000000000000 
17126876724297642952801136995309977600000000000000 
-246570110498103328891509242713237094400000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
74549253097586034449257689520275456000000000000000 
10118874389899100929338365706240000000000000000000 
91069869509091908364045291356160000000000000000000 
-410950184163505548152515404522061824000000000000000 
-50594371949495504646691828531200000000000000000000 
39029944075325103584590839152640000000000000000000 
36427947803636763345618116542464000000000000000000 
-70832120729293706505368559943680000000000000000000 
15574310636482743556091206724222976000000000000000 
-8652394798045968642272892624568320000000000000000 
-3996666273313290607062101929230336000000000000000 
12385859098439473938457218740681441280000000000000 
-6881032832466374410254010411489689600000000000000 
5293573905812254167544211512932433920000000000000 
7339768354630799370937611105589002240000000000000 
5160774624349780807690507808617267200000000000000 
-2867097013527656004272504338120704000000000000000 
16003626254135279016472822501343232000000000000000 
4128619699479824646152406246893813760000000000000 
-4013935818938718405981506073368985600000000000000 
127851168406423948314115903629085900800000000000000 
-71028426892457749063397724238381056000000000000000 
-108068581052218250728242139532309299200000000000000 
68329856083592211805155396265904701440000000000000 
17126876724297642952801136995309977600000000000000 
-246570110498103328891509242713237094400000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 342730386378603444986442990181416960000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-26531688650315442636725194881761280000000000000000000 
15937227164091083963707925987328000000000000000000000 
143435044476819755673371333885952000000000000000000000 
-71459490941467450762987538617466880000000000000000000 
-79686135820455419818539629936640000000000000000000000 
61472161918637038145730571665408000000000000000000000 
57374017790727902269348533554380800000000000000000000 
-111560590148637587745955481911296000000000000000000000 
24529539252460321100843650590651187200000000000000000 
-13627521806922400611579805883695104000000000000000000 
-6294749380468432706122810538537779200000000000000000 
19507728080042171453070119516573270016000000000000000 
-10837626711134539696150066398096261120000000000000000 
8337378901654300313882133132868583424000000000000000 
11560135158543509009226737491302678528000000000000000 
8128220033350904772112549798572195840000000000000000 
-4515677796306058206729194332540108800000000000000000 
25205711350263064450944695439615590400000000000000000 
6502576026680723817690039838857756672000000000000000 
-6321948914828481489420872065556152320000000000000000 
-94753463590995657873554195300933959680000000000000000 
52640813106108698818641219611629977600000000000000000 
2528099577572391376185897288047001600000000000000000 
-67858434494187230239939061854085578752000000000000000 
113342888208176855787245424293330288640000000000000000 
-42875694564880470457792523170480128000000000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
15937227164091083963707925987328000000000000000000000 
143435044476819755673371333885952000000000000000000000 
-71459490941467450762987538617466880000000000000000000 
-79686135820455419818539629936640000000000000000000000 
61472161918637038145730571665408000000000000000000000 
57374017790727902269348533554380800000000000000000000 
-111560590148637587745955481911296000000000000000000000 
24529539252460321100843650590651187200000000000000000 
-13627521806922400611579805883695104000000000000000000 
-6294749380468432706122810538537779200000000000000000 
19507728080042171453070119516573270016000000000000000 
-10837626711134539696150066398096261120000000000000000 
8337378901654300313882133132868583424000000000000000 
11560135158543509009226737491302678528000000000000000 
8128220033350904772112549798572195840000000000000000 
-4515677796306058206729194332540108800000000000000000 
25205711350263064450944695439615590400000000000000000 
6502576026680723817690039838857756672000000000000000 
-6321948914828481489420872065556152320000000000000000 
-94753463590995657873554195300933959680000000000000000 
52640813106108698818641219611629977600000000000000000 
2528099577572391376185897288047001600000000000000000 
-67858434494187230239939061854085578752000000000000000 
113342888208176855787245424293330288640000000000000000 
-42875694564880470457792523170480128000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -26531688650315442636725194881761280000000000000000000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
3346817704459127632378664457338880000000000000000000000 
30121359340132148691407980116049920000000000000000000000 
-37293111563973136475076546810347520000000000000000000000 
-58521498146542460314735504225468416000000000000000000000 
12909154002913778010603420049735680000000000000000000000 
12048543736052859476563192046419968000000000000000000000 
-23427723931213893426650651201372160000000000000000000000 
5151203243016667431177166624036749312000000000000000000 
-2861779579453704128431759235575971840000000000000000000 
-1321897369898370868285790213092933632000000000000000000 
4096622896808856005144725098480386703360000000000000000 
-2275901609338253336191513943600214835200000000000000000 
1750849569347403065915247957902402519040000000000000000 
2427628383294136891937614873173562490880000000000000000 
1706926207003690002143635457700161126400000000000000000 
-948292337224272223413130809833422848000000000000000000 
5293199383555243534698386042319273984000000000000000000 
1365540965602952001714908366160128901120000000000000000 
-1327609272113981112778383133766791987200000000000000000 
-8436537857172816934381096824275258572800000000000000000 
4686965476207120519100609346819588096000000000000000000 
-6155084628589289355455710679713972224000000000000000000 
-7458158949298565035385553099627083857920000000000000000 
20459013753777393943094164546497439334400000000000000000 
-22375866938383881885045928086208512000000000000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (30121359340132148691407980116049920000000000000000000000 
-37293111563973136475076546810347520000000000000000000000 
-58521498146542460314735504225468416000000000000000000000 
12909154002913778010603420049735680000000000000000000000 
12048543736052859476563192046419968000000000000000000000 
-23427723931213893426650651201372160000000000000000000000 
5151203243016667431177166624036749312000000000000000000 
-2861779579453704128431759235575971840000000000000000000 
-1321897369898370868285790213092933632000000000000000000 
4096622896808856005144725098480386703360000000000000000 
-2275901609338253336191513943600214835200000000000000000 
1750849569347403065915247957902402519040000000000000000 
2427628383294136891937614873173562490880000000000000000 
1706926207003690002143635457700161126400000000000000000 
-948292337224272223413130809833422848000000000000000000 
5293199383555243534698386042319273984000000000000000000 
1365540965602952001714908366160128901120000000000000000 
-1327609272113981112778383133766791987200000000000000000 
-8436537857172816934381096824275258572800000000000000000 
4686965476207120519100609346819588096000000000000000000 
-6155084628589289355455710679713972224000000000000000000 
-7458158949298565035385553099627083857920000000000000000 
20459013753777393943094164546497439334400000000000000000 
-22375866938383881885045928086208512000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3346817704459127632378664457338880000000000000000000000
Arg4: (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-71820000 -135174375 
-58471875 -17955000 1382400 -768000 -806400 -787968 437760 1278848 -466944 
-328320 182400 -403200 -262656 255360 43208640 -14554800 22579200 17322496 
-6096720 -43092000) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 5512500
poly_paircomb => (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (
166043993362478469661386490389725184000000000000000000000000000 
34790170037852631738576217034037657600000000000000000000000000 
129804232906381978267036264312602624000000000000000000000000000 
266856417903983254812942573840629760000000000000000000000000000 
126509709228555024503913516487409664000000000000000000000000000 
-129145328170816587514411714747564032000000000000000000000000000 
23769367082485081175363865269177312870400000000000000000000000 
-13205203934713933986313258482876284928000000000000000000000000 
-4588085454688928888675263531276723814400000000000000000000000 
25219818971606068610590448580493534298112000000000000000000000 
-14011010539781149228105804766940852387840000000000000000000000 
5371487123315412946445614083998081875968000000000000000000000 
14945077909099892509979525084736909213696000000000000000000000 
10508257904835861921079353575205639290880000000000000000000000 
-5837921058242145511710751986225355161600000000000000000000000 
30528198500286200246399930567484034252800000000000000000000000 
8406606323868689536863482860164511432704000000000000000000000 
-8173089481539003716395052780715497226240000000000000000000000 
-191117856275265993932277852461768386805760000000000000000000000 
74549159512453462725287094468018910003200000000000000000000000 
-109498370327621992208953945637069311180800000000000000000000000 
-99088337506230760332931747009289219211264000000000000000000000 
133184923752827936730182233232914230804480000000000000000000000 
20874102022711579043145730220422594560000000000000000000000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (166043993362478469661386490389725184000000000000000000000000000 
34790170037852631738576217034037657600000000000000000000000000 
129804232906381978267036264312602624000000000000000000000000000 
266856417903983254812942573840629760000000000000000000000000000 
126509709228555024503913516487409664000000000000000000000000000 
-129145328170816587514411714747564032000000000000000000000000000 
23769367082485081175363865269177312870400000000000000000000000 
-13205203934713933986313258482876284928000000000000000000000000 
-4588085454688928888675263531276723814400000000000000000000000 
25219818971606068610590448580493534298112000000000000000000000 
-14011010539781149228105804766940852387840000000000000000000000 
5371487123315412946445614083998081875968000000000000000000000 
14945077909099892509979525084736909213696000000000000000000000 
10508257904835861921079353575205639290880000000000000000000000 
-5837921058242145511710751986225355161600000000000000000000000 
30528198500286200246399930567484034252800000000000000000000000 
8406606323868689536863482860164511432704000000000000000000000 
-8173089481539003716395052780715497226240000000000000000000000 
-191117856275265993932277852461768386805760000000000000000000000 
74549159512453462725287094468018910003200000000000000000000000 
-109498370327621992208953945637069311180800000000000000000000000 
-99088337506230760332931747009289219211264000000000000000000000 
133184923752827936730182233232914230804480000000000000000000000 
20874102022711579043145730220422594560000000000000000000000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (166043993362478469661386490389725184000000000000000000000000000 
34790170037852631738576217034037657600000000000000000000000000 
129804232906381978267036264312602624000000000000000000000000000 
266856417903983254812942573840629760000000000000000000000000000 
126509709228555024503913516487409664000000000000000000000000000 
-129145328170816587514411714747564032000000000000000000000000000 
23769367082485081175363865269177312870400000000000000000000000 
-13205203934713933986313258482876284928000000000000000000000000 
-4588085454688928888675263531276723814400000000000000000000000 
25219818971606068610590448580493534298112000000000000000000000 
-14011010539781149228105804766940852387840000000000000000000000 
5371487123315412946445614083998081875968000000000000000000000 
14945077909099892509979525084736909213696000000000000000000000 
10508257904835861921079353575205639290880000000000000000000000 
-5837921058242145511710751986225355161600000000000000000000000 
30528198500286200246399930567484034252800000000000000000000000 
8406606323868689536863482860164511432704000000000000000000000 
-8173089481539003716395052780715497226240000000000000000000000 
-191117856275265993932277852461768386805760000000000000000000000 
74549159512453462725287094468018910003200000000000000000000000 
-109498370327621992208953945637069311180800000000000000000000000 
-99088337506230760332931747009289219211264000000000000000000000 
133184923752827936730182233232914230804480000000000000000000000 
20874102022711579043145730220422594560000000000000000000000000) 4)
poly_contentputin => 669363540891825526475732891467776000000000000000000000
poly_normalizebycontentputin => (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0
 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0
 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0
 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0
 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0
 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (248062500 51975000 193921875 398671875 
189000000 -192937500 35510400 -19728000 -6854400 37677312 -20931840 8024768 
22327296 15698880 -8721600 45607800 12559104 -12210240 -285521760 111373200 
-163585800 -148033664 198972480 31185000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (51975000
 193921875 398671875 189000000 -192937500 35510400 -19728000 -6854400 37677312 
-20931840 8024768 22327296 15698880 -8721600 45607800 12559104 -12210240 
-285521760 111373200 -163585800 -148033664 198972480 31185000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 248062500
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (207900000 775687500 -637875000 756000000 -771750000 142041600 -78912000 
-27417600 150709248 -83727360 32099072 89309184 62795520 -34886400 182431200 
50236416 -48840960 -1142087040 445492800 -654343200 -592134656 795889920 
124740000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (775687500 -637875000 
756000000 -771750000 142041600 -78912000 -27417600 150709248 -83727360 32099072 
89309184 62795520 -34886400 182431200 50236416 -48840960 -1142087040 445492800 
-654343200 -592134656 795889920 124740000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 207900000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (38385900000 
-67756500000 54432000000 -55566000000 10226995200 -5681664000 -1974067200 
10851065856 -6028369920 2311133184 6430261248 4521277440 -2511820800 13135046400
 3617021952 -3516549120 -82230266880 32075481600 -47112710400 -42633695232 
57304074240 -4324320000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-67756500000 54432000000 -55566000000 
10226995200 -5681664000 -1974067200 10851065856 -6028369920 2311133184 
6430261248 4521277440 -2511820800 13135046400 3617021952 -3516549120 
-82230266880 32075481600 -47112710400 -42633695232 57304074240 -4324320000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 38385900000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-1388866500000 -37762200000 
-666792000000 122723942400 -68179968000 -23688806400 130212790272 -72340439040 
27733598208 77163134976 54255329280 -30141849600 157620556800 43404263424 
-42198589440 -986763202560 384905779200 -565352524800 -511604342784 687648890880
 485510760000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (-37762200000 -666792000000 122723942400 -68179968000 -23688806400 
130212790272 -72340439040 27733598208 77163134976 54255329280 -30141849600 
157620556800 43404263424 -42198589440 -986763202560 384905779200 -565352524800 
-511604342784 687648890880 485510760000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1388866500000
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1874250 
-55296 30720 32256 -32768 -23040 12800 -18432 17920 1068480 -593600 -680400 
602112 176960 -1250550) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4134375
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (2446959942000000000 -2756768175000000000 
507386799360000000 -281881555200000000 -97938408960000000 461549742796800000 
-256416523776000000 159460372915200000 273510958694400000 192312392832000000 
-106840218240000000 651662489520000000 153849914265600000 -149576305536000000 
-2595673037664000000 766913676480000000 -3282364111320000000 
-1278911018649600000 3088772199072000000 270436546800000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (2446959942000000000 -2756768175000000000 507386799360000000 
-281881555200000000 -97938408960000000 461549742796800000 -256416523776000000 
159460372915200000 273510958694400000 192312392832000000 -106840218240000000 
651662489520000000 153849914265600000 -149576305536000000 -2595673037664000000 
766913676480000000 -3282364111320000000 -1278911018649600000 3088772199072000000
 270436546800000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (2446959942000000000 -2756768175000000000 507386799360000000 
-281881555200000000 -97938408960000000 461549742796800000 -256416523776000000 
159460372915200000 273510958694400000 192312392832000000 -106840218240000000 
651662489520000000 153849914265600000 -149576305536000000 -2595673037664000000 
766913676480000000 -3282364111320000000 -1278911018649600000 3088772199072000000
 270436546800000000) 4)
poly_contentputin => 2721600000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0
 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0
 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0
 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0
 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0
 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (899088750 -1012921875 186429600 -103572000
 -35985600 169587648 -94215360 58590672 100496384 70661520 -39256400 239440950 
56529216 -54958960 -953730540 281787800 -1206042075 -469911456 1134910420 
99366750) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-1012921875 186429600 -103572000 -35985600 169587648 -94215360 58590672 
100496384 70661520 -39256400 239440950 56529216 -54958960 -953730540 281787800 
-1206042075 -469911456 1134910420 99366750) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 899088750
Arg4: (p ((2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-58752 
32640 34272 -34816 267120 -148400 -170100 153216 44240 -395640 219800 264600 
-267456 -32480 -1951425) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1929375
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (-1954306142578125 359692609500000 -199829227500000 -69429717000000 
380021430600000 -211123017000000 82229808150000 225197884800000 -103832016750000
 57684453750000 614906379281250 -28688725800000 -145812129750000 
-1484388387562500 346054629375000 -2564806311703125 -666168734700000 
2218870194187500 1946219987250000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-1954306142578125 359692609500000 -199829227500000 -69429717000000 
380021430600000 -211123017000000 82229808150000 225197884800000 -103832016750000
 57684453750000 614906379281250 -28688725800000 -145812129750000 
-1484388387562500 346054629375000 -2564806311703125 -666168734700000 
2218870194187500 1946219987250000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-1954306142578125 359692609500000 -199829227500000 -69429717000000 
380021430600000 -211123017000000 82229808150000 225197884800000 -103832016750000
 57684453750000 614906379281250 -28688725800000 -145812129750000 
-1484388387562500 346054629375000 -2564806311703125 -666168734700000 
2218870194187500 1946219987250000) 4)
poly_contentputin => 28940625
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0
 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0
 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0
 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0
 0 0 0 0 0 0 2)) (67528125 -12428640 6904800 2399040 -13131072 7295040 -2841328 
-7781376 3587760 -1993200 -21247170 991296 5038320 51290820 -11957400 88623045 
23018464 -76669740 -67248720) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (67528125
 -12428640 6904800 2399040 -13131072 7295040 -2841328 -7781376 3587760 -1993200 
-21247170 991296 5038320 51290820 -11957400 88623045 23018464 -76669740 
-67248720) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (67528125
 -12428640 6904800 2399040 -13131072 7295040 -2841328 -7781376 3587760 -1993200 
-21247170 991296 5038320 51290820 -11957400 88623045 23018464 -76669740 
-67248720) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0
 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0
 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0
 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0
 0 0 0 0 0 0 2)) (67528125 -12428640 6904800 2399040 -13131072 7295040 -2841328 
-7781376 3587760 -1993200 -21247170 991296 5038320 51290820 -11957400 88623045 
23018464 -76669740 -67248720) 4)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-58752 
32640 34272 -34816 267120 -148400 -170100 153216 44240 -395640 219800 264600 
-267456 -32480 -1951425) 3)
Arg2: (1 0 0 0 0 0 0 1 0)
Arg3: 1929375
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 210
poly_paircomb => (p ((4 0 0 1 0 0 0 0 3) (4 0 0 0 1 0 0 0 3) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (1620675000 
3038765625 -12337920 6854400 7197120 -7311360 56095200 -31164000 -35721000 
32175360 9290400 -83084400 46158000 55566000 -56165760 -6820800 -833490000 
463050000 486202500 -493920000 -166698000 972405000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 1 0 0 0 0 3) (4 0 0 0 1 0 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1
 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (1620675000 3038765625 
-12337920 6854400 7197120 -7311360 56095200 -31164000 -35721000 32175360 9290400
 -83084400 46158000 55566000 -56165760 -6820800 -833490000 463050000 486202500 
-493920000 -166698000 972405000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 1 0 0 0 0 3) (4 0 0 0 1 0 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1
 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (1620675000 3038765625 
-12337920 6854400 7197120 -7311360 56095200 -31164000 -35721000 32175360 9290400
 -83084400 46158000 55566000 -56165760 -6820800 -833490000 463050000 486202500 
-493920000 -166698000 972405000) 4)
poly_contentputin => 105
poly_normalizebycontentputin => (p ((4 0 0 1 0 0 0 0 3) (4 0 0 0 1 0 0 0 3) (3 0
 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0
 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0
 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0
 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0
 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (
15435000 28940625 -117504 65280 68544 -69632 534240 -296800 -340200 306432 88480
 -791280 439600 529200 -534912 -64960 -7938000 4410000 4630500 -4704000 -1587600
 9261000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 1 0 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (28940625 -117504 65280 68544 -69632 534240 
-296800 -340200 306432 88480 -791280 439600 529200 -534912 -64960 -7938000 
4410000 4630500 -4704000 -1587600 9261000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 15435000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (3 0 0 0 0 0 0 0 3)
Arg6: 72
poly_paircomb => (p ((4 0 0 0 1 0 0 0 3) (4 0 0 0 0 1 0 0 3) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (787185000 
-1620675000 -8460288 4700160 4935168 -5013504 38465280 -21369600 -24494400 
22063104 6370560 -56972160 31651200 38102400 -38513664 -4677120 -571536000 
317520000 333396000 -338688000 -114307200 -321048000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 1 0 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-1620675000 -8460288 4700160 4935168 -5013504 
38465280 -21369600 -24494400 22063104 6370560 -56972160 31651200 38102400 
-38513664 -4677120 -571536000 317520000 333396000 -338688000 -114307200 
-321048000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 787185000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (3 0 0 0 0 0 0 0 3)
Arg6: 12
poly_paircomb => (p ((4 0 0 0 0 1 0 0 3) (4 0 0 0 0 0 1 0 3) (3 0 1 0 0 0 1 1 0)
 (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-31255875000 
-14169330000 -101523456 56401920 59222016 -60162048 461583360 -256435200 
-293932800 264757248 76446720 -683665920 379814400 457228800 -462163968 
-56125440 -6858432000 3810240000 4000752000 -4064256000 -1371686400 7168014000) 
4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 0 0 0 0 1 0 3) (3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0
 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-14169330000 -101523456 56401920 59222016 
-60162048 461583360 -256435200 -293932800 264757248 76446720 -683665920 
379814400 457228800 -462163968 -56125440 -6858432000 3810240000 4000752000 
-4064256000 -1371686400 7168014000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -31255875000
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1874250 
-55296 30720 32256 -32768 -23040 12800 -18432 17920 1068480 -593600 -680400 
602112 176960 -1250550) 3)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 4134375
poly_paircomb => (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0)
 (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0)
 (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (3 0 0 0 0 0 0 0 3)) (-419736038400000 233186688000000 244846022400000 
-248732467200000 1908358704000000 -1060199280000000 -1215228420000000 
1094605747200000 316059408000000 -1728324864000000 960180480000000 
1008189504000000 -1024192512000000 -3546666648000000 1970370360000000 
1890355320000000 -2486867443200000 328061664000000 5040947520000000 
-2800526400000000 -4725888300000000 2016379008000000 -140026320000000 
-9451776600000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (-419736038400000 233186688000000 244846022400000 -248732467200000 
1908358704000000 -1060199280000000 -1215228420000000 1094605747200000 
316059408000000 -1728324864000000 960180480000000 1008189504000000 
-1024192512000000 -3546666648000000 1970370360000000 1890355320000000 
-2486867443200000 328061664000000 5040947520000000 -2800526400000000 
-4725888300000000 2016379008000000 -140026320000000 -9451776600000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0
 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3)) (-419736038400000 233186688000000 244846022400000 -248732467200000 
1908358704000000 -1060199280000000 -1215228420000000 1094605747200000 
316059408000000 -1728324864000000 960180480000000 1008189504000000 
-1024192512000000 -3546666648000000 1970370360000000 1890355320000000 
-2486867443200000 328061664000000 5040947520000000 -2800526400000000 
-4725888300000000 2016379008000000 -140026320000000 -9451776600000000) 4)
poly_contentputin => 28576800000
poly_normalizebycontentputin => (p ((3 0 1 0 0 0 1 1 0) (3 0 0 0 1 0 1 1 0) (3 0
 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0
 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0
 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0
 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0
 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0
 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (14688 -8160 -8568 8704 -66780 37100 42525 
-38304 -11060 60480 -33600 -35280 35840 124110 -68950 -66150 87024 -11480 
-176400 98000 165375 -70560 4900 330750) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0
 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0
 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-8160 
-8568 8704 -66780 37100 42525 -38304 -11060 60480 -33600 -35280 35840 124110 
-68950 -66150 87024 -11480 -176400 98000 165375 -70560 4900 330750) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 14688
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 1 1 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 1 0 1 1 0) (3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0)
 (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
) (-32640 -166464 34816 -267120 148400 170100 -153216 -44240 241920 -134400 
-141120 143360 496440 -275800 -264600 348096 -45920 -705600 392000 661500 
-282240 19600 1323000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1
 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)) (-166464 34816 -267120 148400
 170100 -153216 -44240 241920 -134400 -141120 143360 496440 -275800 -264600 
348096 -45920 -705600 392000 661500 -282240 19600 1323000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -32640
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 1 0) (3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0)
 (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 1 1 0)
) (-1507968 1005312 -3205440 1780800 2041200 -1838592 -530880 2903040 -1612800 
-1693440 1720320 5957280 -3309600 -3175200 4177152 -551040 -8467200 4704000 
7938000 -3386880 235200 15876000 -456960) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0
 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 1 1 0)) (1005312 -3205440 1780800 
2041200 -1838592 -530880 2903040 -1612800 -1693440 1720320 5957280 -3309600 
-3175200 4177152 -551040 -8467200 4704000 7938000 -3386880 235200 15876000 
-456960) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1507968
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 2 1 0) (3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0)
 (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 1 0 1)) (2216712960 -5048568000 2804760000 3214890000 -2895782400 
-836136000 4572288000 -2533386240 -2540160000 -2667168000 2709504000 9382716000 
-5212620000 -5000940000 6579014400 -867888000 -13335840000 7408800000 
12502350000 -5334336000 370440000 25004700000 1302884352 -723824640 -760015872 
772079616 -1099719936 -1520031744) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0
 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 1 0 1)) (
-5048568000 2804760000 3214890000 -2895782400 -836136000 4572288000 -2533386240 
-2540160000 -2667168000 2709504000 9382716000 -5212620000 -5000940000 6579014400
 -867888000 -13335840000 7408800000 12502350000 -5334336000 370440000 
25004700000 1302884352 -723824640 -760015872 772079616 -1099719936 -1520031744) 
4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2216712960
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 1 0 0 0 0 2 0) (3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0)
 (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 1 0 1)
) (-1060199280000 588999600000 675126900000 -608114304000 -175588560000 
960180480000 1330027776000 2957889312000 -560105280000 568995840000 
1970370360000 -1094650200000 -1050197400000 1381593024000 -182256480000 
-2800526400000 1555848000000 2625493500000 -1120210560000 77792400000 
5250987000000 -684014284800 380007936000 399008332800 -405341798400 48364646400 
798016665600) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0
 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 1 0 1)) (588999600000 675126900000 
-608114304000 -175588560000 960180480000 1330027776000 2957889312000 
-560105280000 568995840000 1970370360000 -1094650200000 -1050197400000 
1381593024000 -182256480000 -2800526400000 1555848000000 2625493500000 
-1120210560000 77792400000 5250987000000 -684014284800 380007936000 399008332800
 -405341798400 48364646400 798016665600) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1060199280000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 0 2 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 1 0 0 2 0) (3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0)
 (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 1 0 1)) (2355998400000 
12242301120000 -2432457216000 -702354240000 3840721920000 5320111104000 
11831557248000 -2240421120000 2275983360000 7881481440000 -4378600800000 
-4200789600000 5526372096000 -729025920000 -11202105600000 6223392000000 
10501974000000 -4480842240000 311169600000 21003948000000 -2736057139200 
1520031744000 1596033331200 -1621367193600 193458585600 3192066662400) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 1 0 1)) (12242301120000 -2432457216000 -702354240000 
3840721920000 5320111104000 11831557248000 -2240421120000 2275983360000 
7881481440000 -4378600800000 -4200789600000 5526372096000 -729025920000 
-11202105600000 6223392000000 10501974000000 -4480842240000 311169600000 
21003948000000 -2736057139200 1520031744000 1596033331200 -1621367193600 
193458585600 3192066662400) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2355998400000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 2 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 2 0) (3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (111567637440000 
-71597457792000 -8428250880000 46088663040000 63841333248000 141978686976000 
-26885053440000 27311800320000 94577777280000 -52543209600000 -50409475200000 
66316465152000 -8748311040000 -134425267200000 74680704000000 126023688000000 
-53770106880000 3734035200000 252047376000000 -32832685670400 18240380928000 
19152399974400 -19456406323200 2321503027200 32983977600000 38304799948800) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (-71597457792000 -8428250880000 46088663040000 
63841333248000 141978686976000 -26885053440000 27311800320000 94577777280000 
-52543209600000 -50409475200000 66316465152000 -8748311040000 -134425267200000 
74680704000000 126023688000000 -53770106880000 3734035200000 252047376000000 
-32832685670400 18240380928000 19152399974400 -19456406323200 2321503027200 
32983977600000 38304799948800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 111567637440000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 2 0) (3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-159624403747200000 -13274495136000000 72589644288000000 100550099865600000 
223616431987200000 -42343959168000000 43016085504000000 148959999216000000 
187433630899200000 -82755555120000000 -79394923440000000 104448432614400000 
-13778589888000000 -211719795840000000 117622108800000000 198487308600000000 
-84687918336000000 5881105440000000 396974617200000000 -51711479930880000 
28728599961600000 30165029959680000 -30643839959040000 -96394438748160000 
53552465971200000 56230089269760000 -53466263101440000 80064809354880000 
60330059919360000 112460178539520000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-13274495136000000 72589644288000000 
100550099865600000 223616431987200000 -42343959168000000 43016085504000000 
148959999216000000 187433630899200000 -82755555120000000 -79394923440000000 
104448432614400000 -13778589888000000 -211719795840000000 117622108800000000 
198487308600000000 -84687918336000000 5881105440000000 396974617200000000 
-51711479930880000 28728599961600000 30165029959680000 -30643839959040000 
-96394438748160000 53552465971200000 56230089269760000 -53466263101440000 
80064809354880000 60330059919360000 112460178539520000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -159624403747200000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-2787643978560000000 
15243825300480000000 21115520971776000000 46959450717312000000 
-8892231425280000000 9033377955840000000 31281599835360000000 
-94723436658816000000 -268787102477040000000 -16672933922400000000 
21934170849024000000 -2893503876480000000 -44461157126400000000 
24700642848000000000 41682334806000000000 -17784462850560000000 
1235032142400000000 83364669612000000000 -10859410785484800000 
6033005991936000000 6334656291532800000 -6435206391398400000 
48714910281676800000 -27063839045376000000 -28417030997644800000 
29635932107980800000 -3299064907622400000 12669312583065600000 
-56834061995289600000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (15243825300480000000 21115520971776000000 46959450717312000000 
-8892231425280000000 9033377955840000000 31281599835360000000 
-94723436658816000000 -268787102477040000000 -16672933922400000000 
21934170849024000000 -2893503876480000000 -44461157126400000000 
24700642848000000000 41682334806000000000 -17784462850560000000 
1235032142400000000 83364669612000000000 -10859410785484800000 
6033005991936000000 6334656291532800000 -6435206391398400000 
48714910281676800000 -27063839045376000000 -28417030997644800000 
29635932107980800000 -3299064907622400000 12669312583065600000 
-56834061995289600000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -2787643978560000000
Arg4: (p ((3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-181440 
-340200 113400 -258720 -538020 -66150 67200 -33075 -123480 -271950 -35280 25725 
-330750 183750 -132300 257250 93312 -51840 -54432 188352 -73920 -77616 78848 
36288 -35280 -37044 28224 -6272 -108864 -155232 -74088) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 14700
poly_paircomb => (p ((3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-505790123469926400000000 -948356481506112000000000 540203059085760000000000 
-410821091847936000000000 -809504287800364800000000 -315118451133360000000000 
320120331310080000000000 367638192988920000000000 -1736652797357184000000000 
-4709270186381880000000000 -245092128659280000000000 224084231917056000000000 
29177634364200000000000 -1575592255666800000000000 875329030926000000000000 
612730321648200000000000 -630236902266720000000000 735276385977840000000000 
1225460643296400000000000 260120634927390720000000 -144511463848550400000000 
-151737037040977920000000 365424980103106560000000 -117377454813696000000000 
-123246327554380800000000 125202618467942400000000 817267205834634240000000 
-496186513530624000000000 -520995839207155200000000 514326665638195200000000 
-65980357175577600000000 -303474074081955840000000 -246492655108761600000000 
-1041991678414310400000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 1 0 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-948356481506112000000000 
540203059085760000000000 -410821091847936000000000 -809504287800364800000000 
-315118451133360000000000 320120331310080000000000 367638192988920000000000 
-1736652797357184000000000 -4709270186381880000000000 -245092128659280000000000 
224084231917056000000000 29177634364200000000000 -1575592255666800000000000 
875329030926000000000000 612730321648200000000000 -630236902266720000000000 
735276385977840000000000 1225460643296400000000000 260120634927390720000000 
-144511463848550400000000 -151737037040977920000000 365424980103106560000000 
-117377454813696000000000 -123246327554380800000000 125202618467942400000000 
817267205834634240000000 -496186513530624000000000 -520995839207155200000000 
514326665638195200000000 -65980357175577600000000 -303474074081955840000000 
-246492655108761600000000 -1041991678414310400000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -505790123469926400000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 1 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 1 0 1 0 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-3793425926024448000000000 4552111111229337600000000 2160812236343040000000000 
-1643284367391744000000000 -3238017151201459200000000 -1260473804533440000000000
 1280481325240320000000000 1470552771955680000000000 -6946611189428736000000000 
-18837080745527520000000000 -980368514637120000000000 896336927668224000000000 
116710537456800000000000 -6302369022667200000000000 3501316123704000000000000 
2450921286592800000000000 -2520947609066880000000000 2941105543911360000000000 
4901842573185600000000000 1040482539709562880000000 -578045855394201600000000 
-606948148163911680000000 1461699920412426240000000 -469509819254784000000000 
-492985310217523200000000 500810473871769600000000 3269068823338536960000000 
-1984746054122496000000000 -2083983356828620800000000 2057306662552780800000000 
-263921428702310400000000 -1213896296327823360000000 -985970620435046400000000 
-4167966713657241600000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 1 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (4552111111229337600000000 
2160812236343040000000000 -1643284367391744000000000 -3238017151201459200000000 
-1260473804533440000000000 1280481325240320000000000 1470552771955680000000000 
-6946611189428736000000000 -18837080745527520000000000 -980368514637120000000000
 896336927668224000000000 116710537456800000000000 -6302369022667200000000000 
3501316123704000000000000 2450921286592800000000000 -2520947609066880000000000 
2941105543911360000000000 4901842573185600000000000 1040482539709562880000000 
-578045855394201600000000 -606948148163911680000000 1461699920412426240000000 
-469509819254784000000000 -492985310217523200000000 500810473871769600000000 
3269068823338536960000000 -1984746054122496000000000 -2083983356828620800000000 
2057306662552780800000000 -263921428702310400000000 -1213896296327823360000000 
-985970620435046400000000 -4167966713657241600000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3793425926024448000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 1 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 1 0 0 1 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
56901388890366720000000000 54625333334752051200000000 94211413504556544000000000
 -19719412408700928000000000 -38856205814417510400000000 
-15125685654401280000000000 15365775902883840000000000 
17646633263468160000000000 -83359334273144832000000000 
-226044968946330240000000000 -11764422175645440000000000 
10756043132018688000000000 1400526449481600000000000 -75628428272006400000000000
 42015793484448000000000000 29411055439113600000000000 
-30251371308802560000000000 35293266526936320000000000 
58822110878227200000000000 12485790476514754560000000 -6936550264730419200000000
 -7283377777966940160000000 17540399044949114880000000 
-5634117831057408000000000 -5915823722610278400000000 6009725686461235200000000 
39228825880062443520000000 -23816952649469952000000000 
-25007800281943449600000000 24687679950633369600000000 
-3167057144427724800000000 -67674718520276152320000000 
-11831647445220556800000000 -50015600563886899200000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 1 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (54625333334752051200000000 
94211413504556544000000000 -19719412408700928000000000 
-38856205814417510400000000 -15125685654401280000000000 
15365775902883840000000000 17646633263468160000000000 
-83359334273144832000000000 -226044968946330240000000000 
-11764422175645440000000000 10756043132018688000000000 1400526449481600000000000
 -75628428272006400000000000 42015793484448000000000000 
29411055439113600000000000 -30251371308802560000000000 
35293266526936320000000000 58822110878227200000000000 12485790476514754560000000
 -6936550264730419200000000 -7283377777966940160000000 
17540399044949114880000000 -5634117831057408000000000 -5915823722610278400000000
 6009725686461235200000000 39228825880062443520000000 
-23816952649469952000000000 -25007800281943449600000000 
24687679950633369600000000 -3167057144427724800000000 
-67674718520276152320000000 -11831647445220556800000000 
-50015600563886899200000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 56901388890366720000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
218501333339008204800000000 -512112500013300480000000000 
376845654018226176000000000 -78877649634803712000000000 
-155424823257670041600000000 -60502742617605120000000000 
61463103611535360000000000 70586533053872640000000000 
-333437337092579328000000000 -904179875785320960000000000 
-47057688702581760000000000 43024172528074752000000000 5602105797926400000000000
 -302513713088025600000000000 168063173937792000000000000 
117644221756454400000000000 -121005485235210240000000000 
141173066107745280000000000 235288443512908800000000000 
49943161906059018240000000 -27746201058921676800000000 
-29133511111867760640000000 70161596179796459520000000 
-22536471324229632000000000 -23663294890441113600000000 
24038902745844940800000000 156915303520249774080000000 
-95267810597879808000000000 -100031201127773798400000000 
98750719802533478400000000 -12668228577710899200000000 
-270698874081104609280000000 -47326589780882227200000000 
-200062402255547596800000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-512112500013300480000000000 
376845654018226176000000000 -78877649634803712000000000 
-155424823257670041600000000 -60502742617605120000000000 
61463103611535360000000000 70586533053872640000000000 
-333437337092579328000000000 -904179875785320960000000000 
-47057688702581760000000000 43024172528074752000000000 5602105797926400000000000
 -302513713088025600000000000 168063173937792000000000000 
117644221756454400000000000 -121005485235210240000000000 
141173066107745280000000000 235288443512908800000000000 
49943161906059018240000000 -27746201058921676800000000 
-29133511111867760640000000 70161596179796459520000000 
-22536471324229632000000000 -23663294890441113600000000 
24038902745844940800000000 156915303520249774080000000 
-95267810597879808000000000 -100031201127773798400000000 
98750719802533478400000000 -12668228577710899200000000 
-270698874081104609280000000 -47326589780882227200000000 
-200062402255547596800000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 218501333339008204800000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
) (-18354112000476689203200000000 -59814740001553496064000000000 
27132887089312284672000000000 -5679190773705867264000000000 
-11190587274552242995200000000 -4356197468467568640000000000 
4425343460030545920000000000 5082230379878830080000000000 
-24007488270665711616000000000 -65100951056543109120000000000 
-3388153586585886720000000000 3097740422021382144000000000 
403351617450700800000000000 -21780987342337843200000000000 
12100548523521024000000000000 8470383966464716800000000000 
-8712394936935137280000000000 10164460759757660160000000000 
16940767932929433600000000000 3595907657236249313280000000 
-1997726476242360729600000000 -2097612800054478766080000000 
5051634924945345085440000000 -1622625935344533504000000000 
-1703757232111760179200000000 1730800997700835737600000000 
11297901853457983733760000000 -6859282363047346176000000000 
-7202246481199713484800000000 7110051825782410444800000000 
-912112457595184742400000000 -19490318933839531868160000000 
-13984085333696525107200000000 -3407514464223520358400000000 
-14404492962399426969600000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-59814740001553496064000000000 27132887089312284672000000000 
-5679190773705867264000000000 -11190587274552242995200000000 
-4356197468467568640000000000 4425343460030545920000000000 
5082230379878830080000000000 -24007488270665711616000000000 
-65100951056543109120000000000 -3388153586585886720000000000 
3097740422021382144000000000 403351617450700800000000000 
-21780987342337843200000000000 12100548523521024000000000000 
8470383966464716800000000000 -8712394936935137280000000000 
10164460759757660160000000000 16940767932929433600000000000 
3595907657236249313280000000 -1997726476242360729600000000 
-2097612800054478766080000000 5051634924945345085440000000 
-1622625935344533504000000000 -1703757232111760179200000000 
1730800997700835737600000000 11297901853457983733760000000 
-6859282363047346176000000000 -7202246481199713484800000000 
7110051825782410444800000000 -912112457595184742400000000 
-19490318933839531868160000000 -13984085333696525107200000000 
-3407514464223520358400000000 -14404492962399426969600000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -18354112000476689203200000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-442465200011491614720000000000 325594645071747416064000000000 
-68150289284470407168000000000 -134287047294626915942400000000 
278099646386969581977600000000 53104121520366551040000000000 
60986764558545960960000000000 -288089859247988539392000000000 
-781211412678517309440000000000 -40657843039030640640000000000 
37172885064256585728000000000 4840219409408409600000000000 
-261371848108054118400000000000 145206582282252288000000000000 
101644607597576601600000000000 -104548739243221647360000000000 
121973529117091921920000000000 203289215195153203200000000000 
43150891886834991759360000000 -23972717714908328755200000000 
-25171353600653745192960000000 60619619099344141025280000000 
-19471511224134402048000000000 -20445086785341122150400000000 
20769611972410028851200000000 135574822241495804805120000000 
-82311388356568154112000000000 -86426957774396561817600000000 
85320621909388925337600000000 -10945349491142216908800000000 
-233883827206074382417920000000 -424766592011031950131200000000 
-40890173570682244300800000000 -172853915548793123635200000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (325594645071747416064000000000 
-68150289284470407168000000000 -134287047294626915942400000000 
278099646386969581977600000000 53104121520366551040000000000 
60986764558545960960000000000 -288089859247988539392000000000 
-781211412678517309440000000000 -40657843039030640640000000000 
37172885064256585728000000000 4840219409408409600000000000 
-261371848108054118400000000000 145206582282252288000000000000 
101644607597576601600000000000 -104548739243221647360000000000 
121973529117091921920000000000 203289215195153203200000000000 
43150891886834991759360000000 -23972717714908328755200000000 
-25171353600653745192960000000 60619619099344141025280000000 
-19471511224134402048000000000 -20445086785341122150400000000 
20769611972410028851200000000 135574822241495804805120000000 
-82311388356568154112000000000 -86426957774396561817600000000 
85320621909388925337600000000 -10945349491142216908800000000 
-233883827206074382417920000000 -424766592011031950131200000000 
-40890173570682244300800000000 -172853915548793123635200000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -442465200011491614720000000000
Arg4: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 1 0 0 1)) (-1680 3570 1728 -960 -1008 1024 -504 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
) (2564057829940010901504000000000000 -536683528115204456448000000000000 
-1800852033464492875776000000000000 3769635479338410522624000000000000 
418194956972886589440000000000000 480270770898549442560000000000000 
-2268707641577909747712000000000000 -6152039874843323811840000000000000 
-320180513932366295040000000000000 292736469881020612608000000000000 
38116727849091225600000000000000 -2058303303850926182400000000000000 
1143501835472736768000000000000000 800451284830915737600000000000000 
-823321321540370472960000000000000 960541541797098885120000000000000 
1600902569661831475200000000000000 339813273608825560104960000000000 
-188785152004903088947200000000000 566355456014709266841600000000000 
-424766592011031950131200000000000 -446004921611583547637760000000000 
477379500407335110574080000000000 -153338150890058416128000000000000 
292079306377206076538880000000000 163560694282728977203200000000000 
1067651725151779462840320000000000 -648202183307974213632000000000000 
-903614753279164698132480000000000 671899897536437787033600000000000 
-86194627242744958156800000000000 -1841835139247835761541120000000000 
-4144129063307630463467520000000000 -322010116869122673868800000000000 
-1361224584946745848627200000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-536683528115204456448000000000000 -1800852033464492875776000000000000 
3769635479338410522624000000000000 418194956972886589440000000000000 
480270770898549442560000000000000 -2268707641577909747712000000000000 
-6152039874843323811840000000000000 -320180513932366295040000000000000 
292736469881020612608000000000000 38116727849091225600000000000000 
-2058303303850926182400000000000000 1143501835472736768000000000000000 
800451284830915737600000000000000 -823321321540370472960000000000000 
960541541797098885120000000000000 1600902569661831475200000000000000 
339813273608825560104960000000000 -188785152004903088947200000000000 
566355456014709266841600000000000 -424766592011031950131200000000000 
-446004921611583547637760000000000 477379500407335110574080000000000 
-153338150890058416128000000000000 292079306377206076538880000000000 
163560694282728977203200000000000 1067651725151779462840320000000000 
-648202183307974213632000000000000 -903614753279164698132480000000000 
671899897536437787033600000000000 -86194627242744958156800000000000 
-1841835139247835761541120000000000 -4144129063307630463467520000000000 
-322010116869122673868800000000000 -1361224584946745848627200000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2564057829940010901504000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
-2146734112460817825792000000000000 -7203408133857971503104000000000000 
-7997978552106456023040000000000000 1672779827891546357760000000000000 
1921083083594197770240000000000000 -9074830566311638990848000000000000 
-24608159499373295247360000000000000 -1280722055729465180160000000000000 
1170945879524082450432000000000000 152466911396364902400000000000000 
-8233213215403704729600000000000000 4574007341890947072000000000000000 
3201805139323662950400000000000000 -3293285286161481891840000000000000 
3842166167188395540480000000000000 6403610278647325900800000000000000 
1359253094435302240419840000000000 -755140608019612355788800000000000 
2265421824058837067366400000000000 -1699066368044127800524800000000000 
-1784019686446334190551040000000000 1909518001629340442296320000000000 
-613352603560233664512000000000000 1168317225508824306155520000000000 
654242777130915908812800000000000 4270606900607117851361280000000000 
-2592808733231896854528000000000000 -3614459013116658792529920000000000 
2687599590145751148134400000000000 -344778508970979832627200000000000 
-7367340556991343046164480000000000 -16576516253230521853870080000000000 
-1288040467476490695475200000000000 -5444898339786983394508800000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-7203408133857971503104000000000000 
-7997978552106456023040000000000000 1672779827891546357760000000000000 
1921083083594197770240000000000000 -9074830566311638990848000000000000 
-24608159499373295247360000000000000 -1280722055729465180160000000000000 
1170945879524082450432000000000000 152466911396364902400000000000000 
-8233213215403704729600000000000000 4574007341890947072000000000000000 
3201805139323662950400000000000000 -3293285286161481891840000000000000 
3842166167188395540480000000000000 6403610278647325900800000000000000 
1359253094435302240419840000000000 -755140608019612355788800000000000 
2265421824058837067366400000000000 -1699066368044127800524800000000000 
-1784019686446334190551040000000000 1909518001629340442296320000000000 
-613352603560233664512000000000000 1168317225508824306155520000000000 
654242777130915908812800000000000 4270606900607117851361280000000000 
-2592808733231896854528000000000000 -3614459013116658792529920000000000 
2687599590145751148134400000000000 -344778508970979832627200000000000 
-7367340556991343046164480000000000 -16576516253230521853870080000000000 
-1288040467476490695475200000000000 -5444898339786983394508800000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -2146734112460817825792000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (-338319720191065250856960000000000000
 -350447373943278961950720000000000000 120440147608191337758720000000000000 
138317982018782239457280000000000000 -653387800774438007341056000000000000 
-1771787483954877257809920000000000000 -92211988012521492971520000000000000 
84308103325733936431104000000000000 10977617620538272972800000000000000 
-592791351509066740531200000000000000 329328528616148189184000000000000000 
230529970031303732428800000000000000 -237116540603626696212480000000000000 
276635964037564478914560000000000000 461059940062607464857600000000000000 
97866222799341761310228480000000000 -54370123777412089616793600000000000 
163110371332236268850380800000000000 -122332778499177201637785600000000000 
-128449417424136061719674880000000000 137485296117312511845335040000000000 
-44161387456336823844864000000000000 84118840236635350043197440000000000 
47105479953425945434521600000000000 307483696843712485298012160000000000 
-186682228792696573526016000000000000 -260241048944399433062154240000000000 
193507170490494082665676800000000000 -24824052645910547949158400000000000 
-530448520103376699323842560000000000 -1193509170232597573478645760000000000 
44652069539185010776473600000000000 -392032680464662804404633600000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (-350447373943278961950720000000000000 
120440147608191337758720000000000000 138317982018782239457280000000000000 
-653387800774438007341056000000000000 -1771787483954877257809920000000000000 
-92211988012521492971520000000000000 84308103325733936431104000000000000 
10977617620538272972800000000000000 -592791351509066740531200000000000000 
329328528616148189184000000000000000 230529970031303732428800000000000000 
-237116540603626696212480000000000000 276635964037564478914560000000000000 
461059940062607464857600000000000000 97866222799341761310228480000000000 
-54370123777412089616793600000000000 163110371332236268850380800000000000 
-122332778499177201637785600000000000 -128449417424136061719674880000000000 
137485296117312511845335040000000000 -44161387456336823844864000000000000 
84118840236635350043197440000000000 47105479953425945434521600000000000 
307483696843712485298012160000000000 -186682228792696573526016000000000000 
-260241048944399433062154240000000000 193507170490494082665676800000000000 
-24824052645910547949158400000000000 -530448520103376699323842560000000000 
-1193509170232597573478645760000000000 44652069539185010776473600000000000 
-392032680464662804404633600000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -338319720191065250856960000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1)) (869427315546631219445760000000000000 
7535036734737470568529920000000000000 1659815784225386873487360000000000000 
-7840653609293256088092672000000000000 -21261449807458527093719040000000000000 
-1106543856150257915658240000000000000 1011697239908807237173248000000000000 
131731411446459275673600000000000000 -7113496218108800886374400000000000000 
3951942343393778270208000000000000000 2766359640375644789145600000000000000 
-2845398487243520354549760000000000000 3319631568450773746974720000000000000 
5532719280751289578291200000000000000 1174394673592101135722741760000000000 
-652441485328945075401523200000000000 1957324455986835226204569600000000000 
-1467993341990126419653427200000000000 -1541393009089632740636098560000000000 
1649823553407750142144020480000000000 -529936649476041886138368000000000000 
1009426082839624200518369280000000000 565265759441111345214259200000000000 
3689804362124549823576145920000000000 -2240186745512358882312192000000000000 
-3122892587332793196745850880000000000 2322086045885928991988121600000000000 
-297888631750926575389900800000000000 -6365382241240520391886110720000000000 
-14322110042791170881743749120000000000 -4200651248204693382679756800000000000 
-4704392165575953652855603200000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
7535036734737470568529920000000000000 1659815784225386873487360000000000000 
-7840653609293256088092672000000000000 -21261449807458527093719040000000000000 
-1106543856150257915658240000000000000 1011697239908807237173248000000000000 
131731411446459275673600000000000000 -7113496218108800886374400000000000000 
3951942343393778270208000000000000000 2766359640375644789145600000000000000 
-2845398487243520354549760000000000000 3319631568450773746974720000000000000 
5532719280751289578291200000000000000 1174394673592101135722741760000000000 
-652441485328945075401523200000000000 1957324455986835226204569600000000000 
-1467993341990126419653427200000000000 -1541393009089632740636098560000000000 
1649823553407750142144020480000000000 -529936649476041886138368000000000000 
1009426082839624200518369280000000000 565265759441111345214259200000000000 
3689804362124549823576145920000000000 -2240186745512358882312192000000000000 
-3122892587332793196745850880000000000 2322086045885928991988121600000000000 
-297888631750926575389900800000000000 -6365382241240520391886110720000000000 
-14322110042791170881743749120000000000 -4200651248204693382679756800000000000 
-4704392165575953652855603200000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 869427315546631219445760000000000000
Arg4: (p ((3 0 0 0 0 0 2 0 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 0 1 0 1)) (3570 1728 -960 -1008 1024 
720 -400 576 -560 -1806) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 7875
poly_paircomb => (p ((3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
) (56234558769556107273751756800000000000000 
13071049300774921628712960000000000000000 
-61745147173184391693729792000000000000000 
-167433917233735900863037440000000000000000 
-8714032867183281085808640000000000000000 
7967115764281856992739328000000000000000 
1037384865140866795929600000000000000000 
-56018782717606806980198400000000000000000 
31121545954226003877888000000000000000000 
21785082167958202714521600000000000000000 
-22407513087042722792079360000000000000000 
26142098601549843257425920000000000000000 
43570164335916405429043200000000000000000 
9248358054537796443816591360000000000000 
-5137976696965442468786995200000000000000 
15413930090896327406360985600000000000000 
-11560447568172245554770739200000000000000 
-12138469946580857832509276160000000000000 
11489990081821453622181888000000000000000 
-3338600891699063882671718400000000000000 
8825613136433044848283484160000000000000 
3561174284479001474849832960000000000000 
28431221684537255382661201920000000000000 
-17293699694691173710430208000000000000000 
-24592779125245746424373575680000000000000 
17785637477596831229505699840000000000000 
-1858993678332433298305843200000000000000 
-50127385149769098086103121920000000000000 
-112786616586980470693732024320000000000000 
-31509942847734744406284042240000000000000 
-37047088303910635016237875200000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)) (
13071049300774921628712960000000000000000 
-61745147173184391693729792000000000000000 
-167433917233735900863037440000000000000000 
-8714032867183281085808640000000000000000 
7967115764281856992739328000000000000000 
1037384865140866795929600000000000000000 
-56018782717606806980198400000000000000000 
31121545954226003877888000000000000000000 
21785082167958202714521600000000000000000 
-22407513087042722792079360000000000000000 
26142098601549843257425920000000000000000 
43570164335916405429043200000000000000000 
9248358054537796443816591360000000000000 
-5137976696965442468786995200000000000000 
15413930090896327406360985600000000000000 
-11560447568172245554770739200000000000000 
-12138469946580857832509276160000000000000 
11489990081821453622181888000000000000000 
-3338600891699063882671718400000000000000 
8825613136433044848283484160000000000000 
3561174284479001474849832960000000000000 
28431221684537255382661201920000000000000 
-17293699694691173710430208000000000000000 
-24592779125245746424373575680000000000000 
17785637477596831229505699840000000000000 
-1858993678332433298305843200000000000000 
-50127385149769098086103121920000000000000 
-112786616586980470693732024320000000000000 
-31509942847734744406284042240000000000000 
-37047088303910635016237875200000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 56234558769556107273751756800000000000000
Arg4: (p ((2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0 0 0 0 1) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (-810 -1215 -1620 504 -280 -486 -392 -972)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
5019282931497569905425776640000000000000000 
21839856088837640481346682880000000000000000 
4030364687256084406202007552000000000000000 
-3346188620998379936950517760000000000000000 
3059372453484233085211901952000000000000000 
398355788214092849636966400000000000000000 
-21511212563561013880396185600000000000000000 
91099985206680893783477846016000000000000000 
11950673646422785489108992000000000000000000 
8365471552495949842376294400000000000000000 
-8604485025424405552158474240000000000000000 
10038565862995139810851553280000000000000000 
16730943104991899684752588800000000000000000 
3551369492942513834425571082240000000000000 
-1972983051634729908014206156800000000000000 
5918949154904189724042618470400000000000000 
-4439211866178142293031963852800000000000000 
-4661172459487049407683562045440000000000000 
4412156191419438190917844992000000000000000 
-1282022742412440530945939865600000000000000 
3389035444390289221740857917440000000000000 
1367490925239936566342335856640000000000000 
10917589126862306066941901537280000000000000 
-6640780682761410704805199872000000000000000 
-9443627184094366626959453061120000000000000 
6829684791397183192130188738560000000000000 
-713853572479654386549443788800000000000000 
-47591133517367611731034484244480000000000000 
15745676455475710036650491904000000000000000 
-15980065207396232611349743534080000000000000 
-12099818053530141852013072220160000000000000 
7817865128964310205075344588800000000000000 
54659991124008536270086707609600000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (21839856088837640481346682880000000000000000 
4030364687256084406202007552000000000000000 
-3346188620998379936950517760000000000000000 
3059372453484233085211901952000000000000000 
398355788214092849636966400000000000000000 
-21511212563561013880396185600000000000000000 
91099985206680893783477846016000000000000000 
11950673646422785489108992000000000000000000 
8365471552495949842376294400000000000000000 
-8604485025424405552158474240000000000000000 
10038565862995139810851553280000000000000000 
16730943104991899684752588800000000000000000 
3551369492942513834425571082240000000000000 
-1972983051634729908014206156800000000000000 
5918949154904189724042618470400000000000000 
-4439211866178142293031963852800000000000000 
-4661172459487049407683562045440000000000000 
4412156191419438190917844992000000000000000 
-1282022742412440530945939865600000000000000 
3389035444390289221740857917440000000000000 
1367490925239936566342335856640000000000000 
10917589126862306066941901537280000000000000 
-6640780682761410704805199872000000000000000 
-9443627184094366626959453061120000000000000 
6829684791397183192130188738560000000000000 
-713853572479654386549443788800000000000000 
-47591133517367611731034484244480000000000000 
15745676455475710036650491904000000000000000 
-15980065207396232611349743534080000000000000 
-12099818053530141852013072220160000000000000 
7817865128964310205075344588800000000000000 
54659991124008536270086707609600000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 5019282931497569905425776640000000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (87359424355350561925386731520000000000000000 
16121458749024337624808030208000000000000000 
-58558300867471648896634060800000000000000000 
12237489813936932340847607808000000000000000 
1593423152856371398547865600000000000000000 
-86044850254244055521584742400000000000000000 
364399940826723575133911384064000000000000000 
47802694585691141956435968000000000000000000 
33461886209983799369505177600000000000000000 
-34417940101697622208633896960000000000000000 
40154263451980559243406213120000000000000000 
66923772419967598739010355200000000000000000 
14205477971770055337702284328960000000000000 
-7891932206538919632056824627200000000000000 
23675796619616758896170473881600000000000000 
-17756847464712569172127855411200000000000000 
-18644689837948197630734248181760000000000000 
17648624765677752763671379968000000000000000 
-5128090969649762123783759462400000000000000 
13556141777561156886963431669760000000000000 
5469963700959746265369343426560000000000000 
43670356507449224267767606149120000000000000 
-26563122731045642819220799488000000000000000 
-37774508736377466507837812244480000000000000 
27318739165588732768520754954240000000000000 
-2855414289918617546197775155200000000000000 
-190364534069470446924137936977920000000000000 
62982705821902840146601967616000000000000000 
-63920260829584930445398974136320000000000000 
-48399272214120567408052288880640000000000000 
31271460515857240820301378355200000000000000 
218639964496034145080346830438400000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
16121458749024337624808030208000000000000000 
-58558300867471648896634060800000000000000000 
12237489813936932340847607808000000000000000 
1593423152856371398547865600000000000000000 
-86044850254244055521584742400000000000000000 
364399940826723575133911384064000000000000000 
47802694585691141956435968000000000000000000 
33461886209983799369505177600000000000000000 
-34417940101697622208633896960000000000000000 
40154263451980559243406213120000000000000000 
66923772419967598739010355200000000000000000 
14205477971770055337702284328960000000000000 
-7891932206538919632056824627200000000000000 
23675796619616758896170473881600000000000000 
-17756847464712569172127855411200000000000000 
-18644689837948197630734248181760000000000000 
17648624765677752763671379968000000000000000 
-5128090969649762123783759462400000000000000 
13556141777561156886963431669760000000000000 
5469963700959746265369343426560000000000000 
43670356507449224267767606149120000000000000 
-26563122731045642819220799488000000000000000 
-37774508736377466507837812244480000000000000 
27318739165588732768520754954240000000000000 
-2855414289918617546197775155200000000000000 
-190364534069470446924137936977920000000000000 
62982705821902840146601967616000000000000000 
-63920260829584930445398974136320000000000000 
-48399272214120567408052288880640000000000000 
31271460515857240820301378355200000000000000 
218639964496034145080346830438400000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 87359424355350561925386731520000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (-6177446615919694892746307272704000000000000000 
-13388937219769767722723259187200000000000000000 
881099266603459128541027762176000000000000000 
114726467005658740695446323200000000000000000 
-6195229218305571997554101452800000000000000000 
26236795739524097409641619652608000000000000000 
3441794010169762220863389696000000000000000000 
2409255807118833554604372787200000000000000000 
-2478091687322228799021640581120000000000000000 
2891106968542600265525247344640000000000000000 
4818511614237667109208745574400000000000000000 
1022794413967443984314564471685120000000000000 
-568219118870802213508091373158400000000000000 
1704657356612406640524274119475200000000000000 
-1278493017459304980393205589606400000000000000 
-1342417668332270229412865869086720000000000000 
1270700983128798198984339357696000000000000000 
-369222549814782872912430681292800000000000000 
976042207984403295861367080222720000000000000 
393837386469101731106592726712320000000000000 
3144265668536344147279267642736640000000000000 
-1912544836635286282983897563136000000000000000 
-2719764629019177588564322481602560000000000000 
1966949219922388759333494356705280000000000000 
-205589828874140463326239811174400000000000000 
-13706246453001872178537931462410240000000000000 
4534754819177004490555341668352000000000000000 
-4602258779730114992068726137815040000000000000 
-3484747599416680853379764799406080000000000000 
-3339458001600714624163051575705600000000000000 
15742077443714458445784971791564800000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-13388937219769767722723259187200000000000000000 
881099266603459128541027762176000000000000000 
114726467005658740695446323200000000000000000 
-6195229218305571997554101452800000000000000000 
26236795739524097409641619652608000000000000000 
3441794010169762220863389696000000000000000000 
2409255807118833554604372787200000000000000000 
-2478091687322228799021640581120000000000000000 
2891106968542600265525247344640000000000000000 
4818511614237667109208745574400000000000000000 
1022794413967443984314564471685120000000000000 
-568219118870802213508091373158400000000000000 
1704657356612406640524274119475200000000000000 
-1278493017459304980393205589606400000000000000 
-1342417668332270229412865869086720000000000000 
1270700983128798198984339357696000000000000000 
-369222549814782872912430681292800000000000000 
976042207984403295861367080222720000000000000 
393837386469101731106592726712320000000000000 
3144265668536344147279267642736640000000000000 
-1912544836635286282983897563136000000000000000 
-2719764629019177588564322481602560000000000000 
1966949219922388759333494356705280000000000000 
-205589828874140463326239811174400000000000000 
-13706246453001872178537931462410240000000000000 
4534754819177004490555341668352000000000000000 
-4602258779730114992068726137815040000000000000 
-3484747599416680853379764799406080000000000000 
-3339458001600714624163051575705600000000000000 
15742077443714458445784971791564800000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -6177446615919694892746307272704000000000000000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-68005547398441789281484501155840000000000000000 
121767230285796017611925864054784000000000000000 
1376717604067904888345355878400000000000000000 
-74342750619666863970649217433600000000000000000 
314841548874289168915699435831296000000000000000 
41301528122037146650360676352000000000000000000 
28911069685426002655252473446400000000000000000 
-29737100247866745588259686973440000000000000000 
34693283622511203186302968135680000000000000000 
57822139370852005310504946892800000000000000000 
12273532967609327811774773660221440000000000000 
-6818629426449626562097096477900800000000000000 
20455888279348879686291289433702400000000000000 
-15341916209511659764718467075276800000000000000 
-16109012019987242752954390429040640000000000000 
15248411797545578387812072292352000000000000000 
-4430670597777394474949168175513600000000000000 
11712506495812839550336404962672640000000000000 
4726048637629220773279112720547840000000000000 
37731188022436129767351211712839680000000000000 
-22950538039623435395806770757632000000000000000 
-32637175548230131062771869779230720000000000000 
23603390639068665112001932280463360000000000000 
-2467077946489685559914877734092800000000000000 
-164474957436022466142455177548922880000000000000 
54417057830124053886664100020224000000000000000 
-55227105356761379904824713653780480000000000000 
-41816971193000170240557177592872960000000000000 
-126557748642084303988404920726323200000000000000 
188904929324573501349419661498777600000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (121767230285796017611925864054784000000000000000
 1376717604067904888345355878400000000000000000 
-74342750619666863970649217433600000000000000000 
314841548874289168915699435831296000000000000000 
41301528122037146650360676352000000000000000000 
28911069685426002655252473446400000000000000000 
-29737100247866745588259686973440000000000000000 
34693283622511203186302968135680000000000000000 
57822139370852005310504946892800000000000000000 
12273532967609327811774773660221440000000000000 
-6818629426449626562097096477900800000000000000 
20455888279348879686291289433702400000000000000 
-15341916209511659764718467075276800000000000000 
-16109012019987242752954390429040640000000000000 
15248411797545578387812072292352000000000000000 
-4430670597777394474949168175513600000000000000 
11712506495812839550336404962672640000000000000 
4726048637629220773279112720547840000000000000 
37731188022436129767351211712839680000000000000 
-22950538039623435395806770757632000000000000000 
-32637175548230131062771869779230720000000000000 
23603390639068665112001932280463360000000000000 
-2467077946489685559914877734092800000000000000 
-164474957436022466142455177548922880000000000000 
54417057830124053886664100020224000000000000000 
-55227105356761379904824713653780480000000000000 
-41816971193000170240557177592872960000000000000 
-126557748642084303988404920726323200000000000000 
188904929324573501349419661498777600000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -68005547398441789281484501155840000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (420 -1680 864 -480 -504 512 -252 -1008) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
220345717607474279237006726371737600000000000000000 
2168330226406950199143935508480000000000000000000 
-117089832225975310753772517457920000000000000000000 
381626119847623235049332649492480000000000000000000 
65049906792208505974318065254400000000000000000000 
45534934754545954182022645678080000000000000000000 
-46835932890390124301509006983168000000000000000000 
54641921705455145018427174813696000000000000000000 
91069869509091908364045291356160000000000000000000 
19330814423984691303545268514848768000000000000000 
-10739341346658161835302926952693760000000000000000 
32218024039974485505908780858081280000000000000000 
-24163518029980864129431585643560960000000000000000 
-25371693931479907335903164925739008000000000000000 
24016248581134285960804013860454400000000000000000 
-6978306191499396298044939876433920000000000000000 
18447197730905222291779837816209408000000000000000 
7443526604266022717914602534862848000000000000000 
59426621135336904383578158447722496000000000000000 
-36147097412406910748395663943270400000000000000000 
-51403551488462456423865694902288384000000000000000 
37175340256533147551403043341729792000000000000000 
-3885647765721254756865932431196160000000000000000 
-200291265009481678235164295640907776000000000000000 
53064203331193326016383396977049600000000000000000 
-121257486825713835147967112587247616000000000000000 
-31042889360973072016757490116984832000000000000000 
-216465852055690109680671844435230720000000000000000 
228975671908573941029599589695488000000000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (2168330226406950199143935508480000000000000000000 
-117089832225975310753772517457920000000000000000000 
381626119847623235049332649492480000000000000000000 
65049906792208505974318065254400000000000000000000 
45534934754545954182022645678080000000000000000000 
-46835932890390124301509006983168000000000000000000 
54641921705455145018427174813696000000000000000000 
91069869509091908364045291356160000000000000000000 
19330814423984691303545268514848768000000000000000 
-10739341346658161835302926952693760000000000000000 
32218024039974485505908780858081280000000000000000 
-24163518029980864129431585643560960000000000000000 
-25371693931479907335903164925739008000000000000000 
24016248581134285960804013860454400000000000000000 
-6978306191499396298044939876433920000000000000000 
18447197730905222291779837816209408000000000000000 
7443526604266022717914602534862848000000000000000 
59426621135336904383578158447722496000000000000000 
-36147097412406910748395663943270400000000000000000 
-51403551488462456423865694902288384000000000000000 
37175340256533147551403043341729792000000000000000 
-3885647765721254756865932431196160000000000000000 
-200291265009481678235164295640907776000000000000000 
53064203331193326016383396977049600000000000000000 
-121257486825713835147967112587247616000000000000000 
-31042889360973072016757490116984832000000000000000 
-216465852055690109680671844435230720000000000000000 
228975671908573941029599589695488000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 220345717607474279237006726371737600000000000000000
Arg4: (p ((2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (-840 -1575 432 -240 -252 256 -126 -504) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (455349347545459541820226456780800000000000000000000 
-24588864767454815258292228666163200000000000000000000 
265231887958279273919445506545680384000000000000000000 
360704985658135776052892387738910720000000000000000000 
9562336298454650378224755592396800000000000000000000 
-9835545906981926103316891466465280000000000000000000 
11474803558145580453869706710876160000000000000000000 
19124672596909300756449511184793600000000000000000000 
4059471029036785173744506388118241280000000000000000 
-2255261682798213985413614660065689600000000000000000 
6765785048394641956240843980197068800000000000000000 
-5074338786295981467180632985147801600000000000000000 
-5328055725610780540539664634405191680000000000000000 
5043412202038200051768842910695424000000000000000000 
-1465444300214873222589437374051123200000000000000000 
3873911523490096681273765941403975680000000000000000 
1563140586895864770762066532321198080000000000000000 
12479590438420749920551413274021724160000000000000000 
-7590890456605451257163089428086784000000000000000000 
-10794745812577115849011795929480560640000000000000000 
7806821453871960985794639101763256320000000000000000 
-815986030801463498941845810551193600000000000000000 
-137250515658420041059771407877181276160000000000000000 
64026454925344425480322127694397440000000000000000000 
30063048603683612986652601402355875840000000000000000 
-62927510473317760608192794875731640320000000000000000 
-17694268513153163849078239808559513600000000000000000 
159139132774967564351667303927408230400000000000000000) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-24588864767454815258292228666163200000000000000000000 
265231887958279273919445506545680384000000000000000000 
360704985658135776052892387738910720000000000000000000 
9562336298454650378224755592396800000000000000000000 
-9835545906981926103316891466465280000000000000000000 
11474803558145580453869706710876160000000000000000000 
19124672596909300756449511184793600000000000000000000 
4059471029036785173744506388118241280000000000000000 
-2255261682798213985413614660065689600000000000000000 
6765785048394641956240843980197068800000000000000000 
-5074338786295981467180632985147801600000000000000000 
-5328055725610780540539664634405191680000000000000000 
5043412202038200051768842910695424000000000000000000 
-1465444300214873222589437374051123200000000000000000 
3873911523490096681273765941403975680000000000000000 
1563140586895864770762066532321198080000000000000000 
12479590438420749920551413274021724160000000000000000 
-7590890456605451257163089428086784000000000000000000 
-10794745812577115849011795929480560640000000000000000 
7806821453871960985794639101763256320000000000000000 
-815986030801463498941845810551193600000000000000000 
-137250515658420041059771407877181276160000000000000000 
64026454925344425480322127694397440000000000000000000 
30063048603683612986652601402355875840000000000000000 
-62927510473317760608192794875731640320000000000000000 
-17694268513153163849078239808559513600000000000000000 
159139132774967564351667303927408230400000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 455349347545459541820226456780800000000000000000000
Arg4: (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-71820000 -135174375 
-58471875 -17955000 1382400 -768000 -806400 -787968 437760 1278848 -466944 
-328320 182400 -403200 -262656 255360 43208640 -14554800 22579200 17322496 
-6096720 -43092000) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 5512500
poly_paircomb => (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (-135546117030594669111335910522224640000000000000000000000000 
1494793972510729401774472018959060172800000000000000000000000 
2049937796901588743144904761064554496000000000000000000000000 
79337508976240927356833519055667200000000000000000000000000 
-46042649277059141571152198177390592000000000000000000000000 
63254854614277512251956758243704832000000000000000000000000 
105424757690462520419927930406174720000000000000000000000000 
22377834047565278270266591464501805056000000000000000000000 
-12432130026425154594592550813612113920000000000000000000000 
36666915141228620513165371386982563840000000000000000000000 
-27622584260541684909715305411819601920000000000000000000000 
-29003713473568769155201070682410582016000000000000000000000 
28160610478422278449624746745905178214400000000000000000000 
-8277595435315989008551495858177179648000000000000000000000 
20772614670829342111383921788188203417600000000000000000000 
8829435131003721609121595582055658291200000000000000000000 
68943242589580509213810082423335026688000000000000000000000 
-41927839363029841875539539778045214720000000000000000000000 
-59322439434901021830415609753887571968000000000000000000000 
43154703502698085155609281448702168268800000000000000000000 
-4614401004182276086516138058666999808000000000000000000000 
-776268493599367121319064995612478930944000000000000000000000 
359573351459615799999560760948519075840000000000000000000000 
155441131439707476502255208017541726208000000000000000000000 
-354775688735622988084005487269150248140800000000000000000000 
-94763517704589461620237585901099679744000000000000000000000 
896876383506437641064683211375436103680000000000000000000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-135546117030594669111335910522224640000000000000000000000000 
1494793972510729401774472018959060172800000000000000000000000 
2049937796901588743144904761064554496000000000000000000000000 
79337508976240927356833519055667200000000000000000000000000 
-46042649277059141571152198177390592000000000000000000000000 
63254854614277512251956758243704832000000000000000000000000 
105424757690462520419927930406174720000000000000000000000000 
22377834047565278270266591464501805056000000000000000000000 
-12432130026425154594592550813612113920000000000000000000000 
36666915141228620513165371386982563840000000000000000000000 
-27622584260541684909715305411819601920000000000000000000000 
-29003713473568769155201070682410582016000000000000000000000 
28160610478422278449624746745905178214400000000000000000000 
-8277595435315989008551495858177179648000000000000000000000 
20772614670829342111383921788188203417600000000000000000000 
8829435131003721609121595582055658291200000000000000000000 
68943242589580509213810082423335026688000000000000000000000 
-41927839363029841875539539778045214720000000000000000000000 
-59322439434901021830415609753887571968000000000000000000000 
43154703502698085155609281448702168268800000000000000000000 
-4614401004182276086516138058666999808000000000000000000000 
-776268493599367121319064995612478930944000000000000000000000 
359573351459615799999560760948519075840000000000000000000000 
155441131439707476502255208017541726208000000000000000000000 
-354775688735622988084005487269150248140800000000000000000000 
-94763517704589461620237585901099679744000000000000000000000 
896876383506437641064683211375436103680000000000000000000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-135546117030594669111335910522224640000000000000000000000000 
1494793972510729401774472018959060172800000000000000000000000 
2049937796901588743144904761064554496000000000000000000000000 
79337508976240927356833519055667200000000000000000000000000 
-46042649277059141571152198177390592000000000000000000000000 
63254854614277512251956758243704832000000000000000000000000 
105424757690462520419927930406174720000000000000000000000000 
22377834047565278270266591464501805056000000000000000000000 
-12432130026425154594592550813612113920000000000000000000000 
36666915141228620513165371386982563840000000000000000000000 
-27622584260541684909715305411819601920000000000000000000000 
-29003713473568769155201070682410582016000000000000000000000 
28160610478422278449624746745905178214400000000000000000000 
-8277595435315989008551495858177179648000000000000000000000 
20772614670829342111383921788188203417600000000000000000000 
8829435131003721609121595582055658291200000000000000000000 
68943242589580509213810082423335026688000000000000000000000 
-41927839363029841875539539778045214720000000000000000000000 
-59322439434901021830415609753887571968000000000000000000000 
43154703502698085155609281448702168268800000000000000000000 
-4614401004182276086516138058666999808000000000000000000000 
-776268493599367121319064995612478930944000000000000000000000 
359573351459615799999560760948519075840000000000000000000000 
155441131439707476502255208017541726208000000000000000000000 
-354775688735622988084005487269150248140800000000000000000000 
-94763517704589461620237585901099679744000000000000000000000 
896876383506437641064683211375436103680000000000000000000000) 4)
poly_contentputin => 455349347545459541820226456780800000000000000000000
poly_normalizebycontentputin => (p ((3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0
 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0
 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0
 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0
 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0
 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0
 0 0 0 0 0 0 2)) (297675000 -3282741000 -4501901250 -174234375 101115000 
-138915000 -231525000 -49144320 27302400 -80524800 60662400 63695520 -61843968 
18178560 -45619072 -19390464 -151407360 92078400 130278960 -94772736 10133760 
1704775680 -789664800 -341366760 779128576 208111680 -1969644600) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-3282741000 -4501901250 
-174234375 101115000 -138915000 -231525000 -49144320 27302400 -80524800 60662400
 63695520 -61843968 18178560 -45619072 -19390464 -151407360 92078400 130278960 
-94772736 10133760 1704775680 -789664800 -341366760 779128576 208111680 
-1969644600) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 297675000
Arg4: (p ((1 0 0 0 0 1 0 0 0)) (9) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 4
poly_paircomb => (p ((3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-13130964000 
-18007605000 -3376012500 404460000 -555660000 -926100000 -196577280 109209600 
-322099200 242649600 254782080 -247375872 72714240 -182476288 -77561856 
-605629440 368313600 521115840 -379090944 40535040 6819102720 -3158659200 
-1365467040 3116514304 832446720 -7878578400) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0
 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-18007605000 -3376012500 404460000 -555660000 
-926100000 -196577280 109209600 -322099200 242649600 254782080 -247375872 
72714240 -182476288 -77561856 -605629440 368313600 521115840 -379090944 40535040
 6819102720 -3158659200 -1365467040 3116514304 832446720 -7878578400) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -13130964000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 0 0 0 0 0 0 0 0)) (84 105 
64) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-193546584000 1135678320000 
29121120000 -40007520000 -66679200000 -14153564160 7863091200 -23191142400 
17470771200 18344309760 -17811062784 5235425280 -13138292736 -5584453632 
-43605319680 26518579200 37520340480 -27294547968 2918522880 490975395840 
-227423462400 -98313626880 224389029888 59936163840 273124051200) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0
 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1135678320000 29121120000 -40007520000 -66679200000 -14153564160 
7863091200 -23191142400 17470771200 18344309760 -17811062784 5235425280 
-13138292736 -5584453632 -43605319680 26518579200 37520340480 -27294547968 
2918522880 490975395840 -227423462400 -98313626880 224389029888 59936163840 
273124051200) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -193546584000
Arg4: (p ((1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (15 18 
-14) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2)
 (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (16531338600000 3833291952000 -480090240000 -800150400000 
-169842769920 94357094400 -278293708800 209649254400 220131717120 -213732753408 
62825103360 -157659512832 -67013443584 -523263836160 318222950400 450244085760 
-327534575616 35022274560 5891704750080 -2729081548800 -1179763522560 
2692668358656 719233966080 567836438400) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
3833291952000 -480090240000 -800150400000 -169842769920 94357094400 
-278293708800 209649254400 220131717120 -213732753408 62825103360 -157659512832 
-67013443584 -523263836160 318222950400 450244085760 -327534575616 35022274560 
5891704750080 -2729081548800 -1179763522560 2692668358656 719233966080 
567836438400) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 16531338600000
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1874250 
-55296 30720 32256 -32768 -23040 12800 -18432 17920 1068480 -593600 -680400 
602112 176960 -1250550) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4134375
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (-15135594957000000000 -1984873086000000000 -3308121810000000000 
-702193701888000000 390107612160000000 -1150570552320000000 866768636160000000 
910107067968000000 30465546854400000 -248100185088000000 -1185058406246400000 
264640197427200000 -1782486881280000000 1104051876480000000 1861477892064000000 
-1049445127987200000 -151446371328000000 6695112158784000000 
-1470043935360000000 6370337969856000000 1178783398195200000 48197249856000000 
23020914261240000000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-15135594957000000000 -1984873086000000000 -3308121810000000000 
-702193701888000000 390107612160000000 -1150570552320000000 866768636160000000 
910107067968000000 30465546854400000 -248100185088000000 -1185058406246400000 
264640197427200000 -1782486881280000000 1104051876480000000 1861477892064000000 
-1049445127987200000 -151446371328000000 6695112158784000000 
-1470043935360000000 6370337969856000000 1178783398195200000 48197249856000000 
23020914261240000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
-15135594957000000000 -1984873086000000000 -3308121810000000000 
-702193701888000000 390107612160000000 -1150570552320000000 866768636160000000 
910107067968000000 30465546854400000 -248100185088000000 -1185058406246400000 
264640197427200000 -1782486881280000000 1104051876480000000 1861477892064000000 
-1049445127987200000 -151446371328000000 6695112158784000000 
-1470043935360000000 6370337969856000000 1178783398195200000 48197249856000000 
23020914261240000000) 4)
poly_contentputin => 2721600000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (3 0
 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0
 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0
 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0
 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0
 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0
 0 0 0 0 0 0 2)) (5561285625 729303750 1215506250 258007680 -143337600 422755200
 -318477600 -334401480 -11193984 91159680 435427104 -97236992 654940800 
-405662800 -683964540 385598592 55646080 -2459991240 540139600 -2340659160 
-433121472 -17709160 -8458595775) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (729303750 1215506250 
258007680 -143337600 422755200 -318477600 -334401480 -11193984 91159680 
435427104 -97236992 654940800 -405662800 -683964540 385598592 55646080 
-2459991240 540139600 -2340659160 -433121472 -17709160 -8458595775) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 5561285625
Arg4: (p ((2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-58752 
32640 34272 -34816 267120 -148400 -170100 153216 44240 -395640 219800 264600 
-267456 -32480 -1951425) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1929375
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1407100422656250 
2345167371093750 497793567600000 -276551982000000 815653314000000 
-614462719500000 -645185855475000 305139260160000 -5639155200000 649505787840000
 6015098880000 -221904210150000 42619122000000 -373649399550000 -108113654880000
 -138669120450000 -2545978554000000 -180238739625000 -5987525443200000 
651745468080000 146462946525000 -5467371422625000) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1407100422656250 
2345167371093750 497793567600000 -276551982000000 815653314000000 
-614462719500000 -645185855475000 305139260160000 -5639155200000 649505787840000
 6015098880000 -221904210150000 42619122000000 -373649399550000 -108113654880000
 -138669120450000 -2545978554000000 -180238739625000 -5987525443200000 
651745468080000 146462946525000 -5467371422625000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1407100422656250 
2345167371093750 497793567600000 -276551982000000 815653314000000 
-614462719500000 -645185855475000 305139260160000 -5639155200000 649505787840000
 6015098880000 -221904210150000 42619122000000 -373649399550000 -108113654880000
 -138669120450000 -2545978554000000 -180238739625000 -5987525443200000 
651745468080000 146462946525000 -5467371422625000) 4)
poly_contentputin => 1653750
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 1 2) (3 0 0 0 0 0 0 0 3) (2 0
 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0
 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0
 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0
 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
850854375 1418090625 301008960 -167227200 493214400 -371557200 -390135060 
184513536 -3409920 392747264 3637248 -134182440 25771200 -225940680 -65374848 
-83851320 -1539518400 -108987900 -3620574720 394101568 88564140 -3306044700) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (1418090625 301008960 -167227200 493214400 
-371557200 -390135060 184513536 -3409920 392747264 3637248 -134182440 25771200 
-225940680 -65374848 -83851320 -1539518400 -108987900 -3620574720 394101568 
88564140 -3306044700) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 850854375
Arg4: (p ((2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (-12428640 6904800 2399040 
-13131072 7295040 -2841328 -7781376 3587760 -1993200 -21247170 991296 5038320 
51290820 -11957400 88623045 23018464 -76669740 -67248720) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 67528125
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (95761000986328125 20326570677000000 
-11292539265000000 43880806374300000 -30965540334750000 -28386322778362500 
23632483182840000 -6437282203800000 28939042696410000 6866434350720000 
-12113749873575000 3436203755250000 2820897069243750 -5258089446120000 
-9949199033025000 -147601809549337500 2814257568937500 -319895927828071875 
7027579146420000 71215354025550000 -166032132132037500) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (95761000986328125 20326570677000000 
-11292539265000000 43880806374300000 -30965540334750000 -28386322778362500 
23632483182840000 -6437282203800000 28939042696410000 6866434350720000 
-12113749873575000 3436203755250000 2820897069243750 -5258089446120000 
-9949199033025000 -147601809549337500 2814257568937500 -319895927828071875 
7027579146420000 71215354025550000 -166032132132037500) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (95761000986328125 20326570677000000 
-11292539265000000 43880806374300000 -30965540334750000 -28386322778362500 
23632483182840000 -6437282203800000 28939042696410000 6866434350720000 
-12113749873575000 3436203755250000 2820897069243750 -5258089446120000 
-9949199033025000 -147601809549337500 2814257568937500 -319895927828071875 
7027579146420000 71215354025550000 -166032132132037500) 4)
poly_contentputin => 13505625
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0
 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0
 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0
 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0
 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (7090453125 1505044800 
-836136000 3249076320 -2292788400 -2101814820 1749825216 -476637120 2142739984 
508412928 -896941080 254427600 208868310 -389325888 -736670760 -10928913660 
208376700 -23686125435 520344608 5273014320 -12293554140) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (7090453125 1505044800 -836136000 3249076320 
-2292788400 -2101814820 1749825216 -476637120 2142739984 508412928 -896941080 
254427600 208868310 -389325888 -736670760 -10928913660 208376700 -23686125435 
520344608 5273014320 -12293554140) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (7090453125 1505044800 -836136000 3249076320 
-2292788400 -2101814820 1749825216 -476637120 2142739984 508412928 -896941080 
254427600 208868310 -389325888 -736670760 -10928913660 208376700 -23686125435 
520344608 5273014320 -12293554140) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0
 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0
 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0
 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0
 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (7090453125 1505044800 
-836136000 3249076320 -2292788400 -2101814820 1749825216 -476637120 2142739984 
508412928 -896941080 254427600 208868310 -389325888 -736670760 -10928913660 
208376700 -23686125435 520344608 5273014320 -12293554140) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1)) (14700 -181440 -340200 113400 -258720 -538020 -66150 67200 -33075 
-123480 -271950 -35280 25725 -330750 183750 -132300 257250 93312 -51840 -54432 
188352 -73920 -77616 78848 36288 -35280 -37044 28224 -6272 -108864 -155232 
-74088) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 25725
Arg4: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (5512500 
-71820000 -135174375 -58471875 -17955000 1382400 -768000 -806400 -787968 437760 
1278848 -466944 -328320 182400 -403200 -262656 255360 43208640 -14554800 
22579200 17322496 -6096720 -43092000) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 5512500
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (81033750000 
-1000188000000 -1875352500000 625117500000 -1426194000000 -2965835250000 
-364651875000 370440000000 -182325937500 -680683500000 -1499124375000 
-194481000000 -1823259375000 1847569500000 4490282671875 1504188984375 
-267411375000 1418090625000 514382400000 -285768000000 -335618640000 19756800000
 20744640000 1058560876800 -418745376000 -460756564800 446661734400 208483632000
 -199173240000 -193832730000 162341625600 -41143536000 -1711655064000 
374422230000 -580849920000 -1301337609600 -251571978000 1108541700000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (81033750000 -1000188000000 
-1875352500000 625117500000 -1426194000000 -2965835250000 -364651875000 
370440000000 -182325937500 -680683500000 -1499124375000 -194481000000 
-1823259375000 1847569500000 4490282671875 1504188984375 -267411375000 
1418090625000 514382400000 -285768000000 -335618640000 19756800000 20744640000 
1058560876800 -418745376000 -460756564800 446661734400 208483632000 
-199173240000 -193832730000 162341625600 -41143536000 -1711655064000 
374422230000 -580849920000 -1301337609600 -251571978000 1108541700000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1504188984375
Arg4: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (4134375 1874250 -55296 30720 32256 -32768 -23040 12800 -18432 17920 
1068480 -593600 -680400 602112 176960 -1250550) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4134375
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (335023910156250000 
-4135152262500000000 -7753410492187500000 2584470164062500000 
-5896420818750000000 -12261875111718750000 -1507607595703125000 
1531537875000000000 -753803797851562500 -2814200845312500000 
-6197942337890625000 -804057384375000000 -7538037978515625000 
7638545151562500000 18564512421533203125 -3924805107480468750 
5862918427734375000 2126649735000000000 -1181472075000000000 
-1387573314750000000 81682020000000000 85766121000000000 4459663259100000000 
-1777459099500000000 -1953459542475000000 1895956372800000000 896606030250000000
 -842710483125000000 -801377193093750000 698906369700000000 -197057873250000000 
-8683819751250000000 2440888488281250000 -1378001203031250000 
-6285907917450000000 -1306274179218750000 6464190625347656250) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 1 0 2) (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (335023910156250000 -4135152262500000000 
-7753410492187500000 2584470164062500000 -5896420818750000000 
-12261875111718750000 -1507607595703125000 1531537875000000000 
-753803797851562500 -2814200845312500000 -6197942337890625000 
-804057384375000000 -7538037978515625000 7638545151562500000 
18564512421533203125 -3924805107480468750 5862918427734375000 
2126649735000000000 -1181472075000000000 -1387573314750000000 81682020000000000 
85766121000000000 4459663259100000000 -1777459099500000000 -1953459542475000000 
1895956372800000000 896606030250000000 -842710483125000000 -801377193093750000 
698906369700000000 -197057873250000000 -8683819751250000000 2440888488281250000 
-1378001203031250000 -6285907917450000000 -1306274179218750000 
6464190625347656250) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3924805107480468750
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1929375
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (646386756657714843750000 -7978259396460937500000000 
-14959236368364257812500000 4986412122788085937500000 
-11376406917175781250000000 -23657755293672363281250000 
-2908740404959716796875000 2954910887578125000000000 -1454370202479858398437500 
-5429648755924804687500000 -11958154998167724609375000 
-1551328215978515625000000 -14543702024798583984375000 
14737618051795898437500000 35817906153295623779296875 11311768241510009765625000
 4103104832465625000000000 -2279502684703125000000000 -2677149264145781250000000
 157595247337500000000000 165475009704375000000000 8373772650851370000000000 
-3301279511389650000000000 -3634445084119132500000000 3521364812148960000000000 
2778283199923776562500000 -2208345616329398437500000 -2213766470707681640625000 
1949795416387665000000000 -206565156246782812500000 -18307154625291541406250000 
5572061389701843750000000 -1620177639659085937500000 -13177586263056390000000000
 -2647770414421141406250000 4812884980915060546875000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 0 1 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (646386756657714843750000 -7978259396460937500000000 
-14959236368364257812500000 4986412122788085937500000 
-11376406917175781250000000 -23657755293672363281250000 
-2908740404959716796875000 2954910887578125000000000 -1454370202479858398437500 
-5429648755924804687500000 -11958154998167724609375000 
-1551328215978515625000000 -14543702024798583984375000 
14737618051795898437500000 35817906153295623779296875 11311768241510009765625000
 4103104832465625000000000 -2279502684703125000000000 -2677149264145781250000000
 157595247337500000000000 165475009704375000000000 8373772650851370000000000 
-3301279511389650000000000 -3634445084119132500000000 3521364812148960000000000 
2778283199923776562500000 -2208345616329398437500000 -2213766470707681640625000 
1949795416387665000000000 -206565156246782812500000 -18307154625291541406250000 
5572061389701843750000000 -1620177639659085937500000 -13177586263056390000000000
 -2647770414421141406250000 4812884980915060546875000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 11311768241510009765625000
Arg4: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (67528125
 -12428640 6904800 2399040 -13131072 7295040 -2841328 -7781376 3587760 -1993200 
-21247170 991296 5038320 51290820 -11957400 88623045 23018464 -76669740 
-67248720) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 67528125
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
) (43649285701926750183105468750000 -538756897806638745117187500000000 
-1010169183387447647094726562500000 336723061129149215698242187500000 
-768227428353910803222656250000000 -1597563856690519056701660156250000 
-196421785658670375823974609375000 199539591780236572265625000000000 
-98210892829335187911987304687500 -366653999896184701538085937500000 
-807511785485644878387451171875000 -104758285684624200439453125000000 
-982108928293351879119873046875000 995203714003929904174804687500000 
2418716043958016044521331787109375 277074976014842783203125000000000 
-153930542230468212890625000000000 -40192974915733366699218750000000 
-67463385792365698242187500000000 -15963167342418925781250000000000 
714000809514853996734375000000000 -305449017297604390546875000000000 
-213286818111919141324218750000000 325812285117444683250000000000000 
147028345583692821547851562500000 -126578822363715907397460937500000 
90851563873207069903564453125000 120452717991517383937500000000000 
-70941265858241993012695312500000 -1816437694688021808610839843750000 
511530195602491608251953125000000 -1111890904070016175982666015625000 
-1150237222413496251398437500000000 688471358500497016604003906250000 
1085707033780053846917724609375000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (
43649285701926750183105468750000 -538756897806638745117187500000000 
-1010169183387447647094726562500000 336723061129149215698242187500000 
-768227428353910803222656250000000 -1597563856690519056701660156250000 
-196421785658670375823974609375000 199539591780236572265625000000000 
-98210892829335187911987304687500 -366653999896184701538085937500000 
-807511785485644878387451171875000 -104758285684624200439453125000000 
-982108928293351879119873046875000 995203714003929904174804687500000 
2418716043958016044521331787109375 277074976014842783203125000000000 
-153930542230468212890625000000000 -40192974915733366699218750000000 
-67463385792365698242187500000000 -15963167342418925781250000000000 
714000809514853996734375000000000 -305449017297604390546875000000000 
-213286818111919141324218750000000 325812285117444683250000000000000 
147028345583692821547851562500000 -126578822363715907397460937500000 
90851563873207069903564453125000 120452717991517383937500000000000 
-70941265858241993012695312500000 -1816437694688021808610839843750000 
511530195602491608251953125000000 -1111890904070016175982666015625000 
-1150237222413496251398437500000000 688471358500497016604003906250000 
1085707033780053846917724609375000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -15963167342418925781250000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0)) (20951657136924840087890625000000000 
-258603310947186597656250000000000000 -484881208025974870605468750000000000 
161627069341991623535156250000000000 -368749165609877185546875000000000000 
-766830651211449147216796875000000000 -94282457116161780395507812500000000 
95779004054513554687500000000000000 -47141228558080890197753906250000000 
-175993919950168656738281250000000000 -387605657033109541625976562500000000 
-50283977128619616210937500000000000 -471412285580808901977539062500000000 
477697782721886354003906250000000000 1160983701099847701370239257812500000 
132995988487124535937500000000000000 -73886660270624742187500000000000000 
-19292627959552016015625000000000000 -32382425180335535156250000000000000 
363408653442904846245000000000000000 -132823351719000155587500000000000000 
-37439507944760997757500000000000000 168649609375351182960000000000000000 
79193716245078774264843750000000000 -70718851156253045238281250000000000 
40974828047640270799804687500000000 64713392927853320227500000000000000 
-40756337895772105474218750000000000 -871890093450250468133203125000000000 
227001256604647599128906250000000000 -462591723443131450116210937500000000 
-530276253834049110202500000000000000 330466252080238567969921875000000000 
521139376214425846520507812500000000 -11493480486541626562500000000000000 
-55424117012878510312500000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0)) (20951657136924840087890625000000000 
-258603310947186597656250000000000000 -484881208025974870605468750000000000 
161627069341991623535156250000000000 -368749165609877185546875000000000000 
-766830651211449147216796875000000000 -94282457116161780395507812500000000 
95779004054513554687500000000000000 -47141228558080890197753906250000000 
-175993919950168656738281250000000000 -387605657033109541625976562500000000 
-50283977128619616210937500000000000 -471412285580808901977539062500000000 
477697782721886354003906250000000000 1160983701099847701370239257812500000 
132995988487124535937500000000000000 -73886660270624742187500000000000000 
-19292627959552016015625000000000000 -32382425180335535156250000000000000 
363408653442904846245000000000000000 -132823351719000155587500000000000000 
-37439507944760997757500000000000000 168649609375351182960000000000000000 
79193716245078774264843750000000000 -70718851156253045238281250000000000 
40974828047640270799804687500000000 64713392927853320227500000000000000 
-40756337895772105474218750000000000 -871890093450250468133203125000000000 
227001256604647599128906250000000000 -462591723443131450116210937500000000 
-530276253834049110202500000000000000 330466252080238567969921875000000000 
521139376214425846520507812500000000 -11493480486541626562500000000000000 
-55424117012878510312500000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -94282457116161780395507812500000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
) (41903314273849680175781250000000000 -517206621894373195312500000000000000 
-969762416051949741210937500000000000 323254138683983247070312500000000000 
-737498331219754371093750000000000000 -1533661302422898294433593750000000000 
191558008109027109375000000000000000 -94282457116161780395507812500000000 
-351987839900337313476562500000000000 -492363942717733742065429687500000000 
-100567954257239232421875000000000000 -942824571161617803955078125000000000 
1332525393908419829589843750000000000 2321967402199695402740478515625000000 
265991976974249071875000000000000000 -147773320541249484375000000000000000 
-38585255919104032031250000000000000 -64764850360671070312500000000000000 
726817306885809692490000000000000000 -265646703438000311175000000000000000 
-74879015889521995515000000000000000 337299218750702365920000000000000000 
158387432490157548529687500000000000 -141437702312506090476562500000000000 
81949656095280541599609375000000000 129426785855706640455000000000000000 
-81512675791544210948437500000000000 -1743780186900500936266406250000000000 
454002513209295198257812500000000000 -925183446886262900232421875000000000 
-1060552507668098220405000000000000000 660932504160477135939843750000000000 
1042278752428851693041015625000000000 -22986960973083253125000000000000000 
-110848234025757020625000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (
41903314273849680175781250000000000 -517206621894373195312500000000000000 
-969762416051949741210937500000000000 323254138683983247070312500000000000 
-737498331219754371093750000000000000 -1533661302422898294433593750000000000 
191558008109027109375000000000000000 -94282457116161780395507812500000000 
-351987839900337313476562500000000000 -492363942717733742065429687500000000 
-100567954257239232421875000000000000 -942824571161617803955078125000000000 
1332525393908419829589843750000000000 2321967402199695402740478515625000000 
265991976974249071875000000000000000 -147773320541249484375000000000000000 
-38585255919104032031250000000000000 -64764850360671070312500000000000000 
726817306885809692490000000000000000 -265646703438000311175000000000000000 
-74879015889521995515000000000000000 337299218750702365920000000000000000 
158387432490157548529687500000000000 -141437702312506090476562500000000000 
81949656095280541599609375000000000 129426785855706640455000000000000000 
-81512675791544210948437500000000000 -1743780186900500936266406250000000000 
454002513209295198257812500000000000 -925183446886262900232421875000000000 
-1060552507668098220405000000000000000 660932504160477135939843750000000000 
1042278752428851693041015625000000000 -22986960973083253125000000000000000 
-110848234025757020625000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 191558008109027109375000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (
16090872681158277187500000000000000000 -198607342807439307000000000000000000000 
-372388767763948700625000000000000000000 124129589254649566875000000000000000000
 -283199359188385678500000000000000000000 
-588925940130392945062500000000000000000 -36204463532606123671875000000000000000
 19998656046582430218750000000000000000 43675225848858180937500000000000000000 
-38618094434779865250000000000000000000 -362044635326061236718750000000000000000
 822013724397457131750000000000000000000 891635482444683034652343750000000000000
 102140919158111643600000000000000000000 -56744955087839802000000000000000000000
 -14816738272935948300000000000000000000 -24869702538497691000000000000000000000
 279097845844150921916160000000000000000 
-102008334120192119491200000000000000000 -28753542101576446277760000000000000000
 129522900000269708513280000000000000000 60820774076220498635400000000000000000 
-54312077688002338743000000000000000000 31468667940587727974250000000000000000 
49699885768591349934720000000000000000 -31300867503952977004200000000000000000 
-766156827856742022651300000000000000000 227973207342896946756000000000000000000
 -262173251663337778533000000000000000000 
-407252162944549716635520000000000000000 328888820776361847075900000000000000000
 586429424814653400440250000000000000000 -8826993013663969200000000000000000000 
-42565721865890695920000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (
16090872681158277187500000000000000000 -198607342807439307000000000000000000000 
-372388767763948700625000000000000000000 124129589254649566875000000000000000000
 -283199359188385678500000000000000000000 
-588925940130392945062500000000000000000 -36204463532606123671875000000000000000
 19998656046582430218750000000000000000 43675225848858180937500000000000000000 
-38618094434779865250000000000000000000 -362044635326061236718750000000000000000
 822013724397457131750000000000000000000 891635482444683034652343750000000000000
 102140919158111643600000000000000000000 -56744955087839802000000000000000000000
 -14816738272935948300000000000000000000 -24869702538497691000000000000000000000
 279097845844150921916160000000000000000 
-102008334120192119491200000000000000000 -28753542101576446277760000000000000000
 129522900000269708513280000000000000000 60820774076220498635400000000000000000 
-54312077688002338743000000000000000000 31468667940587727974250000000000000000 
49699885768591349934720000000000000000 -31300867503952977004200000000000000000 
-766156827856742022651300000000000000000 227973207342896946756000000000000000000
 -262173251663337778533000000000000000000 
-407252162944549716635520000000000000000 328888820776361847075900000000000000000
 586429424814653400440250000000000000000 -8826993013663969200000000000000000000 
-42565721865890695920000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 31468667940587727974250000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
25343124472824286570312500000000000000000 
-312806564921716908525000000000000000000000 
-586512309228219203484375000000000000000000 
195504103076073067828125000000000000000000 
-446038990721707443637500000000000000000000 
-927558355705368888473437500000000000000000 
-57022030063854644783203125000000000000000 
31497883273367327594531250000000000000000 
68788480711951634976562500000000000000000 
-60823498734778287768750000000000000000000 
-570220300638546447832031250000000000000000 
1294671615925994982506250000000000000000000 
1404325884850375779577441406250000000000000 
160871947674025838670000000000000000000000 
-89373304263347688150000000000000000000000 
-23336362779874118572500000000000000000000 
-39169781498133863325000000000000000000000 
439579107204537702017952000000000000000000 
-160663126239302588198640000000000000000000 
-45286828809982902887472000000000000000000 
203998567500424790908416000000000000000000 
95792719170047285350755000000000000000000 
-85541522358603683520225000000000000000000 
65060479550484530397999000000000000000000 
-49298866318725938781615000000000000000000 
-1206697003874368685675797500000000000000000 
52867362140187382996740000000000000000000 
359057801565062691140700000000000000000000 
-412922871369757001189475000000000000000000 
-641422156637665803700944000000000000000000 
517999892722769909144542500000000000000000 
923626344083079105693393750000000000000000 
-27188929100667796969752000000000000000000 
1202446614961357937640000000000000000000 
-51180803296721631174978000000000000000000 
-16111957985580916722816000000000000000000 
7930104321028107449511000000000000000000 
31720417284112429798044000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
25343124472824286570312500000000000000000 
-312806564921716908525000000000000000000000 
-586512309228219203484375000000000000000000 
195504103076073067828125000000000000000000 
-446038990721707443637500000000000000000000 
-927558355705368888473437500000000000000000 
-57022030063854644783203125000000000000000 
31497883273367327594531250000000000000000 
68788480711951634976562500000000000000000 
-60823498734778287768750000000000000000000 
-570220300638546447832031250000000000000000 
1294671615925994982506250000000000000000000 
1404325884850375779577441406250000000000000 
160871947674025838670000000000000000000000 
-89373304263347688150000000000000000000000 
-23336362779874118572500000000000000000000 
-39169781498133863325000000000000000000000 
439579107204537702017952000000000000000000 
-160663126239302588198640000000000000000000 
-45286828809982902887472000000000000000000 
203998567500424790908416000000000000000000 
95792719170047285350755000000000000000000 
-85541522358603683520225000000000000000000 
65060479550484530397999000000000000000000 
-49298866318725938781615000000000000000000 
-1206697003874368685675797500000000000000000 
52867362140187382996740000000000000000000 
359057801565062691140700000000000000000000 
-412922871369757001189475000000000000000000 
-641422156637665803700944000000000000000000 
517999892722769909144542500000000000000000 
923626344083079105693393750000000000000000 
-27188929100667796969752000000000000000000 
1202446614961357937640000000000000000000 
-51180803296721631174978000000000000000000 
-16111957985580916722816000000000000000000 
7930104321028107449511000000000000000000 
31720417284112429798044000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -60823498734778287768750000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
5322056139293100179765625000000000000000000 
-65689378633560550790250000000000000000000000 
-123167584937926032731718750000000000000000000 
41055861645975344243906250000000000000000000 
-93668188051558563163875000000000000000000000 
-194787254698127466579421875000000000000000000 
-11974626313409475404472656250000000000000000 
6614555487407138794851562500000000000000000 
14445580949509843345078125000000000000000000 
-119746263134094754044726562500000000000000000 
220789300407245184600562500000000000000000000 
199111425311303110475481445312500000000000000 
33783109011545426120700000000000000000000000 
-18768393895303014511500000000000000000000000 
-4900636183773564900225000000000000000000000 
-8225654114608111298250000000000000000000000 
92311612512952917423769920000000000000000000 
-33739256510253543521714400000000000000000000 
-9510234050096409606369120000000000000000000 
42839699175089206090767360000000000000000000 
20116471025709929923658550000000000000000000 
-17963719695306773539247250000000000000000000 
13662700705601751383579790000000000000000000 
-10352761926932447144139150000000000000000000 
-227130619360193203675817475000000000000000000 
11102146049439350429315400000000000000000000 
60804498632316376075047000000000000000000000 
-102041324668813098767514750000000000000000000 
-119127837217806577108398240000000000000000000 
101116216631199616661491425000000000000000000 
163306488895118355160162687500000000000000000 
-5709675111140237363647920000000000000000000 
252513789141885166904400000000000000000000 
-10747968692311542546745380000000000000000000 
-3383511176971992511791360000000000000000000 
1665321907415902564397310000000000000000000 
6661287629663610257589240000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 1 0 0 0 0 1) (3 0 1 0 1 0 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (5322056139293100179765625000000000000000000
 -65689378633560550790250000000000000000000000 
-123167584937926032731718750000000000000000000 
41055861645975344243906250000000000000000000 
-93668188051558563163875000000000000000000000 
-194787254698127466579421875000000000000000000 
-11974626313409475404472656250000000000000000 
6614555487407138794851562500000000000000000 
14445580949509843345078125000000000000000000 
-119746263134094754044726562500000000000000000 
220789300407245184600562500000000000000000000 
199111425311303110475481445312500000000000000 
33783109011545426120700000000000000000000000 
-18768393895303014511500000000000000000000000 
-4900636183773564900225000000000000000000000 
-8225654114608111298250000000000000000000000 
92311612512952917423769920000000000000000000 
-33739256510253543521714400000000000000000000 
-9510234050096409606369120000000000000000000 
42839699175089206090767360000000000000000000 
20116471025709929923658550000000000000000000 
-17963719695306773539247250000000000000000000 
13662700705601751383579790000000000000000000 
-10352761926932447144139150000000000000000000 
-227130619360193203675817475000000000000000000 
11102146049439350429315400000000000000000000 
60804498632316376075047000000000000000000000 
-102041324668813098767514750000000000000000000 
-119127837217806577108398240000000000000000000 
101116216631199616661491425000000000000000000 
163306488895118355160162687500000000000000000 
-5709675111140237363647920000000000000000000 
252513789141885166904400000000000000000000 
-10747968692311542546745380000000000000000000 
-3383511176971992511791360000000000000000000 
1665321907415902564397310000000000000000000 
6661287629663610257589240000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -65689378633560550790250000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (2 0 0 1 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 1 0 0 0 1) (3 0 0 1 0 1 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
21288224557172400719062500000000000000000000 
-492670339751704130926875000000000000000000000 
591204407702044957112250000000000000000000000 
164223446583901376975625000000000000000000000 
-374672752206234252655500000000000000000000000 
-779149018792509866317687500000000000000000000 
-47898505253637901617890625000000000000000000 
26458221949628555179406250000000000000000000 
57782323798039373380312500000000000000000000 
-478985052536379016178906250000000000000000000 
883157201628980738402250000000000000000000000 
796445701245212441901925781250000000000000000 
135132436046181704482800000000000000000000000 
-75073575581212058046000000000000000000000000 
-19602544735094259600900000000000000000000000 
-32902616458432445193000000000000000000000000 
369246450051811669695079680000000000000000000 
-134957026041014174086857600000000000000000000 
-38040936200385638425476480000000000000000000 
171358796700356824363069440000000000000000000 
80465884102839719694634200000000000000000000 
-71854878781227094156989000000000000000000000 
54650802822407005534319160000000000000000000 
-41411047707729788576556600000000000000000000 
-908522477440772814703269900000000000000000000 
44408584197757401717261600000000000000000000 
243217994529265504300188000000000000000000000 
-408165298675252395070059000000000000000000000 
-476511348871226308433592960000000000000000000 
404464866524798466645965700000000000000000000 
653225955580473420640650750000000000000000000 
-22838700444560949454591680000000000000000000 
1010055156567540667617600000000000000000000 
-42991874769246170186981520000000000000000000 
-13534044707887970047165440000000000000000000 
6661287629663610257589240000000000000000000 
26645150518654441030356960000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 1 0 0 0 1) (3 0 0 1 0 1 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
21288224557172400719062500000000000000000000 
-492670339751704130926875000000000000000000000 
591204407702044957112250000000000000000000000 
164223446583901376975625000000000000000000000 
-374672752206234252655500000000000000000000000 
-779149018792509866317687500000000000000000000 
-47898505253637901617890625000000000000000000 
26458221949628555179406250000000000000000000 
57782323798039373380312500000000000000000000 
-478985052536379016178906250000000000000000000 
883157201628980738402250000000000000000000000 
796445701245212441901925781250000000000000000 
135132436046181704482800000000000000000000000 
-75073575581212058046000000000000000000000000 
-19602544735094259600900000000000000000000000 
-32902616458432445193000000000000000000000000 
369246450051811669695079680000000000000000000 
-134957026041014174086857600000000000000000000 
-38040936200385638425476480000000000000000000 
171358796700356824363069440000000000000000000 
80465884102839719694634200000000000000000000 
-71854878781227094156989000000000000000000000 
54650802822407005534319160000000000000000000 
-41411047707729788576556600000000000000000000 
-908522477440772814703269900000000000000000000 
44408584197757401717261600000000000000000000 
243217994529265504300188000000000000000000000 
-408165298675252395070059000000000000000000000 
-476511348871226308433592960000000000000000000 
404464866524798466645965700000000000000000000 
653225955580473420640650750000000000000000000 
-22838700444560949454591680000000000000000000 
1010055156567540667617600000000000000000000 
-42991874769246170186981520000000000000000000 
-13534044707887970047165440000000000000000000 
6661287629663610257589240000000000000000000 
26645150518654441030356960000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 591204407702044957112250000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 1 0 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1532752168116412851772500000000000000000000000 
-35472264462122697426735000000000000000000000000 
-49661170246971776397429000000000000000000000000 
-62076462808714720496786250000000000000000000000 
11824088154040899142245000000000000000000000000 
-26976438158848866191196000000000000000000000000 
-56098729353060710374873500000000000000000000000 
-3448692378261928916488125000000000000000000000 
1904991980373255972917250000000000000000000000 
4160327313458834883382500000000000000000000000 
-34486923782619289164881250000000000000000000000 
63587318517286613164962000000000000000000000000 
57344090489655295816938656250000000000000000000 
9729535395325082722761600000000000000000000000 
-5405297441847268179312000000000000000000000000 
-1411383220926786691264800000000000000000000000 
-2368988385007136053896000000000000000000000000 
26585744403730440218045736960000000000000000000 
-9716905874953020534253747200000000000000000000 
-2738947406427765966634306560000000000000000000 
12337833362425691354140999680000000000000000000 
5793543655404459818013662400000000000000000000 
-5173551272248350779303208000000000000000000000 
3934857803213304398470979520000000000000000000 
-2981595434956544777512075200000000000000000000 
-65413618375735642658635432800000000000000000000 
3197418062238532923642835200000000000000000000 
17511695606107116309613536000000000000000000000 
-67224983597549049700228248000000000000000000000 
-34308817118728294207218693120000000000000000000 
29121470389785489598509530400000000000000000000 
47032268801794086286126854000000000000000000000 
-1644386432008388360730600960000000000000000000 
72723971272862928068467200000000000000000000 
-3095414983385724253462669440000000000000000000 
-974451218967933843395911680000000000000000000 
479612709335779938546425280000000000000000000 
1918450837343119754185701120000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 1 0 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1532752168116412851772500000000000000000000000 
-35472264462122697426735000000000000000000000000 
-49661170246971776397429000000000000000000000000 
-62076462808714720496786250000000000000000000000 
11824088154040899142245000000000000000000000000 
-26976438158848866191196000000000000000000000000 
-56098729353060710374873500000000000000000000000 
-3448692378261928916488125000000000000000000000 
1904991980373255972917250000000000000000000000 
4160327313458834883382500000000000000000000000 
-34486923782619289164881250000000000000000000000 
63587318517286613164962000000000000000000000000 
57344090489655295816938656250000000000000000000 
9729535395325082722761600000000000000000000000 
-5405297441847268179312000000000000000000000000 
-1411383220926786691264800000000000000000000000 
-2368988385007136053896000000000000000000000000 
26585744403730440218045736960000000000000000000 
-9716905874953020534253747200000000000000000000 
-2738947406427765966634306560000000000000000000 
12337833362425691354140999680000000000000000000 
5793543655404459818013662400000000000000000000 
-5173551272248350779303208000000000000000000000 
3934857803213304398470979520000000000000000000 
-2981595434956544777512075200000000000000000000 
-65413618375735642658635432800000000000000000000 
3197418062238532923642835200000000000000000000 
17511695606107116309613536000000000000000000000 
-67224983597549049700228248000000000000000000000 
-34308817118728294207218693120000000000000000000 
29121470389785489598509530400000000000000000000 
47032268801794086286126854000000000000000000000 
-1644386432008388360730600960000000000000000000 
72723971272862928068467200000000000000000000 
-3095414983385724253462669440000000000000000000 
-974451218967933843395911680000000000000000000 
479612709335779938546425280000000000000000000 
1918450837343119754185701120000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -35472264462122697426735000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (2 0 1 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
18393026017396954221270000000000000000000000000 
532083966931840461401025000000000000000000000000 
-595934042963661316769148000000000000000000000000 
-744917553704576645961435000000000000000000000000 
780389818166699343388170000000000000000000000000 
-323717257906186394294352000000000000000000000000 
-673184752236728524498482000000000000000000000000 
-41384308539143146997857500000000000000000000000 
22859903764479071675007000000000000000000000000 
49923927761506018600590000000000000000000000000 
-413843085391431469978575000000000000000000000000 
763047822207439357979544000000000000000000000000 
688129085875863549803263875000000000000000000000 
116754424743900992673139200000000000000000000000 
-64863569302167218151744000000000000000000000000 
-16936598651121440295177600000000000000000000000 
-28427860620085632646752000000000000000000000000 
319028932844765282616548843520000000000000000000 
-116602870499436246411044966400000000000000000000 
-32867368877133191599611678720000000000000000000 
148054000349108296249691996160000000000000000000 
69522523864853517816163948800000000000000000000 
-62082615266980209351638496000000000000000000000 
47218293638559652781651754240000000000000000000 
-35779145219478537330144902400000000000000000000 
-1281575122978545475877915193600000000000000000000 
38369016746862395083714022400000000000000000000 
210140347273285395715362432000000000000000000000 
-806699803170588596402738976000000000000000000000 
-411705805424739530486624317440000000000000000000 
349457644677425875182114364800000000000000000000 
564387225621529035433522248000000000000000000000 
-19732637184100660328767211520000000000000000000 
872687655274355136821606400000000000000000000 
-37144979800628691041552033280000000000000000000 
-11693414627615206120750940160000000000000000000 
5755352512029359262557103360000000000000000000 
23021410048117437050228413440000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0
 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
18393026017396954221270000000000000000000000000 
532083966931840461401025000000000000000000000000 
-595934042963661316769148000000000000000000000000 
-744917553704576645961435000000000000000000000000 
780389818166699343388170000000000000000000000000 
-323717257906186394294352000000000000000000000000 
-673184752236728524498482000000000000000000000000 
-41384308539143146997857500000000000000000000000 
22859903764479071675007000000000000000000000000 
49923927761506018600590000000000000000000000000 
-413843085391431469978575000000000000000000000000 
763047822207439357979544000000000000000000000000 
688129085875863549803263875000000000000000000000 
116754424743900992673139200000000000000000000000 
-64863569302167218151744000000000000000000000000 
-16936598651121440295177600000000000000000000000 
-28427860620085632646752000000000000000000000000 
319028932844765282616548843520000000000000000000 
-116602870499436246411044966400000000000000000000 
-32867368877133191599611678720000000000000000000 
148054000349108296249691996160000000000000000000 
69522523864853517816163948800000000000000000000 
-62082615266980209351638496000000000000000000000 
47218293638559652781651754240000000000000000000 
-35779145219478537330144902400000000000000000000 
-1281575122978545475877915193600000000000000000000 
38369016746862395083714022400000000000000000000 
210140347273285395715362432000000000000000000000 
-806699803170588596402738976000000000000000000000 
-411705805424739530486624317440000000000000000000 
349457644677425875182114364800000000000000000000 
564387225621529035433522248000000000000000000000 
-19732637184100660328767211520000000000000000000 
872687655274355136821606400000000000000000000 
-37144979800628691041552033280000000000000000000 
-11693414627615206120750940160000000000000000000 
5755352512029359262557103360000000000000000000 
23021410048117437050228413440000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -744917553704576645961435000000000000000000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (8828652488350538026209600000000000000000000000000 
255400304127283421472492000000000000000000000000000 
-286048340622557432049191040000000000000000000000000 
1340000262321147017992341360000000000000000000000000 
-155384283794969469261288960000000000000000000000000 
320480085327124530351408480000000000000000000000000 
3030324608470217795771117580000000000000000000000000 
572096681245114864098382080000000000000000000000000 
382391010901682678260203300000000000000000000000000 
10972753806949954404003360000000000000000000000000 
-440865068186132938151652240000000000000000000000000 
-122911396361255146583636775000000000000000000000000 
321804383200377111055339920000000000000000000000000 
-312865372555922191303802700000000000000000000000000 
-198644680987887105589716000000000000000000000000000 
366262954659570891830181120000000000000000000000000 
-534547318630598982055659375000000000000000000000000 
3318607701753888957758192925000000000000000000000000 
1019047213467860851675243080000000000000000000000000 
56042123877072476483106816000000000000000000000000 
-31134513265040264712837120000000000000000000000000 
-8129567352538291341685248000000000000000000000000 
-13645373097641103670440960000000000000000000000000 
153133887765487335655943444889600000000000000000000 
-55969377839729398277301583872000000000000000000000 
-15776337061023931967813605785600000000000000000000 
71065920167571982199852158156800000000000000000000 
33370811455129688551758695424000000000000000000000 
-29799655328150500488786478080000000000000000000000 
22664780946508633335192842035200000000000000000000 
-17173989705349697918469553152000000000000000000000 
-615156059029701828421399292928000000000000000000000 
18417128038493949640182730752000000000000000000000 
-435473271976118195148859232640000000000000000000000 
-2973569651984172641051417028480000000000000000000000 
-197618786603874974633579672371200000000000000000000 
167739669445164420087414895104000000000000000000000 
270905868298333937008090679040000000000000000000000 
-9471665848368316957808261529600000000000000000000 
418890074531690465674371072000000000000000000000 
-17829590304301771699944975974400000000000000000000 
-5612839021255298937960451276800000000000000000000 
2762569205774092446027409612800000000000000000000 
11050276823096369784109638451200000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (8828652488350538026209600000000000000000000000000 
255400304127283421472492000000000000000000000000000 
-286048340622557432049191040000000000000000000000000 
1340000262321147017992341360000000000000000000000000 
-155384283794969469261288960000000000000000000000000 
320480085327124530351408480000000000000000000000000 
3030324608470217795771117580000000000000000000000000 
572096681245114864098382080000000000000000000000000 
382391010901682678260203300000000000000000000000000 
10972753806949954404003360000000000000000000000000 
-440865068186132938151652240000000000000000000000000 
-122911396361255146583636775000000000000000000000000 
321804383200377111055339920000000000000000000000000 
-312865372555922191303802700000000000000000000000000 
-198644680987887105589716000000000000000000000000000 
366262954659570891830181120000000000000000000000000 
-534547318630598982055659375000000000000000000000000 
3318607701753888957758192925000000000000000000000000 
1019047213467860851675243080000000000000000000000000 
56042123877072476483106816000000000000000000000000 
-31134513265040264712837120000000000000000000000000 
-8129567352538291341685248000000000000000000000000 
-13645373097641103670440960000000000000000000000000 
153133887765487335655943444889600000000000000000000 
-55969377839729398277301583872000000000000000000000 
-15776337061023931967813605785600000000000000000000 
71065920167571982199852158156800000000000000000000 
33370811455129688551758695424000000000000000000000 
-29799655328150500488786478080000000000000000000000 
22664780946508633335192842035200000000000000000000 
-17173989705349697918469553152000000000000000000000 
-615156059029701828421399292928000000000000000000000 
18417128038493949640182730752000000000000000000000 
-435473271976118195148859232640000000000000000000000 
-2973569651984172641051417028480000000000000000000000 
-197618786603874974633579672371200000000000000000000 
167739669445164420087414895104000000000000000000000 
270905868298333937008090679040000000000000000000000 
-9471665848368316957808261529600000000000000000000 
418890074531690465674371072000000000000000000000 
-17829590304301771699944975974400000000000000000000 
-5612839021255298937960451276800000000000000000000 
2762569205774092446027409612800000000000000000000 
11050276823096369784109638451200000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3030324608470217795771117580000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (17657304976701076052419200000000000000000000000000 
510800608254566842944984000000000000000000000000000 
-572096681245114864098382080000000000000000000000000 
2680000524642294035984682720000000000000000000000000 
-310768567589938938522577920000000000000000000000000 
640960170654249060702816960000000000000000000000000 
1144193362490229728196764160000000000000000000000000 
764782021803365356520406600000000000000000000000000 
21945507613899908808006720000000000000000000000000 
-9972703961782919263616657220000000000000000000000000 
-245822792722510293167273550000000000000000000000000 
643608766400754222110679840000000000000000000000000 
-625730745111844382607605400000000000000000000000000 
-397289361975774211179432000000000000000000000000000 
-11388772524561729399424108080000000000000000000000000 
-1069094637261197964111318750000000000000000000000000 
6637215403507777915516385850000000000000000000000000 
2038094426935721703350486160000000000000000000000000 
112084247754144952966213632000000000000000000000000 
-62269026530080529425674240000000000000000000000000 
-16259134705076582683370496000000000000000000000000 
-27290746195282207340881920000000000000000000000000 
306267775530974671311886889779200000000000000000000 
-111938755679458796554603167744000000000000000000000 
-31552674122047863935627211571200000000000000000000 
142131840335143964399704316313600000000000000000000 
66741622910259377103517390848000000000000000000000 
-59599310656301000977572956160000000000000000000000 
45329561893017266670385684070400000000000000000000 
-34347979410699395836939106304000000000000000000000 
-1230312118059403656842798585856000000000000000000000 
36834256076987899280365461504000000000000000000000 
-870946543952236390297718465280000000000000000000000 
-5947139303968345282102834056960000000000000000000000 
-395237573207749949267159344742400000000000000000000 
335479338890328840174829790208000000000000000000000 
541811736596667874016181358080000000000000000000000 
-18943331696736633915616523059200000000000000000000 
837780149063380931348742144000000000000000000000 
-35659180608603543399889951948800000000000000000000 
-11225678042510597875920902553600000000000000000000 
5525138411548184892054819225600000000000000000000 
22100553646192739568219276902400000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
17657304976701076052419200000000000000000000000000 
510800608254566842944984000000000000000000000000000 
-572096681245114864098382080000000000000000000000000 
2680000524642294035984682720000000000000000000000000 
-310768567589938938522577920000000000000000000000000 
640960170654249060702816960000000000000000000000000 
1144193362490229728196764160000000000000000000000000 
764782021803365356520406600000000000000000000000000 
21945507613899908808006720000000000000000000000000 
-9972703961782919263616657220000000000000000000000000 
-245822792722510293167273550000000000000000000000000 
643608766400754222110679840000000000000000000000000 
-625730745111844382607605400000000000000000000000000 
-397289361975774211179432000000000000000000000000000 
-11388772524561729399424108080000000000000000000000000 
-1069094637261197964111318750000000000000000000000000 
6637215403507777915516385850000000000000000000000000 
2038094426935721703350486160000000000000000000000000 
112084247754144952966213632000000000000000000000000 
-62269026530080529425674240000000000000000000000000 
-16259134705076582683370496000000000000000000000000 
-27290746195282207340881920000000000000000000000000 
306267775530974671311886889779200000000000000000000 
-111938755679458796554603167744000000000000000000000 
-31552674122047863935627211571200000000000000000000 
142131840335143964399704316313600000000000000000000 
66741622910259377103517390848000000000000000000000 
-59599310656301000977572956160000000000000000000000 
45329561893017266670385684070400000000000000000000 
-34347979410699395836939106304000000000000000000000 
-1230312118059403656842798585856000000000000000000000 
36834256076987899280365461504000000000000000000000 
-870946543952236390297718465280000000000000000000000 
-5947139303968345282102834056960000000000000000000000 
-395237573207749949267159344742400000000000000000000 
335479338890328840174829790208000000000000000000000 
541811736596667874016181358080000000000000000000000 
-18943331696736633915616523059200000000000000000000 
837780149063380931348742144000000000000000000000 
-35659180608603543399889951948800000000000000000000 
-11225678042510597875920902553600000000000000000000 
5525138411548184892054819225600000000000000000000 
22100553646192739568219276902400000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1144193362490229728196764160000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
6780405111053213204128972800000000000000000000000000 
196147433569753667690873856000000000000000000000000000 
-219685125598124107813778718720000000000000000000000000 
1029120201462640909818118164480000000000000000000000000 
-119335129954536552392669921280000000000000000000000000 
246128705531231639309881712640000000000000000000000000 
293676296372492296903836134400000000000000000000000000 
935223698540823644821653550080000000000000000000000000 
-2439323385899011877469727918080000000000000000000000000 
-94395952405443952576233043200000000000000000000000000 
247145766297889621290501058560000000000000000000000000 
-240280606122948242921320473600000000000000000000000000 
-152559114998697297092901888000000000000000000000000000 
-2519695402197531929700099563520000000000000000000000000 
-410532340708300018218746400000000000000000000000000000 
2548690714946986719558292166400000000000000000000000000 
782628259943317134086586685440000000000000000000000000 
43040351137591661939026034688000000000000000000000000 
-23911306187550923299458908160000000000000000000000000 
-6243507726749407750414270464000000000000000000000000 
-10479646538988367618898657280000000000000000000000000 
117606825803894273783764565675212800000000000000000000 
-42984482180912177876967616413696000000000000000000000 
-12116226862866379751280849243340800000000000000000000 
54578626688695282329486457464422400000000000000000000 
25628783197539600807750678085632000000000000000000000 
-22886135292019584375388015165440000000000000000000000 
17406551766918630401428102683033600000000000000000000 
-13189624093708568001384616820736000000000000000000000 
-1049113308029886787238803793608704000000000000000000000 
14144354333563353323660337217536000000000000000000000 
-14069331380394449979229925867520000000000000000000000 
-1727623518553592940423860896112640000000000000000000000 
-151771228111775980518589188381081600000000000000000000 
577347864230056328080266190159872000000000000000000000 
1320211655193623759429468405022720000000000000000000000 
-7274239371546867423596744854732800000000000000000000 
321707577240338277637916983296000000000000000000000 
-13693125353703760665557741548339200000000000000000000 
-4310660368324069584353626580582400000000000000000000 
2121653150034502998549050582630400000000000000000000 
8486612600138011994196202330521600000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
6780405111053213204128972800000000000000000000000000 
196147433569753667690873856000000000000000000000000000 
-219685125598124107813778718720000000000000000000000000 
1029120201462640909818118164480000000000000000000000000 
-119335129954536552392669921280000000000000000000000000 
246128705531231639309881712640000000000000000000000000 
293676296372492296903836134400000000000000000000000000 
935223698540823644821653550080000000000000000000000000 
-2439323385899011877469727918080000000000000000000000000 
-94395952405443952576233043200000000000000000000000000 
247145766297889621290501058560000000000000000000000000 
-240280606122948242921320473600000000000000000000000000 
-152559114998697297092901888000000000000000000000000000 
-2519695402197531929700099563520000000000000000000000000 
-410532340708300018218746400000000000000000000000000000 
2548690714946986719558292166400000000000000000000000000 
782628259943317134086586685440000000000000000000000000 
43040351137591661939026034688000000000000000000000000 
-23911306187550923299458908160000000000000000000000000 
-6243507726749407750414270464000000000000000000000000 
-10479646538988367618898657280000000000000000000000000 
117606825803894273783764565675212800000000000000000000 
-42984482180912177876967616413696000000000000000000000 
-12116226862866379751280849243340800000000000000000000 
54578626688695282329486457464422400000000000000000000 
25628783197539600807750678085632000000000000000000000 
-22886135292019584375388015165440000000000000000000000 
17406551766918630401428102683033600000000000000000000 
-13189624093708568001384616820736000000000000000000000 
-1049113308029886787238803793608704000000000000000000000 
14144354333563353323660337217536000000000000000000000 
-14069331380394449979229925867520000000000000000000000 
-1727623518553592940423860896112640000000000000000000000 
-151771228111775980518589188381081600000000000000000000 
577347864230056328080266190159872000000000000000000000 
1320211655193623759429468405022720000000000000000000000 
-7274239371546867423596744854732800000000000000000000 
321707577240338277637916983296000000000000000000000 
-13693125353703760665557741548339200000000000000000000 
-4310660368324069584353626580582400000000000000000000 
2121653150034502998549050582630400000000000000000000 
8486612600138011994196202330521600000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -94395952405443952576233043200000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
10679138049908810796503132160000000000000000000000000000 
308932207872362026613126323200000000000000000000000000000 
-346004072817045469806701481984000000000000000000000000000 
1620864317303659432963536109056000000000000000000000000000 
-187952829678395070018455126016000000000000000000000000000 
387652711211689831913063697408000000000000000000000000000 
462540166786675367623541911680000000000000000000000000000 
1472977325201797240594104341376000000000000000000000000000 
-3841934332790943707014821470976000000000000000000000000000 
428900881929462613614557045376000000000000000000000000000 
-378441954643643482601079745920000000000000000000000000000 
-240280606122948242921320473600000000000000000000000000000 
-4127105458502258629605728325120000000000000000000000000000 
-646588436615572528694525580000000000000000000000000000000 
4014187876041504083304310162080000000000000000000000000000 
1232639509410724486186374029568000000000000000000000000000 
67788553041706867553966004633600000000000000000000000000 
-37660307245392704196647780352000000000000000000000000000 
-9833524669630317206902475980800000000000000000000000000 
-16505443298906678999765385216000000000000000000000000000 
185230750641133481209429190938460160000000000000000000000 
-67700559434936680156223995851571200000000000000000000000 
-19083057309014548108267337558261760000000000000000000000 
85961337034695069668941170506465280000000000000000000000 
40365333536124871272207317984870400000000000000000000000 
-36045663084930845391236123885568000000000000000000000000 
27415319032896842882249261725777920000000000000000000000 
-20773657947590994602180771492659200000000000000000000000 
-1570795357268768114875250625608908800000000000000000000000 
22277358075362281484765031117619200000000000000000000000 
-67469254078734355953878993977344000000000000000000000000 
-2768582601734252633266002365150208000000000000000000000000 
-190708956644459865597746653581803520000000000000000000000 
885535106156166840677208522615398400000000000000000000000 
1984182236905269916904569830365184000000000000000000000000 
-11456927010186316192164873146204160000000000000000000000 
506689434153532787279719248691200000000000000000000000 
-21566672432083423048253442938634240000000000000000000000 
-6789290080110409595356961864417280000000000000000000000 
3341603711304342222714754667642880000000000000000000000 
13366414845217368890859018670571520000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
10679138049908810796503132160000000000000000000000000000 
308932207872362026613126323200000000000000000000000000000 
-346004072817045469806701481984000000000000000000000000000 
1620864317303659432963536109056000000000000000000000000000 
-187952829678395070018455126016000000000000000000000000000 
387652711211689831913063697408000000000000000000000000000 
462540166786675367623541911680000000000000000000000000000 
1472977325201797240594104341376000000000000000000000000000 
-3841934332790943707014821470976000000000000000000000000000 
428900881929462613614557045376000000000000000000000000000 
-378441954643643482601079745920000000000000000000000000000 
-240280606122948242921320473600000000000000000000000000000 
-4127105458502258629605728325120000000000000000000000000000 
-646588436615572528694525580000000000000000000000000000000 
4014187876041504083304310162080000000000000000000000000000 
1232639509410724486186374029568000000000000000000000000000 
67788553041706867553966004633600000000000000000000000000 
-37660307245392704196647780352000000000000000000000000000 
-9833524669630317206902475980800000000000000000000000000 
-16505443298906678999765385216000000000000000000000000000 
185230750641133481209429190938460160000000000000000000000 
-67700559434936680156223995851571200000000000000000000000 
-19083057309014548108267337558261760000000000000000000000 
85961337034695069668941170506465280000000000000000000000 
40365333536124871272207317984870400000000000000000000000 
-36045663084930845391236123885568000000000000000000000000 
27415319032896842882249261725777920000000000000000000000 
-20773657947590994602180771492659200000000000000000000000 
-1570795357268768114875250625608908800000000000000000000000 
22277358075362281484765031117619200000000000000000000000 
-67469254078734355953878993977344000000000000000000000000 
-2768582601734252633266002365150208000000000000000000000000 
-190708956644459865597746653581803520000000000000000000000 
885535106156166840677208522615398400000000000000000000000 
1984182236905269916904569830365184000000000000000000000000 
-11456927010186316192164873146204160000000000000000000000 
506689434153532787279719248691200000000000000000000000 
-21566672432083423048253442938634240000000000000000000000 
-6789290080110409595356961864417280000000000000000000000 
3341603711304342222714754667642880000000000000000000000 
13366414845217368890859018670571520000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 428900881929462613614557045376000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
2242618990480850267265657753600000000000000000000000000000 
64875763653196025588756527872000000000000000000000000000000 
-72660855291579548659407311216640000000000000000000000000000 
340381506633768480922342582901760000000000000000000000000000 
-39470094232462964703875576463360000000000000000000000000000 
81407069354454864701743376455680000000000000000000000000000 
97133435025201827200943801452800000000000000000000000000000 
309325238292377420524761911688960000000000000000000000000000 
-806806209886098178473112508904960000000000000000000000000000 
-79472810475165131346226746643200000000000000000000000000000 
-50458927285819131013477299456000000000000000000000000000000 
-506415405464725716780975030159360000000000000000000000000000 
539735317349633385417076974667200000000000000000000000000000 
842979453968715857493905134036800000000000000000000000000000 
258854296976252142099138546209280000000000000000000000000000 
14235596138758442186332860973056000000000000000000000000000 
-7908664521532467881296033873920000000000000000000000000000 
-2065040180622366613449519955968000000000000000000000000000 
-3466143092770402589950730895360000000000000000000000000000 
38898457634638031053980130097076633600000000000000000000000 
-14217117481336702832807039128829952000000000000000000000000 
-4007442034893055102736140887234969600000000000000000000000 
18051880777285964630477645806357708800000000000000000000000 
8476720042586222967163536776822784000000000000000000000000 
-7569589247835477532159586015969280000000000000000000000000 
5757216996908337005272344962413363200000000000000000000000 
-4362468168994108866457962013458432000000000000000000000000 
-515152206019969153205291274980302848000000000000000000000000 
4678245195826079111800656534700032000000000000000000000000 
88767668306536812517179102154997760000000000000000000000000 
-473319324117968474354992121246791680000000000000000000000000 
-149847506669279000860853400868434739200000000000000000000000 
240003883415907325857647977466609664000000000000000000000000 
632844314242555839811696415246192640000000000000000000000000 
-2405954672139126400354623360702873600000000000000000000000 
106404781172241885328741042225152000000000000000000000000 
-4529001210737518840133223017113190400000000000000000000000 
-1425750916823186015024961991527628800000000000000000000000 
701736779373911866770098480205004800000000000000000000000 
2806947117495647467080393920820019200000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 1 0 0 1) (3 0 0 0 1 1 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (2242618990480850267265657753600000000000000000000000000000 
64875763653196025588756527872000000000000000000000000000000 
-72660855291579548659407311216640000000000000000000000000000 
340381506633768480922342582901760000000000000000000000000000 
-39470094232462964703875576463360000000000000000000000000000 
81407069354454864701743376455680000000000000000000000000000 
97133435025201827200943801452800000000000000000000000000000 
309325238292377420524761911688960000000000000000000000000000 
-806806209886098178473112508904960000000000000000000000000000 
-79472810475165131346226746643200000000000000000000000000000 
-50458927285819131013477299456000000000000000000000000000000 
-506415405464725716780975030159360000000000000000000000000000 
539735317349633385417076974667200000000000000000000000000000 
842979453968715857493905134036800000000000000000000000000000 
258854296976252142099138546209280000000000000000000000000000 
14235596138758442186332860973056000000000000000000000000000 
-7908664521532467881296033873920000000000000000000000000000 
-2065040180622366613449519955968000000000000000000000000000 
-3466143092770402589950730895360000000000000000000000000000 
38898457634638031053980130097076633600000000000000000000000 
-14217117481336702832807039128829952000000000000000000000000 
-4007442034893055102736140887234969600000000000000000000000 
18051880777285964630477645806357708800000000000000000000000 
8476720042586222967163536776822784000000000000000000000000 
-7569589247835477532159586015969280000000000000000000000000 
5757216996908337005272344962413363200000000000000000000000 
-4362468168994108866457962013458432000000000000000000000000 
-515152206019969153205291274980302848000000000000000000000000 
4678245195826079111800656534700032000000000000000000000000 
88767668306536812517179102154997760000000000000000000000000 
-473319324117968474354992121246791680000000000000000000000000 
-149847506669279000860853400868434739200000000000000000000000 
240003883415907325857647977466609664000000000000000000000000 
632844314242555839811696415246192640000000000000000000000000 
-2405954672139126400354623360702873600000000000000000000000 
106404781172241885328741042225152000000000000000000000000 
-4529001210737518840133223017113190400000000000000000000000 
-1425750916823186015024961991527628800000000000000000000000 
701736779373911866770098480205004800000000000000000000000 
2806947117495647467080393920820019200000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 64875763653196025588756527872000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
8970475961923401069062631014400000000000000000000000000000 
-290643421166318194637629244866560000000000000000000000000000 
-583881872878764230298808750848000000000000000000000000000000 
1361526026535073923689370331607040000000000000000000000000000 
-157880376929851858815502305853440000000000000000000000000000 
325628277417819458806973505822720000000000000000000000000000 
388533740100807308803775205811200000000000000000000000000000 
1237300953169509682099047646755840000000000000000000000000000 
-3227224839544392713892450035619840000000000000000000000000000 
-317891241900660525384906986572800000000000000000000000000000 
-201835709143276524053909197824000000000000000000000000000000 
-2025661621858902867123900120637440000000000000000000000000000 
2158941269398533541668307898668800000000000000000000000000000 
3371917815874863429975620536147200000000000000000000000000000 
1035417187905008568396554184837120000000000000000000000000000 
56942384555033768745331443892224000000000000000000000000000 
-31634658086129871525184135495680000000000000000000000000000 
-8260160722489466453798079823872000000000000000000000000000 
-13864572371081610359802923581440000000000000000000000000000 
155593830538552124215920520388306534400000000000000000000000 
-56868469925346811331228156515319808000000000000000000000000 
-16029768139572220410944563548939878400000000000000000000000 
72207523109143858521910583225430835200000000000000000000000 
33906880170344891868654147107291136000000000000000000000000 
-30278356991341910128638344063877120000000000000000000000000 
23028867987633348021089379849653452800000000000000000000000 
-17449872675976435465831848053833728000000000000000000000000 
-2060608824079876612821165099921211392000000000000000000000000 
18712980783304316447202626138800128000000000000000000000000 
355070673226147250068716408619991040000000000000000000000000 
-1893277296471873897419968484987166720000000000000000000000000 
-599390026677116003443413603473738956800000000000000000000000 
960015533663629303430591909866438656000000000000000000000000 
2531377256970223359246785660984770560000000000000000000000000 
-9623818688556505601418493442811494400000000000000000000000 
425619124688967541314964168900608000000000000000000000000 
-18116004842950075360532892068452761600000000000000000000000 
-5703003667292744060099847966110515200000000000000000000000 
2806947117495647467080393920820019200000000000000000000000 
11227788469982589868321575683280076800000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 1 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (8970475961923401069062631014400000000000000000000000000000 
-290643421166318194637629244866560000000000000000000000000000 
-583881872878764230298808750848000000000000000000000000000000 
1361526026535073923689370331607040000000000000000000000000000 
-157880376929851858815502305853440000000000000000000000000000 
325628277417819458806973505822720000000000000000000000000000 
388533740100807308803775205811200000000000000000000000000000 
1237300953169509682099047646755840000000000000000000000000000 
-3227224839544392713892450035619840000000000000000000000000000 
-317891241900660525384906986572800000000000000000000000000000 
-201835709143276524053909197824000000000000000000000000000000 
-2025661621858902867123900120637440000000000000000000000000000 
2158941269398533541668307898668800000000000000000000000000000 
3371917815874863429975620536147200000000000000000000000000000 
1035417187905008568396554184837120000000000000000000000000000 
56942384555033768745331443892224000000000000000000000000000 
-31634658086129871525184135495680000000000000000000000000000 
-8260160722489466453798079823872000000000000000000000000000 
-13864572371081610359802923581440000000000000000000000000000 
155593830538552124215920520388306534400000000000000000000000 
-56868469925346811331228156515319808000000000000000000000000 
-16029768139572220410944563548939878400000000000000000000000 
72207523109143858521910583225430835200000000000000000000000 
33906880170344891868654147107291136000000000000000000000000 
-30278356991341910128638344063877120000000000000000000000000 
23028867987633348021089379849653452800000000000000000000000 
-17449872675976435465831848053833728000000000000000000000000 
-2060608824079876612821165099921211392000000000000000000000000 
18712980783304316447202626138800128000000000000000000000000 
355070673226147250068716408619991040000000000000000000000000 
-1893277296471873897419968484987166720000000000000000000000000 
-599390026677116003443413603473738956800000000000000000000000 
960015533663629303430591909866438656000000000000000000000000 
2531377256970223359246785660984770560000000000000000000000000 
-9623818688556505601418493442811494400000000000000000000000 
425619124688967541314964168900608000000000000000000000000 
-18116004842950075360532892068452761600000000000000000000000 
-5703003667292744060099847966110515200000000000000000000000 
2806947117495647467080393920820019200000000000000000000000 
11227788469982589868321575683280076800000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -157880376929851858815502305853440000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1)
 (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
645874269258484876972509433036800000000000000000000000000000 
-20926326323974910013909305630392320000000000000000000000000000 
-42039494847271024581514230061056000000000000000000000000000000 
98029873910525322505634663875706880000000000000000000000000000 
36707187636190557174604286110924800000000000000000000000000000 
16577439577634445175627742114611200000000000000000000000000000 
27974429287258126233871814818406400000000000000000000000000000 
89085668628204697111131430566420480000000000000000000000000000 
-232360188447196275400256402564628480000000000000000000000000000 
-22888169416847557827713303033241600000000000000000000000000000 
-14532171058315909731881462243328000000000000000000000000000000 
-145847636773841006432920808685895680000000000000000000000000000 
155443771396694415000118168704153600000000000000000000000000000 
242778082742990166958244678602598400000000000000000000000000000 
74550037529160616924551901308272640000000000000000000000000000 
4099851687962431349663863960240128000000000000000000000000000 
-2277695382201350749813257755688960000000000000000000000000000 
-594731572019241584673461747318784000000000000000000000000000 
-998249210717875945905810497863680000000000000000000000000000 
11202755798775752943546277467958070476800000000000000000000000 
-4094529834624970415848427269103026176000000000000000000000000 
-1154143306049199869588008575523671244800000000000000000000000 
5198941663858357813577561992231020134400000000000000000000000 
2441295372264832214543098591724961792000000000000000000000000 
-2180041703376617529261960772599152640000000000000000000000000 
1658078495109601057518435349175048601600000000000000000000000 
-1256390832670303353539893059876028416000000000000000000000000 
-148363835333751116123123887194327220224000000000000000000000000 
1347334616397910784198589081993609216000000000000000000000000 
25565088472282602004947581420639354880000000000000000000000000 
-136315965345974920614237730919076003840000000000000000000000000 
-33051737797241833283733631875489044889600000000000000000000000 
69121118423781309847002617510383583232000000000000000000000000 
182259162501856081865768567590903480320000000000000000000000000 
-692914945576068403302131527882427596800000000000000000000000 
30644576977605662974677420160843776000000000000000000000000 
-1304352348692405425958368228928598835200000000000000000000000 
-410616264045077572327189053559957094400000000000000000000000 
202100192459686617629788362299041382400000000000000000000000 
808400769838746470519153449196165529600000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 1 0 0 1) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0
 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (645874269258484876972509433036800000000000000000000000000000 
-20926326323974910013909305630392320000000000000000000000000000 
-42039494847271024581514230061056000000000000000000000000000000 
98029873910525322505634663875706880000000000000000000000000000 
36707187636190557174604286110924800000000000000000000000000000 
16577439577634445175627742114611200000000000000000000000000000 
27974429287258126233871814818406400000000000000000000000000000 
89085668628204697111131430566420480000000000000000000000000000 
-232360188447196275400256402564628480000000000000000000000000000 
-22888169416847557827713303033241600000000000000000000000000000 
-14532171058315909731881462243328000000000000000000000000000000 
-145847636773841006432920808685895680000000000000000000000000000 
155443771396694415000118168704153600000000000000000000000000000 
242778082742990166958244678602598400000000000000000000000000000 
74550037529160616924551901308272640000000000000000000000000000 
4099851687962431349663863960240128000000000000000000000000000 
-2277695382201350749813257755688960000000000000000000000000000 
-594731572019241584673461747318784000000000000000000000000000 
-998249210717875945905810497863680000000000000000000000000000 
11202755798775752943546277467958070476800000000000000000000000 
-4094529834624970415848427269103026176000000000000000000000000 
-1154143306049199869588008575523671244800000000000000000000000 
5198941663858357813577561992231020134400000000000000000000000 
2441295372264832214543098591724961792000000000000000000000000 
-2180041703376617529261960772599152640000000000000000000000000 
1658078495109601057518435349175048601600000000000000000000000 
-1256390832670303353539893059876028416000000000000000000000000 
-148363835333751116123123887194327220224000000000000000000000000 
1347334616397910784198589081993609216000000000000000000000000 
25565088472282602004947581420639354880000000000000000000000000 
-136315965345974920614237730919076003840000000000000000000000000 
-33051737797241833283733631875489044889600000000000000000000000 
69121118423781309847002617510383583232000000000000000000000000 
182259162501856081865768567590903480320000000000000000000000000 
-692914945576068403302131527882427596800000000000000000000000 
30644576977605662974677420160843776000000000000000000000000 
-1304352348692405425958368228928598835200000000000000000000000 
-410616264045077572327189053559957094400000000000000000000000 
202100192459686617629788362299041382400000000000000000000000 
808400769838746470519153449196165529600000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -20926326323974910013909305630392320000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (2 0 0 0 0 1 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (7750491231101818523670113196441600000000000000000000000000000 
-190579043307628644769531176276787200000000000000000000000000000 
1176358486926303870067615966508482560000000000000000000000000000 
440486251634286686095251433331097600000000000000000000000000000 
575603148763161722357900406722396160000000000000000000000000000 
335693151447097514806461777820876800000000000000000000000000000 
1069028023538456365333577166797045760000000000000000000000000000 
-2788322261366355304803076830775541760000000000000000000000000000 
-274658033002170693932559636398899200000000000000000000000000000 
-174386052699790916782577546919936000000000000000000000000000000 
-1750171641286092077195049704230748160000000000000000000000000000 
1865325256760332980001418024449843200000000000000000000000000000 
2913336992915882003498936143231180800000000000000000000000000000 
894600450349927403094622815699271680000000000000000000000000000 
49198220255549176195966367522881536000000000000000000000000000 
-27332344586416208997759093068267520000000000000000000000000000 
-7136778864230899016081540967825408000000000000000000000000000 
-11978990528614511350869725974364160000000000000000000000000000 
134433069585309035322555329615496845721600000000000000000000000 
-49134358015499644990181127229236314112000000000000000000000000 
-13849719672590398435056102906284054937600000000000000000000000 
62387299966300293762930743906772241612800000000000000000000000 
29295544467177986574517183100699541504000000000000000000000000 
-26160500440519410351143529271189831680000000000000000000000000 
19896941941315212690221224190100583219200000000000000000000000 
-15076689992043640242478716718512340992000000000000000000000000 
-1780366024005013393477486646331926642688000000000000000000000000 
16168015396774929410383068983923310592000000000000000000000000 
306781061667391224059370977047672258560000000000000000000000000 
-1928760152687347787565583049854404526080000000000000000000000000 
-396620853566901999404803582505868538675200000000000000000000000 
829453421085375718164031410124602998784000000000000000000000000 
2187109950022272982389222811090841763840000000000000000000000000 
-8314979346912820839625578334589131161600000000000000000000000 
367734923731267955696129041930125312000000000000000000000000 
-15652228184308865111500418747143186022400000000000000000000000 
-4927395168540930867926268642719485132800000000000000000000000 
2425202309516239411557460347588496588800000000000000000000000 
9700809238064957646229841390353986355200000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
7750491231101818523670113196441600000000000000000000000000000 
-190579043307628644769531176276787200000000000000000000000000000 
1176358486926303870067615966508482560000000000000000000000000000 
440486251634286686095251433331097600000000000000000000000000000 
575603148763161722357900406722396160000000000000000000000000000 
335693151447097514806461777820876800000000000000000000000000000 
1069028023538456365333577166797045760000000000000000000000000000 
-2788322261366355304803076830775541760000000000000000000000000000 
-274658033002170693932559636398899200000000000000000000000000000 
-174386052699790916782577546919936000000000000000000000000000000 
-1750171641286092077195049704230748160000000000000000000000000000 
1865325256760332980001418024449843200000000000000000000000000000 
2913336992915882003498936143231180800000000000000000000000000000 
894600450349927403094622815699271680000000000000000000000000000 
49198220255549176195966367522881536000000000000000000000000000 
-27332344586416208997759093068267520000000000000000000000000000 
-7136778864230899016081540967825408000000000000000000000000000 
-11978990528614511350869725974364160000000000000000000000000000 
134433069585309035322555329615496845721600000000000000000000000 
-49134358015499644990181127229236314112000000000000000000000000 
-13849719672590398435056102906284054937600000000000000000000000 
62387299966300293762930743906772241612800000000000000000000000 
29295544467177986574517183100699541504000000000000000000000000 
-26160500440519410351143529271189831680000000000000000000000000 
19896941941315212690221224190100583219200000000000000000000000 
-15076689992043640242478716718512340992000000000000000000000000 
-1780366024005013393477486646331926642688000000000000000000000000 
16168015396774929410383068983923310592000000000000000000000000 
306781061667391224059370977047672258560000000000000000000000000 
-1928760152687347787565583049854404526080000000000000000000000000 
-396620853566901999404803582505868538675200000000000000000000000 
829453421085375718164031410124602998784000000000000000000000000 
2187109950022272982389222811090841763840000000000000000000000000 
-8314979346912820839625578334589131161600000000000000000000000 
367734923731267955696129041930125312000000000000000000000000 
-15652228184308865111500418747143186022400000000000000000000000 
-4927395168540930867926268642719485132800000000000000000000000 
2425202309516239411557460347588496588800000000000000000000000 
9700809238064957646229841390353986355200000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -274658033002170693932559636398899200000000000000000000000000000
Arg4: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (5512500 
-71820000 -135174375 -58471875 -17955000 1382400 -768000 -806400 -787968 437760 
1278848 -466944 -328320 182400 -403200 -262656 255360 43208640 -14554800 
22579200 17322496 -6096720 -43092000) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 5512500
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1)
 (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
42724582911448774611731498995384320000000000000000000000000000000000 
-1050566976233302904292040609225789440000000000000000000000000000000000 
6484676159181250083747733015378010112000000000000000000000000000000000 
2428180462134005357100073526237675520000000000000000000000000000000000 
3173012357556928994497925992057208832000000000000000000000000000000000 
1850508497352125050370620550237583360000000000000000000000000000000000 
5893016979755740713901344131968714752000000000000000000000000000000000 
-15370626465782033617726961029650173952000000000000000000000000000000000 
-961303115507597428763958727396147200000000000000000000000000000000000 
-29373761102805481813774144580740939776000000000000000000000000000000000 
-26844122471906461643392224140668689408000000000000000000000000000000000 
271205189158714833780264600969884467200000000000000000000000000000000 
-150669549532619352100147000538824704000000000000000000000000000000000 
340345771333127936466220946772700692480000000000000000000000000000000 
-276971554634654586761875165188037017600000000000000000000000000000000 
-221484237812950447587216090792072314880000000000000000000000000000000 
524640555140361619858935102931458557214720000000000000000000000000000 
-150618848033411550032456157421183067750400000000000000000000000000000 
274899296493605416221019258618568591278080000000000000000000000000000 
215660070502064776860510598927434393845760000000000000000000000000000 
71315963480045968760087992020119637196800000000000000000000000000000 
-94112133458767314987379827428274733056000000000000000000000000000000 
-110742118906475223793608045396036157440000000000000000000000000000000 
37541312135281964169294114489940196720640000000000000000000000000000 
-12973578273706258434045497159976380006400000000000000000000000000000 
2053332363771276401137508469786186311270400000000000000000000000000000 
89126184874721798374736667773877249638400000000000000000000000000000 
-2306462136298499893422336484883404750848000000000000000000000000000000 
-4430731682926392146513226020144380133376000000000000000000000000000000 
2571390222760422565245008822717785476956160000000000000000000000000000 
2897848860768139533266708161885977300172800000000000000000000000000000 
220879641368240272478730894436900896768000000000000000000000000000000 
-45836323649856924878436000569422585528320000000000000000000000000000 
2027138767068614605774911343639815782400000000000000000000000000000 
-86282907866002618927146058343626812948480000000000000000000000000000 
-27162265866581881409443555892991161794560000000000000000000000000000 
13368927731208269756210500166081587445760000000000000000000000000000 
53475710924833079024842000664326349783040000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 2 0 0 1) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1
 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
42724582911448774611731498995384320000000000000000000000000000000000 
-1050566976233302904292040609225789440000000000000000000000000000000000 
6484676159181250083747733015378010112000000000000000000000000000000000 
2428180462134005357100073526237675520000000000000000000000000000000000 
3173012357556928994497925992057208832000000000000000000000000000000000 
1850508497352125050370620550237583360000000000000000000000000000000000 
5893016979755740713901344131968714752000000000000000000000000000000000 
-15370626465782033617726961029650173952000000000000000000000000000000000 
-961303115507597428763958727396147200000000000000000000000000000000000 
-29373761102805481813774144580740939776000000000000000000000000000000000 
-26844122471906461643392224140668689408000000000000000000000000000000000 
271205189158714833780264600969884467200000000000000000000000000000000 
-150669549532619352100147000538824704000000000000000000000000000000000 
340345771333127936466220946772700692480000000000000000000000000000000 
-276971554634654586761875165188037017600000000000000000000000000000000 
-221484237812950447587216090792072314880000000000000000000000000000000 
524640555140361619858935102931458557214720000000000000000000000000000 
-150618848033411550032456157421183067750400000000000000000000000000000 
274899296493605416221019258618568591278080000000000000000000000000000 
215660070502064776860510598927434393845760000000000000000000000000000 
71315963480045968760087992020119637196800000000000000000000000000000 
-94112133458767314987379827428274733056000000000000000000000000000000 
-110742118906475223793608045396036157440000000000000000000000000000000 
37541312135281964169294114489940196720640000000000000000000000000000 
-12973578273706258434045497159976380006400000000000000000000000000000 
2053332363771276401137508469786186311270400000000000000000000000000000 
89126184874721798374736667773877249638400000000000000000000000000000 
-2306462136298499893422336484883404750848000000000000000000000000000000 
-4430731682926392146513226020144380133376000000000000000000000000000000 
2571390222760422565245008822717785476956160000000000000000000000000000 
2897848860768139533266708161885977300172800000000000000000000000000000 
220879641368240272478730894436900896768000000000000000000000000000000 
-45836323649856924878436000569422585528320000000000000000000000000000 
2027138767068614605774911343639815782400000000000000000000000000000 
-86282907866002618927146058343626812948480000000000000000000000000000 
-27162265866581881409443555892991161794560000000000000000000000000000 
13368927731208269756210500166081587445760000000000000000000000000000 
53475710924833079024842000664326349783040000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1050566976233302904292040609225789440000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
20507799797495411813631119517784473600000000000000000000000000000000000 
4474179357605360604161396476938067968000000000000000000000000000000000000 
2073216489289896280716358378965166325760000000000000000000000000000000000 
5796752390944402132019025674517971681280000000000000000000000000000000000 
806835437747176630496287187885406289920000000000000000000000000000000000 
1455550245895003592495599793095966310400000000000000000000000000000000000 
2828648150282755542672645183344983080960000000000000000000000000000000000 
-8033454496744957148787174634388976107520000000000000000000000000000000000 
-173343551078494979208186700522255257600000000000000000000000000000000000 
453844933732786854654161543185541038080000000000000000000000000000000000 
-441238130017987219802657055874831564800000000000000000000000000000000000 
-461425495443646765806700189150150656000000000000000000000000000000000000 
-14099405329346631270611589398755651092480000000000000000000000000000000000 
-14104887045921966260711326734832112455680000000000000000000000000000000000 
4680275879119364438621040914100891955200000000000000000000000000000000000 
1437175623487158373071511553420879953920000000000000000000000000000000000 
130178490796183120214527008465544544256000000000000000000000000000000000 
-72321383775657289008070560258635857920000000000000000000000000000000000 
163365970239901409503786054450896332390400000000000000000000000000000000 
-132946346224634201645700079290257768448000000000000000000000000000000000 
-106312434150216214841863723580194711142400000000000000000000000000000000 
251827466467373577532288849407100107463065600000000000000000000000000000 
-72297047056037544015578955562167872520192000000000000000000000000000000 
131951662316930599786089244136912923813478400000000000000000000000000000 
103516833840991092893045087485168509045964800000000000000000000000000000 
34231662470422065004842236169657425854464000000000000000000000000000000 
-45173824060208311193942317165571871866880000000000000000000000000000000 
-53156217075108107420931861790097355571200000000000000000000000000000000 
18019829824935342801261174955171294425907200000000000000000000000000000 
-6227317571379004048341838636788662403072000000000000000000000000000000 
985599534610212672546004065497369429409792000000000000000000000000000000 
42780568739866463219873600531461079826432000000000000000000000000000000 
-1863510048311258039932990751386602677207040000000000000000000000000000000 
-5774319749286695914028313484901243399700480000000000000000000000000000000 
1234267306925002831317604234904537028938956800000000000000000000000000000 
1390967453168706975968019917705269104082944000000000000000000000000000000 
106022227856755330789790829329712430448640000000000000000000000000000000 
-22001435351931323941649280273322841053593600000000000000000000000000000 
973026608192935010771957444947111575552000000000000000000000000000000 
-41415795775681257085030108004940870215270400000000000000000000000000000 
-13037887615959303076532906828635757661388800000000000000000000000000000 
6417085310979969482981040079719161973964800000000000000000000000000000 
25668341243919877931924160318876647895859200000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
20507799797495411813631119517784473600000000000000000000000000000000000 
4474179357605360604161396476938067968000000000000000000000000000000000000 
2073216489289896280716358378965166325760000000000000000000000000000000000 
5796752390944402132019025674517971681280000000000000000000000000000000000 
806835437747176630496287187885406289920000000000000000000000000000000000 
1455550245895003592495599793095966310400000000000000000000000000000000000 
2828648150282755542672645183344983080960000000000000000000000000000000000 
-8033454496744957148787174634388976107520000000000000000000000000000000000 
-173343551078494979208186700522255257600000000000000000000000000000000000 
453844933732786854654161543185541038080000000000000000000000000000000000 
-441238130017987219802657055874831564800000000000000000000000000000000000 
-461425495443646765806700189150150656000000000000000000000000000000000000 
-14099405329346631270611589398755651092480000000000000000000000000000000000 
-14104887045921966260711326734832112455680000000000000000000000000000000000 
4680275879119364438621040914100891955200000000000000000000000000000000000 
1437175623487158373071511553420879953920000000000000000000000000000000000 
130178490796183120214527008465544544256000000000000000000000000000000000 
-72321383775657289008070560258635857920000000000000000000000000000000000 
163365970239901409503786054450896332390400000000000000000000000000000000 
-132946346224634201645700079290257768448000000000000000000000000000000000 
-106312434150216214841863723580194711142400000000000000000000000000000000 
251827466467373577532288849407100107463065600000000000000000000000000000 
-72297047056037544015578955562167872520192000000000000000000000000000000 
131951662316930599786089244136912923813478400000000000000000000000000000 
103516833840991092893045087485168509045964800000000000000000000000000000 
34231662470422065004842236169657425854464000000000000000000000000000000 
-45173824060208311193942317165571871866880000000000000000000000000000000 
-53156217075108107420931861790097355571200000000000000000000000000000000 
18019829824935342801261174955171294425907200000000000000000000000000000 
-6227317571379004048341838636788662403072000000000000000000000000000000 
985599534610212672546004065497369429409792000000000000000000000000000000 
42780568739866463219873600531461079826432000000000000000000000000000000 
-1863510048311258039932990751386602677207040000000000000000000000000000000 
-5774319749286695914028313484901243399700480000000000000000000000000000000 
1234267306925002831317604234904537028938956800000000000000000000000000000 
1390967453168706975968019917705269104082944000000000000000000000000000000 
106022227856755330789790829329712430448640000000000000000000000000000000 
-22001435351931323941649280273322841053593600000000000000000000000000000 
973026608192935010771957444947111575552000000000000000000000000000000 
-41415795775681257085030108004940870215270400000000000000000000000000000 
-13037887615959303076532906828635757661388800000000000000000000000000000 
6417085310979969482981040079719161973964800000000000000000000000000000 
25668341243919877931924160318876647895859200000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 5796752390944402132019025674517971681280000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
41015599594990823627262239035568947200000000000000000000000000000000000 
8948358715210721208322792953876135936000000000000000000000000000000000000 
4146432978579792561432716757930332651520000000000000000000000000000000000 
1613670875494353260992574375770812579840000000000000000000000000000000000 
2911100491790007184991199586191932620800000000000000000000000000000000000 
5657296300565511085345290366689966161920000000000000000000000000000000000 
-33457166166323120693631426292331867258880000000000000000000000000000000000 
-346687102156989958416373401044510515200000000000000000000000000000000000 
907689867465573709308323086371082076160000000000000000000000000000000000 
-882476260035974439605314111749663129600000000000000000000000000000000000 
-922850990887293531613400378300301312000000000000000000000000000000000000 
-51385820222470871069299281495583188910080000000000000000000000000000000000 
-28209774091843932521422653469664224911360000000000000000000000000000000000 
9360551758238728877242081828201783910400000000000000000000000000000000000 
2874351246974316746143023106841759907840000000000000000000000000000000000 
260356981592366240429054016931089088512000000000000000000000000000000000 
-144642767551314578016141120517271715840000000000000000000000000000000000 
326731940479802819007572108901792664780800000000000000000000000000000000 
-265892692449268403291400158580515536896000000000000000000000000000000000 
-212624868300432429683727447160389422284800000000000000000000000000000000 
503654932934747155064577698814200214926131200000000000000000000000000000 
-144594094112075088031157911124335745040384000000000000000000000000000000 
263903324633861199572178488273825847626956800000000000000000000000000000 
207033667681982185786090174970337018091929600000000000000000000000000000 
68463324940844130009684472339314851708928000000000000000000000000000000 
-90347648120416622387884634331143743733760000000000000000000000000000000 
-106312434150216214841863723580194711142400000000000000000000000000000000 
36039659649870685602522349910342588851814400000000000000000000000000000 
-12454635142758008096683677273577324806144000000000000000000000000000000 
1971199069220425345092008130994738858819584000000000000000000000000000000 
85561137479732926439747201062922159652864000000000000000000000000000000 
-3727020096622516079865981502773205354414080000000000000000000000000000000 
-11548639498573391828056626969802486799400960000000000000000000000000000000 
2468534613850005662635208469809074057877913600000000000000000000000000000 
2781934906337413951936039835410538208165888000000000000000000000000000000 
212044455713510661579581658659424860897280000000000000000000000000000000 
-44002870703862647883298560546645682107187200000000000000000000000000000 
1946053216385870021543914889894223151104000000000000000000000000000000 
-82831591551362514170060216009881740430540800000000000000000000000000000 
-26075775231918606153065813657271515322777600000000000000000000000000000 
12834170621959938965962080159438323947929600000000000000000000000000000 
51336682487839755863848320637753295791718400000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0
 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
41015599594990823627262239035568947200000000000000000000000000000000000 
8948358715210721208322792953876135936000000000000000000000000000000000000 
4146432978579792561432716757930332651520000000000000000000000000000000000 
1613670875494353260992574375770812579840000000000000000000000000000000000 
2911100491790007184991199586191932620800000000000000000000000000000000000 
5657296300565511085345290366689966161920000000000000000000000000000000000 
-33457166166323120693631426292331867258880000000000000000000000000000000000 
-346687102156989958416373401044510515200000000000000000000000000000000000 
907689867465573709308323086371082076160000000000000000000000000000000000 
-882476260035974439605314111749663129600000000000000000000000000000000000 
-922850990887293531613400378300301312000000000000000000000000000000000000 
-51385820222470871069299281495583188910080000000000000000000000000000000000 
-28209774091843932521422653469664224911360000000000000000000000000000000000 
9360551758238728877242081828201783910400000000000000000000000000000000000 
2874351246974316746143023106841759907840000000000000000000000000000000000 
260356981592366240429054016931089088512000000000000000000000000000000000 
-144642767551314578016141120517271715840000000000000000000000000000000000 
326731940479802819007572108901792664780800000000000000000000000000000000 
-265892692449268403291400158580515536896000000000000000000000000000000000 
-212624868300432429683727447160389422284800000000000000000000000000000000 
503654932934747155064577698814200214926131200000000000000000000000000000 
-144594094112075088031157911124335745040384000000000000000000000000000000 
263903324633861199572178488273825847626956800000000000000000000000000000 
207033667681982185786090174970337018091929600000000000000000000000000000 
68463324940844130009684472339314851708928000000000000000000000000000000 
-90347648120416622387884634331143743733760000000000000000000000000000000 
-106312434150216214841863723580194711142400000000000000000000000000000000 
36039659649870685602522349910342588851814400000000000000000000000000000 
-12454635142758008096683677273577324806144000000000000000000000000000000 
1971199069220425345092008130994738858819584000000000000000000000000000000 
85561137479732926439747201062922159652864000000000000000000000000000000 
-3727020096622516079865981502773205354414080000000000000000000000000000000 
-11548639498573391828056626969802486799400960000000000000000000000000000000 
2468534613850005662635208469809074057877913600000000000000000000000000000 
2781934906337413951936039835410538208165888000000000000000000000000000000 
212044455713510661579581658659424860897280000000000000000000000000000000 
-44002870703862647883298560546645682107187200000000000000000000000000000 
1946053216385870021543914889894223151104000000000000000000000000000000 
-82831591551362514170060216009881740430540800000000000000000000000000000 
-26075775231918606153065813657271515322777600000000000000000000000000000 
12834170621959938965962080159438323947929600000000000000000000000000000 
51336682487839755863848320637753295791718400000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1613670875494353260992574375770812579840000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 0 0 0 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
15749990244476476272868699789658475724800000000000000000000000000000000000 
3436169746640916943995952494288436199424000000000000000000000000000000000000 
1592230263774640343590163235045247738183680000000000000000000000000000000000 
1117862588847362759036620641097702126387200000000000000000000000000000000000 
3479475188567582398176576745183305195847680000000000000000000000000000000000 
-10886941694142439134248489829693899742904320000000000000000000000000000000000 
-133127847228284144031887386001092037836800000000000000000000000000000000000 
348552909106780304374396065166495517245440000000000000000000000000000000000 
-338870883853814184808440618911870641766400000000000000000000000000000000000 
-354374780500720716139545745267315703808000000000000000000000000000000000000 
-17118008147127962207802953605555228162129920000000000000000000000000000000000 
-10832553251268070088226298932351062365962240000000000000000000000000000000000 
3594451875163671888860959422029485021593600000000000000000000000000000000000 
1103750878838137630518920873027235804610560000000000000000000000000000000000 
99977080931468636324756742501538209988608000000000000000000000000000000000 
-55542822739704797958198190278632338882560000000000000000000000000000000000 
125465065144244282498907689818288383275827200000000000000000000000000000000 
-102102793900519066863897660894917966168064000000000000000000000000000000000 
-81647949427366052998551339709589538157363200000000000000000000000000000000 
193403494246942907544797836344652882531634380800000000000000000000000000000 
-55524132139036833803964637871744926095507456000000000000000000000000000000 
101338876659402700635716539497149125488751411200000000000000000000000000000 
79500928389881159341858627188609414947300966400000000000000000000000000000 
26289916777284145923718837378296903056228352000000000000000000000000000000 
-34693496878239982996947699583159197593763840000000000000000000000000000000 
-40823974713683026499275669854794769078681600000000000000000000000000000000 
13839229305550343271368582365571554119096729600000000000000000000000000000 
-4782579894819075109126532073053692725559296000000000000000000000000000000 
-56349678668510711024926363086509818452639744000000000000000000000000000000 
32855476792217443752862925208162109306699776000000000000000000000000000000 
-979347871964627261590616071849083333739806720000000000000000000000000000000 
-3650433521961926777131353609779540017167728640000000000000000000000000000000 
947917291718402174451920052406684438225118822400000000000000000000000000000 
1700821987227353435852528452099805203232980992000000000000000000000000000000 
1649913161974499463731341650174448974189035520000000000000000000000000000000 
-16897102350283256787186647249911941929159884800000000000000000000000000000 
747284435092174088272863317719381690023936000000000000000000000000000000 
-31807331155723205441303122947794588325327667200000000000000000000000000000 
-10013097689056744762777272444392261883946598400000000000000000000000000000 
4928321518832616562929438781224316396004966400000000000000000000000000000 
19713286075330466251717755124897265584019865600000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0
 0 1 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
15749990244476476272868699789658475724800000000000000000000000000000000000 
3436169746640916943995952494288436199424000000000000000000000000000000000000 
1592230263774640343590163235045247738183680000000000000000000000000000000000 
1117862588847362759036620641097702126387200000000000000000000000000000000000 
3479475188567582398176576745183305195847680000000000000000000000000000000000 
-10886941694142439134248489829693899742904320000000000000000000000000000000000 
-133127847228284144031887386001092037836800000000000000000000000000000000000 
348552909106780304374396065166495517245440000000000000000000000000000000000 
-338870883853814184808440618911870641766400000000000000000000000000000000000 
-354374780500720716139545745267315703808000000000000000000000000000000000000 
-17118008147127962207802953605555228162129920000000000000000000000000000000000 
-10832553251268070088226298932351062365962240000000000000000000000000000000000 
3594451875163671888860959422029485021593600000000000000000000000000000000000 
1103750878838137630518920873027235804610560000000000000000000000000000000000 
99977080931468636324756742501538209988608000000000000000000000000000000000 
-55542822739704797958198190278632338882560000000000000000000000000000000000 
125465065144244282498907689818288383275827200000000000000000000000000000000 
-102102793900519066863897660894917966168064000000000000000000000000000000000 
-81647949427366052998551339709589538157363200000000000000000000000000000000 
193403494246942907544797836344652882531634380800000000000000000000000000000 
-55524132139036833803964637871744926095507456000000000000000000000000000000 
101338876659402700635716539497149125488751411200000000000000000000000000000 
79500928389881159341858627188609414947300966400000000000000000000000000000 
26289916777284145923718837378296903056228352000000000000000000000000000000 
-34693496878239982996947699583159197593763840000000000000000000000000000000 
-40823974713683026499275669854794769078681600000000000000000000000000000000 
13839229305550343271368582365571554119096729600000000000000000000000000000 
-4782579894819075109126532073053692725559296000000000000000000000000000000 
-56349678668510711024926363086509818452639744000000000000000000000000000000 
32855476792217443752862925208162109306699776000000000000000000000000000000 
-979347871964627261590616071849083333739806720000000000000000000000000000000 
-3650433521961926777131353609779540017167728640000000000000000000000000000000 
947917291718402174451920052406684438225118822400000000000000000000000000000 
1700821987227353435852528452099805203232980992000000000000000000000000000000 
1649913161974499463731341650174448974189035520000000000000000000000000000000 
-16897102350283256787186647249911941929159884800000000000000000000000000000 
747284435092174088272863317719381690023936000000000000000000000000000000 
-31807331155723205441303122947794588325327667200000000000000000000000000000 
-10013097689056744762777272444392261883946598400000000000000000000000000000 
4928321518832616562929438781224316396004966400000000000000000000000000000 
19713286075330466251717755124897265584019865600000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-133127847228284144031887386001092037836800000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 0 0 0 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
24806234635050450129768202168712099266560000000000000000000000000000000000000 
5411967350959444186793625178504287014092800000000000000000000000000000000000000 
2507762665445058541154507095196265187639296000000000000000000000000000000000000 
1760633577434596345482677509728880849059840000000000000000000000000000000000000 
5480173421993942277128108373663705683460096000000000000000000000000000000000000 
-17146933168274341636441371481767892095074304000000000000000000000000000000000000
 604884527679058319883066504757689095553024000000000000000000000000000000000000 
-533721642069757341073293974786196260782080000000000000000000000000000000000000 
-558140279288635127919784548796022233497600000000000000000000000000000000000000 
-27184517615070057839263222737231318978920448000000000000000000000000000000000000
 
-17061271370747210388956420818452923226390528000000000000000000000000000000000000
 5661261703382783224956011089696438909009920000000000000000000000000000000000000
 1738407634170066768067300375017896392261632000000000000000000000000000000000000
 157463902467063102211491869439922680732057600000000000000000000000000000000000 
-87479945815035056784162149688845933740032000000000000000000000000000000000000 
197607477602184744935779611463804203659427840000000000000000000000000000000000 
-160811900393317530310638815909495796714700800000000000000000000000000000000000 
-128595520348101533472718360042603522597847040000000000000000000000000000000000 
304610503438935079383056592242828289987324149760000000000000000000000000000000 
-87450508118983013241244304647998258600424243200000000000000000000000000000000 
159608730738559253501253549708009872644783472640000000000000000000000000000000 
125213962214062825963427337822059828541999022080000000000000000000000000000000 
41406618924222529829857168870817622313559654400000000000000000000000000000000 
-54642257583227973220192626843475736210178048000000000000000000000000000000000 
-64297760174050766736359180021301761298923520000000000000000000000000000000000 
21796786156241790652405517225775197737577349120000000000000000000000000000000 
-7532563334340043296874288015059566042755891200000000000000000000000000000000 
26271716102333130579291679643690556628087603200000000000000000000000000000000 
51747375947742473910759107202855322158052147200000000000000000000000000000000 
-1606374265013864326140526258442830428801859584000000000000000000000000000000000
 
-5816529232093089882573953177947325914108919808000000000000000000000000000000000
 1561131192237364906506100424173087113577003745280000000000000000000000000000000
 2645246412381554057171696690784918001557071462400000000000000000000000000000000
 2464420360103726238192720613935656360208236544000000000000000000000000000000000
 -26612936201696129439818969418611308538426818560000000000000000000000000000000 
1176972985270174189029759725408026161787699200000000000000000000000000000000 
-50096546570264048570052418642776476612391075840000000000000000000000000000000 
-15770628860264373001374204099917812467215892480000000000000000000000000000000 
7762106392161371086613866080428298323707822080000000000000000000000000000000 
31048425568645484346455464321713193294831288320000000000000000000000000000000) 4
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 0 0 0
 0 0 2 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
24806234635050450129768202168712099266560000000000000000000000000000000000000 
5411967350959444186793625178504287014092800000000000000000000000000000000000000 
2507762665445058541154507095196265187639296000000000000000000000000000000000000 
1760633577434596345482677509728880849059840000000000000000000000000000000000000 
5480173421993942277128108373663705683460096000000000000000000000000000000000000 
-17146933168274341636441371481767892095074304000000000000000000000000000000000000
 604884527679058319883066504757689095553024000000000000000000000000000000000000 
-533721642069757341073293974786196260782080000000000000000000000000000000000000 
-558140279288635127919784548796022233497600000000000000000000000000000000000000 
-27184517615070057839263222737231318978920448000000000000000000000000000000000000
 
-17061271370747210388956420818452923226390528000000000000000000000000000000000000
 5661261703382783224956011089696438909009920000000000000000000000000000000000000
 1738407634170066768067300375017896392261632000000000000000000000000000000000000
 157463902467063102211491869439922680732057600000000000000000000000000000000000 
-87479945815035056784162149688845933740032000000000000000000000000000000000000 
197607477602184744935779611463804203659427840000000000000000000000000000000000 
-160811900393317530310638815909495796714700800000000000000000000000000000000000 
-128595520348101533472718360042603522597847040000000000000000000000000000000000 
304610503438935079383056592242828289987324149760000000000000000000000000000000 
-87450508118983013241244304647998258600424243200000000000000000000000000000000 
159608730738559253501253549708009872644783472640000000000000000000000000000000 
125213962214062825963427337822059828541999022080000000000000000000000000000000 
41406618924222529829857168870817622313559654400000000000000000000000000000000 
-54642257583227973220192626843475736210178048000000000000000000000000000000000 
-64297760174050766736359180021301761298923520000000000000000000000000000000000 
21796786156241790652405517225775197737577349120000000000000000000000000000000 
-7532563334340043296874288015059566042755891200000000000000000000000000000000 
26271716102333130579291679643690556628087603200000000000000000000000000000000 
51747375947742473910759107202855322158052147200000000000000000000000000000000 
-1606374265013864326140526258442830428801859584000000000000000000000000000000000
 
-5816529232093089882573953177947325914108919808000000000000000000000000000000000
 1561131192237364906506100424173087113577003745280000000000000000000000000000000
 2645246412381554057171696690784918001557071462400000000000000000000000000000000
 2464420360103726238192720613935656360208236544000000000000000000000000000000000
 -26612936201696129439818969418611308538426818560000000000000000000000000000000 
1176972985270174189029759725408026161787699200000000000000000000000000000000 
-50096546570264048570052418642776476612391075840000000000000000000000000000000 
-15770628860264373001374204099917812467215892480000000000000000000000000000000 
7762106392161371086613866080428298323707822080000000000000000000000000000000 
31048425568645484346455464321713193294831288320000000000000000000000000000000) 4
)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
604884527679058319883066504757689095553024000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
5209309273360594527251322455429540845977600000000000000000000000000000000000000 
1136513143701483279226661287485900272959488000000000000000000000000000000000000000
 
526630159743462293642446489991215689404252160000000000000000000000000000000000000
 
369733051261265232551362277043064978302566400000000000000000000000000000000000000
 
1150836418618727878196902758469378193526620160000000000000000000000000000000000000
 
-3600855965337611743652688011171257339965603840000000000000000000000000000000000000
 
-112081544834649041625391734705101214764236800000000000000000000000000000000000000
 
-117209458650613376863154755247164669034496000000000000000000000000000000000000000
 
-5200645695914303157543500910822118145308753920000000000000000000000000000000000000
 
-2630173856762397327865018626881753552045998080000000000000000000000000000000000000
 
1188864957710384477240762328836252170892083200000000000000000000000000000000000000
 
365065603175714021294133078753758242374942720000000000000000000000000000000000000
 
33067419518083251464413292582383762953732096000000000000000000000000000000000000
 
-18370788621157361924674051434657646085406720000000000000000000000000000000000000
 
41497570296458796436513718407398882768479846400000000000000000000000000000000000
 
-33770499082596681365234151340994117310087168000000000000000000000000000000000000
 
-27005059273101322029270855608946739745547878400000000000000000000000000000000000
 
63968205722176366670441884370993940897338071449600000000000000000000000000000000
 
-18364606704986432780661303976079634306089091072000000000000000000000000000000000
 
33517833455097443235263245438682073255404529254400000000000000000000000000000000
 
26294932064953193452319740942632563993819794636800000000000000000000000000000000
 8695389974086731264270005462871700685847527424000000000000000000000000000000000
 
-11474874092477874376240451637129904604137390080000000000000000000000000000000000
 
-13502529636550661014635427804473369872773939200000000000000000000000000000000000
 4577325092810776037005158617412791524891243315200000000000000000000000000000000
 
-1581838300211409092343600483162508868978737152000000000000000000000000000000000
 
-255793055575863236767833477330146672387007971328000000000000000000000000000000000
 
10866948949025919521259412512599617653190950912000000000000000000000000000000000
 
-192166309009937511717574553131149007115664752640000000000000000000000000000000000
 
-1069040237764426178729997408170000789883511111680000000000000000000000000000000000
 
172987111284007700476216063858379885389596642508800000000000000000000000000000000
 
631717197087687700311322684664301606366666031104000000000000000000000000000000000
 
822390077572027903241536847324363139802453770240000000000000000000000000000000000
 
-5588716602356187182361983577908374793069631897600000000000000000000000000000000
 247164326906736579696249542335685493975416832000000000000000000000000000000000 
-10520274779755450199711007914983060088602125926400000000000000000000000000000000
 
-3311832060655518330288582860982740618115337420800000000000000000000000000000000
 1630042342353887928188911876889942647978642636800000000000000000000000000000000
 6520169369415551712755647507559770591914570547200000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 1 0 1) (3 0 0 0 1 0 1 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
5209309273360594527251322455429540845977600000000000000000000000000000000000000 
1136513143701483279226661287485900272959488000000000000000000000000000000000000000
 
526630159743462293642446489991215689404252160000000000000000000000000000000000000
 
369733051261265232551362277043064978302566400000000000000000000000000000000000000
 
1150836418618727878196902758469378193526620160000000000000000000000000000000000000
 
-3600855965337611743652688011171257339965603840000000000000000000000000000000000000
 
-112081544834649041625391734705101214764236800000000000000000000000000000000000000
 
-117209458650613376863154755247164669034496000000000000000000000000000000000000000
 
-5200645695914303157543500910822118145308753920000000000000000000000000000000000000
 
-2630173856762397327865018626881753552045998080000000000000000000000000000000000000
 
1188864957710384477240762328836252170892083200000000000000000000000000000000000000
 
365065603175714021294133078753758242374942720000000000000000000000000000000000000
 
33067419518083251464413292582383762953732096000000000000000000000000000000000000
 
-18370788621157361924674051434657646085406720000000000000000000000000000000000000
 
41497570296458796436513718407398882768479846400000000000000000000000000000000000
 
-33770499082596681365234151340994117310087168000000000000000000000000000000000000
 
-27005059273101322029270855608946739745547878400000000000000000000000000000000000
 
63968205722176366670441884370993940897338071449600000000000000000000000000000000
 
-18364606704986432780661303976079634306089091072000000000000000000000000000000000
 
33517833455097443235263245438682073255404529254400000000000000000000000000000000
 
26294932064953193452319740942632563993819794636800000000000000000000000000000000
 8695389974086731264270005462871700685847527424000000000000000000000000000000000
 
-11474874092477874376240451637129904604137390080000000000000000000000000000000000
 
-13502529636550661014635427804473369872773939200000000000000000000000000000000000
 4577325092810776037005158617412791524891243315200000000000000000000000000000000
 
-1581838300211409092343600483162508868978737152000000000000000000000000000000000
 
-255793055575863236767833477330146672387007971328000000000000000000000000000000000
 
10866948949025919521259412512599617653190950912000000000000000000000000000000000
 
-192166309009937511717574553131149007115664752640000000000000000000000000000000000
 
-1069040237764426178729997408170000789883511111680000000000000000000000000000000000
 
172987111284007700476216063858379885389596642508800000000000000000000000000000000
 
631717197087687700311322684664301606366666031104000000000000000000000000000000000
 
822390077572027903241536847324363139802453770240000000000000000000000000000000000
 
-5588716602356187182361983577908374793069631897600000000000000000000000000000000
 247164326906736579696249542335685493975416832000000000000000000000000000000000 
-10520274779755450199711007914983060088602125926400000000000000000000000000000000
 
-3311832060655518330288582860982740618115337420800000000000000000000000000000000
 1630042342353887928188911876889942647978642636800000000000000000000000000000000
 6520169369415551712755647507559770591914570547200000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
1136513143701483279226661287485900272959488000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
20837237093442378109005289821718163383910400000000000000000000000000000000000000
 
2106520638973849174569785959964862757617008640000000000000000000000000000000000000
 
-10228618293313349513039951587373102456635392000000000000000000000000000000000000000
 
1478932205045060930205449108172259913210265600000000000000000000000000000000000000
 
4603345674474911512787611033877512774106480640000000000000000000000000000000000000
 
-14403423861350446974610752044685029359862415360000000000000000000000000000000000000
 
-448326179338596166501566938820404859056947200000000000000000000000000000000000000
 
-468837834602453507452619020988658676137984000000000000000000000000000000000000000
 
-20802582783657212630174003643288472581235015680000000000000000000000000000000000000
 
-10520695427049589311460074507527014208183992320000000000000000000000000000000000000
 
4755459830841537908963049315345008683568332800000000000000000000000000000000000000
 
1460262412702856085176532315015032969499770880000000000000000000000000000000000000
 
132269678072333005857653170329535051814928384000000000000000000000000000000000000
 
-73483154484629447698696205738630584341626880000000000000000000000000000000000000
 
165990281185835185746054873629595531073919385600000000000000000000000000000000000
 
-135081996330386725460936605363976469240348672000000000000000000000000000000000000
 
-108020237092405288117083422435786958982191513600000000000000000000000000000000000
 
255872822888705466681767537483975763589352285798400000000000000000000000000000000
 
-73458426819945731122645215904318537224356364288000000000000000000000000000000000
 
134071333820389772941052981754728293021618117017600000000000000000000000000000000
 
105179728259812773809278963770530255975279178547200000000000000000000000000000000
 
34781559896346925057080021851486802743390109696000000000000000000000000000000000
 
-45899496369911497504961806548519618416549560320000000000000000000000000000000000
 
-54010118546202644058541711217893479491095756800000000000000000000000000000000000
 
18309300371243104148020634469651166099564973260800000000000000000000000000000000
 
-6327353200845636369374401932650035475914948608000000000000000000000000000000000
 
-1023172222303452947071333909320586689548031885312000000000000000000000000000000000
 
43467795796103678085037650050398470612763803648000000000000000000000000000000000
 
-768665236039750046870298212524596028462659010560000000000000000000000000000000000
 
-4276160951057704714919989632680003159534044446720000000000000000000000000000000000
 
691948445136030801904864255433519541558386570035200000000000000000000000000000000
 
2526868788350750801245290738657206425466664124416000000000000000000000000000000000
 
3289560310288111612966147389297452559209815080960000000000000000000000000000000000
 
-22354866409424748729447934311633499172278527590400000000000000000000000000000000
 988657307626946318784998169342741975901667328000000000000000000000000000000000 
-42081099119021800798844031659932240354408503705600000000000000000000000000000000
 
-13247328242622073321154331443930962472461349683200000000000000000000000000000000
 6520169369415551712755647507559770591914570547200000000000000000000000000000000
 
26080677477662206851022590030239082367658282188800000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
20837237093442378109005289821718163383910400000000000000000000000000000000000000
 
2106520638973849174569785959964862757617008640000000000000000000000000000000000000
 
-10228618293313349513039951587373102456635392000000000000000000000000000000000000000
 
1478932205045060930205449108172259913210265600000000000000000000000000000000000000
 
4603345674474911512787611033877512774106480640000000000000000000000000000000000000
 
-14403423861350446974610752044685029359862415360000000000000000000000000000000000000
 
-448326179338596166501566938820404859056947200000000000000000000000000000000000000
 
-468837834602453507452619020988658676137984000000000000000000000000000000000000000
 
-20802582783657212630174003643288472581235015680000000000000000000000000000000000000
 
-10520695427049589311460074507527014208183992320000000000000000000000000000000000000
 
4755459830841537908963049315345008683568332800000000000000000000000000000000000000
 
1460262412702856085176532315015032969499770880000000000000000000000000000000000000
 
132269678072333005857653170329535051814928384000000000000000000000000000000000000
 
-73483154484629447698696205738630584341626880000000000000000000000000000000000000
 
165990281185835185746054873629595531073919385600000000000000000000000000000000000
 
-135081996330386725460936605363976469240348672000000000000000000000000000000000000
 
-108020237092405288117083422435786958982191513600000000000000000000000000000000000
 
255872822888705466681767537483975763589352285798400000000000000000000000000000000
 
-73458426819945731122645215904318537224356364288000000000000000000000000000000000
 
134071333820389772941052981754728293021618117017600000000000000000000000000000000
 
105179728259812773809278963770530255975279178547200000000000000000000000000000000
 
34781559896346925057080021851486802743390109696000000000000000000000000000000000
 
-45899496369911497504961806548519618416549560320000000000000000000000000000000000
 
-54010118546202644058541711217893479491095756800000000000000000000000000000000000
 
18309300371243104148020634469651166099564973260800000000000000000000000000000000
 
-6327353200845636369374401932650035475914948608000000000000000000000000000000000
 
-1023172222303452947071333909320586689548031885312000000000000000000000000000000000
 
43467795796103678085037650050398470612763803648000000000000000000000000000000000
 
-768665236039750046870298212524596028462659010560000000000000000000000000000000000
 
-4276160951057704714919989632680003159534044446720000000000000000000000000000000000
 
691948445136030801904864255433519541558386570035200000000000000000000000000000000
 
2526868788350750801245290738657206425466664124416000000000000000000000000000000000
 
3289560310288111612966147389297452559209815080960000000000000000000000000000000000
 
-22354866409424748729447934311633499172278527590400000000000000000000000000000000
 988657307626946318784998169342741975901667328000000000000000000000000000000000 
-42081099119021800798844031659932240354408503705600000000000000000000000000000000
 
-13247328242622073321154331443930962472461349683200000000000000000000000000000000
 6520169369415551712755647507559770591914570547200000000000000000000000000000000
 
26080677477662206851022590030239082367658282188800000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
4603345674474911512787611033877512774106480640000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
1500281070727851223848380867163707763641548800000000000000000000000000000000000000
 
151669486006117140569024589117470118548424622080000000000000000000000000000000000000
 
-736460517118561164938876514290863376877748224000000000000000000000000000000000000000
 
106483118763244386974792335788402713751139123200000000000000000000000000000000000000
 
-1423727554673124749246133474063033186935038279680000000000000000000000000000000000000
 
-483351295819865708842699158557138841281180467200000000000000000000000000000000000000
 
-32279484912378923988112819595069149852100198400000000000000000000000000000000000000
 
-33756324091376652536588569511183424681934848000000000000000000000000000000000000000
 
-1497785960423319309372528262316770025848921128960000000000000000000000000000000000000
 
-757490070747570430425125364541945022989247447040000000000000000000000000000000000000
 
342393107820590729445339550704840625216919961600000000000000000000000000000000000000
 
105138893714605638132710326681082373803983503360000000000000000000000000000000000000
 
9523416821207976421751028263726523730674843648000000000000000000000000000000000000
 
-5290787122893320234306126813181402072597135360000000000000000000000000000000000000
 
11951300245380133373715950901330878237322195763200000000000000000000000000000000000
 
-9725903735787844233187435586206305785305104384000000000000000000000000000000000000
 
-7777457070653180744430006415376661046717788979200000000000000000000000000000000000
 
18422843247986793601087262698846254978433364577484800000000000000000000000000000000
 
-5289006731036092640830455545110934680153658228736000000000000000000000000000000000
 
9653136035068063651755814686340437097556504425267200000000000000000000000000000000
 
7572940434706519714268085391478178430220100855398400000000000000000000000000000000
 
2504272312536978604109761573307049797524087898112000000000000000000000000000000000
 
-3304763738633627820357250071493412525991568343040000000000000000000000000000000000
 
-3888728535326590372215003207688330523358894489600000000000000000000000000000000000
 
1318269626729503498657485681814883959168678074777600000000000000000000000000000000
 
-455569430460885818594956939150802554265876299776000000000000000000000000000000000
 
-73668400005848612189136041471082241647458295742464000000000000000000000000000000000
 
3129681297319464822122710803628689884118993862656000000000000000000000000000000000
 
-55343896994862003374661471301770914049311448760320000000000000000000000000000000000
 
-307883588476154739474239253552960227486451200163840000000000000000000000000000000000
 
49820288049794217737150226391213406992203833042534400000000000000000000000000000000
 
-112679570405140279128746172984841954909214944002048000000000000000000000000000000000
 
236848342340744036133562612029416584263106685829120000000000000000000000000000000000
 
-1609550381478581908520251270437611940404053986508800000000000000000000000000000000
 
71183326149140134952519868192677422264920047616000000000000000000000000000000000
 
-3029839136569569657516770279515121305517412266803200000000000000000000000000000000
 
-953807633468789279123111863963029298017217177190400000000000000000000000000000000
 
469452194597919723318406620544303482617849079398400000000000000000000000000000000
 
1877808778391678893273626482177213930471396317593600000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 1 0 1) (3 0 0 0 0 1 1 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1500281070727851223848380867163707763641548800000000000000000000000000000000000000
 
151669486006117140569024589117470118548424622080000000000000000000000000000000000000
 
-736460517118561164938876514290863376877748224000000000000000000000000000000000000000
 
106483118763244386974792335788402713751139123200000000000000000000000000000000000000
 
-1423727554673124749246133474063033186935038279680000000000000000000000000000000000000
 
-483351295819865708842699158557138841281180467200000000000000000000000000000000000000
 
-32279484912378923988112819595069149852100198400000000000000000000000000000000000000
 
-33756324091376652536588569511183424681934848000000000000000000000000000000000000000
 
-1497785960423319309372528262316770025848921128960000000000000000000000000000000000000
 
-757490070747570430425125364541945022989247447040000000000000000000000000000000000000
 
342393107820590729445339550704840625216919961600000000000000000000000000000000000000
 
105138893714605638132710326681082373803983503360000000000000000000000000000000000000
 
9523416821207976421751028263726523730674843648000000000000000000000000000000000000
 
-5290787122893320234306126813181402072597135360000000000000000000000000000000000000
 
11951300245380133373715950901330878237322195763200000000000000000000000000000000000
 
-9725903735787844233187435586206305785305104384000000000000000000000000000000000000
 
-7777457070653180744430006415376661046717788979200000000000000000000000000000000000
 
18422843247986793601087262698846254978433364577484800000000000000000000000000000000
 
-5289006731036092640830455545110934680153658228736000000000000000000000000000000000
 
9653136035068063651755814686340437097556504425267200000000000000000000000000000000
 
7572940434706519714268085391478178430220100855398400000000000000000000000000000000
 
2504272312536978604109761573307049797524087898112000000000000000000000000000000000
 
-3304763738633627820357250071493412525991568343040000000000000000000000000000000000
 
-3888728535326590372215003207688330523358894489600000000000000000000000000000000000
 
1318269626729503498657485681814883959168678074777600000000000000000000000000000000
 
-455569430460885818594956939150802554265876299776000000000000000000000000000000000
 
-73668400005848612189136041471082241647458295742464000000000000000000000000000000000
 
3129681297319464822122710803628689884118993862656000000000000000000000000000000000
 
-55343896994862003374661471301770914049311448760320000000000000000000000000000000000
 
-307883588476154739474239253552960227486451200163840000000000000000000000000000000000
 
49820288049794217737150226391213406992203833042534400000000000000000000000000000000
 
-112679570405140279128746172984841954909214944002048000000000000000000000000000000000
 
236848342340744036133562612029416584263106685829120000000000000000000000000000000000
 
-1609550381478581908520251270437611940404053986508800000000000000000000000000000000
 
71183326149140134952519868192677422264920047616000000000000000000000000000000000
 
-3029839136569569657516770279515121305517412266803200000000000000000000000000000000
 
-953807633468789279123111863963029298017217177190400000000000000000000000000000000
 
469452194597919723318406620544303482617849079398400000000000000000000000000000000
 
1877808778391678893273626482177213930471396317593600000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
151669486006117140569024589117470118548424622080000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (2 0 0 0 0 0 1 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 0 2 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
18003372848734214686180570405964493163698585600000000000000000000000000000000000000
 
-11112568495514491087801887008252412300759348019200000000000000000000000000000000000000
 
-2730050748110108530242442604114462133871643197440000000000000000000000000000000000000
 
1277797425158932643697508029460832565013669478400000000000000000000000000000000000000
 
-17084730656077496990953601688756398243220459356160000000000000000000000000000000000000
 
-5800215549838388506112389902685666095374165606400000000000000000000000000000000000000
 
-387353818948547087857353835140829798225202380800000000000000000000000000000000000000
 
-405075889096519830439062834134201096183218176000000000000000000000000000000000000000
 
-17973431525079831712470339147801240310187053547520000000000000000000000000000000000000
 
-9089880848970845165101504374503340275870969364480000000000000000000000000000000000000
 
4108717293847088753344074608458087502603039539200000000000000000000000000000000000000
 
1261666724575267657592523920172988485647802040320000000000000000000000000000000000000
 
114281001854495717061012339164718284768098123776000000000000000000000000000000000000
 
-63489445474719842811673521758176824871165624320000000000000000000000000000000000000
 
143415602944561600484591410815970538847866349158400000000000000000000000000000000000
 
-116710844829454130798249227034475669423661252608000000000000000000000000000000000000
 
-93329484847838168933160076984519932560613467750400000000000000000000000000000000000
 
221074118975841523213047152386155059741200374929817600000000000000000000000000000000
 
-63468080772433111689965466541331216161843898744832000000000000000000000000000000000
 
115837632420816763821069776236085245170678053103206400000000000000000000000000000000
 
90875285216478236571217024697738141162641210264780800000000000000000000000000000000
 
30051267750443743249317138879684597570289054777344000000000000000000000000000000000
 
-39657164863603533844287000857920950311898820116480000000000000000000000000000000000
 
-46664742423919084466580038492259966280306733875200000000000000000000000000000000000
 
15819235520754041983889828181778607510024136897331200000000000000000000000000000000
 
-5466833165530629823139483269809630651190515597312000000000000000000000000000000000
 
-884020800070183346269632497652986899769499548909568000000000000000000000000000000000
 
37556175567833577865472529643544278609427926351872000000000000000000000000000000000
 
-664126763938344040495937655621250968591737385123840000000000000000000000000000000000
 
-3694603061713856873690871042635522729837414401966080000000000000000000000000000000000
 
2721216260683170580812146964339142543584390705630412800000000000000000000000000000000
 
-1352154844861683349544954075818103458910579328024576000000000000000000000000000000000
 
2842180108088928433602751344352999011157280229949440000000000000000000000000000000000
 
-19314604577742982902243015245251343284848647838105600000000000000000000000000000000
 
854199913789681619430238418312129067179040571392000000000000000000000000000000000
 
-36358069638834835890201243354181455666208947201638400000000000000000000000000000000
 
-11445691601625471349477342367556351576206606126284800000000000000000000000000000000
 
5633426335175036679820879446531641791414188952780800000000000000000000000000000000
 
22533705340700146719283517786126567165656755811123200000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 0 2 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
18003372848734214686180570405964493163698585600000000000000000000000000000000000000
 
-11112568495514491087801887008252412300759348019200000000000000000000000000000000000000
 
-2730050748110108530242442604114462133871643197440000000000000000000000000000000000000
 
1277797425158932643697508029460832565013669478400000000000000000000000000000000000000
 
-17084730656077496990953601688756398243220459356160000000000000000000000000000000000000
 
-5800215549838388506112389902685666095374165606400000000000000000000000000000000000000
 
-387353818948547087857353835140829798225202380800000000000000000000000000000000000000
 
-405075889096519830439062834134201096183218176000000000000000000000000000000000000000
 
-17973431525079831712470339147801240310187053547520000000000000000000000000000000000000
 
-9089880848970845165101504374503340275870969364480000000000000000000000000000000000000
 
4108717293847088753344074608458087502603039539200000000000000000000000000000000000000
 
1261666724575267657592523920172988485647802040320000000000000000000000000000000000000
 
114281001854495717061012339164718284768098123776000000000000000000000000000000000000
 
-63489445474719842811673521758176824871165624320000000000000000000000000000000000000
 
143415602944561600484591410815970538847866349158400000000000000000000000000000000000
 
-116710844829454130798249227034475669423661252608000000000000000000000000000000000000
 
-93329484847838168933160076984519932560613467750400000000000000000000000000000000000
 
221074118975841523213047152386155059741200374929817600000000000000000000000000000000
 
-63468080772433111689965466541331216161843898744832000000000000000000000000000000000
 
115837632420816763821069776236085245170678053103206400000000000000000000000000000000
 
90875285216478236571217024697738141162641210264780800000000000000000000000000000000
 
30051267750443743249317138879684597570289054777344000000000000000000000000000000000
 
-39657164863603533844287000857920950311898820116480000000000000000000000000000000000
 
-46664742423919084466580038492259966280306733875200000000000000000000000000000000000
 
15819235520754041983889828181778607510024136897331200000000000000000000000000000000
 
-5466833165530629823139483269809630651190515597312000000000000000000000000000000000
 
-884020800070183346269632497652986899769499548909568000000000000000000000000000000000
 
37556175567833577865472529643544278609427926351872000000000000000000000000000000000
 
-664126763938344040495937655621250968591737385123840000000000000000000000000000000000
 
-3694603061713856873690871042635522729837414401966080000000000000000000000000000000000
 
2721216260683170580812146964339142543584390705630412800000000000000000000000000000000
 
-1352154844861683349544954075818103458910579328024576000000000000000000000000000000000
 
2842180108088928433602751344352999011157280229949440000000000000000000000000000000000
 
-19314604577742982902243015245251343284848647838105600000000000000000000000000000000
 
854199913789681619430238418312129067179040571392000000000000000000000000000000000
 
-36358069638834835890201243354181455666208947201638400000000000000000000000000000000
 
-11445691601625471349477342367556351576206606126284800000000000000000000000000000000
 
5633426335175036679820879446531641791414188952780800000000000000000000000000000000
 
22533705340700146719283517786126567165656755811123200000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-387353818948547087857353835140829798225202380800000000000000000000000000000000000000
Arg4: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (5512500 
-71820000 -135174375 -58471875 -17955000 1382400 -768000 -806400 -787968 437760 
1278848 -466944 -328320 182400 -403200 -262656 255360 43208640 -14554800 
22579200 17322496 -6096720 -43092000) 4)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 5512500
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
99243592828647358457570394362879268564888453120000000000000000000000000000000000000000000
 
-61258033831523632121507902132991422807935905955840000000000000000000000000000000000000000000
 
-15049404748956973272961464855180972512967433125888000000000000000000000000000000000000000000
 
7043858306188616198382513012402839514637852999680000000000000000000000000000000000000000000
 
-94179577741627202162631729309269645315752782200832000000000000000000000000000000000000000000
 
-31973688218484116639944549338554734350750087905280000000000000000000000000000000000000000000
 
-2232980838644565565295333873164783542709990195200000000000000000000000000000000000000000000
 
-126898292558887224164907896992068733318440167669760000000000000000000000000000000000000000000
 
-102468278560184793731809936683464368227206559694848000000000000000000000000000000000000000000
 
629974022722907640298830519645509544784140907315200000000000000000000000000000000000000000
 
-349985568179393133499350288691949747102300504064000000000000000000000000000000000000000000
 
1326056430546367316925316093821720708465383020953600000000000000000000000000000000000000000
 
-940856265074850059499796609415704412734888083456000000000000000000000000000000000000000000
 
-826840904823816277892215057034731277529184940851200000000000000000000000000000000000000000
 
913448666845077644987139040760430392375450797206405120000000000000000000000000000000000000
 
-180299787475121555010499419437838676621099897611878400000000000000000000000000000000000000
 
1133921605374463956775848378863599819804066382012743680000000000000000000000000000000000000
 
320077468120725907706369619450281873856590771084328960000000000000000000000000000000000000
 
38481607637134154776534316920824104752919968795852800000000000000000000000000000000000000
 
-147956784734399491491450752699601883398065331634176000000000000000000000000000000000000000
 
-413420452411908138946107528517365638764592470425600000000000000000000000000000000000000000
 
-14537268861592927472068451070695217583630701884866560000000000000000000000000000000000000
 
68778753381713387455197473816736708310099962730905600000000000000000000000000000000000000
 
11863867055186063945965424071907373767806042335766118400000000000000000000000000000000000000
 
207028417817682597983417319660037835834471444014694400000000000000000000000000000000000000
 
-9298856150242434677580069926319895511570127947563008000000000000000000000000000000000000000
 
-11620360028894601610072162908116494868142257294278656000000000000000000000000000000000000000
 
21710639616336908961947620520731206887945829105386127360000000000000000000000000000000000000
 
-9815341357360015465848245616727095164680124404806451200000000000000000000000000000000000000
 
-1024332920290573119713924678142730616115913725837312000000000000000000000000000000000000000
 
-106471757734808193248614621539448029857728171207557120000000000000000000000000000000000000
 
4708777024765619927109189280945611482824461149798400000000000000000000000000000000000000
 
-200423858884077032844734353989925274359976821449031680000000000000000000000000000000000000
 
-63094374953960410813993849801154388063838916271144960000000000000000000000000000000000000
 
31054262672652389697512597949005675375170716602204160000000000000000000000000000000000000
 
124217050690609558790050391796022701500682866408816640000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
99243592828647358457570394362879268564888453120000000000000000000000000000000000000000000
 
-61258033831523632121507902132991422807935905955840000000000000000000000000000000000000000000
 
-15049404748956973272961464855180972512967433125888000000000000000000000000000000000000000000
 
7043858306188616198382513012402839514637852999680000000000000000000000000000000000000000000
 
-94179577741627202162631729309269645315752782200832000000000000000000000000000000000000000000
 
-31973688218484116639944549338554734350750087905280000000000000000000000000000000000000000000
 
-2232980838644565565295333873164783542709990195200000000000000000000000000000000000000000000
 
-126898292558887224164907896992068733318440167669760000000000000000000000000000000000000000000
 
-102468278560184793731809936683464368227206559694848000000000000000000000000000000000000000000
 
629974022722907640298830519645509544784140907315200000000000000000000000000000000000000000
 
-349985568179393133499350288691949747102300504064000000000000000000000000000000000000000000
 
1326056430546367316925316093821720708465383020953600000000000000000000000000000000000000000
 
-940856265074850059499796609415704412734888083456000000000000000000000000000000000000000000
 
-826840904823816277892215057034731277529184940851200000000000000000000000000000000000000000
 
913448666845077644987139040760430392375450797206405120000000000000000000000000000000000000
 
-180299787475121555010499419437838676621099897611878400000000000000000000000000000000000000
 
1133921605374463956775848378863599819804066382012743680000000000000000000000000000000000000
 
320077468120725907706369619450281873856590771084328960000000000000000000000000000000000000
 
38481607637134154776534316920824104752919968795852800000000000000000000000000000000000000
 
-147956784734399491491450752699601883398065331634176000000000000000000000000000000000000000
 
-413420452411908138946107528517365638764592470425600000000000000000000000000000000000000000
 
-14537268861592927472068451070695217583630701884866560000000000000000000000000000000000000
 
68778753381713387455197473816736708310099962730905600000000000000000000000000000000000000
 
11863867055186063945965424071907373767806042335766118400000000000000000000000000000000000000
 
207028417817682597983417319660037835834471444014694400000000000000000000000000000000000000
 
-9298856150242434677580069926319895511570127947563008000000000000000000000000000000000000000
 
-11620360028894601610072162908116494868142257294278656000000000000000000000000000000000000000
 
21710639616336908961947620520731206887945829105386127360000000000000000000000000000000000000
 
-9815341357360015465848245616727095164680124404806451200000000000000000000000000000000000000
 
-1024332920290573119713924678142730616115913725837312000000000000000000000000000000000000000
 
-106471757734808193248614621539448029857728171207557120000000000000000000000000000000000000
 
4708777024765619927109189280945611482824461149798400000000000000000000000000000000000000
 
-200423858884077032844734353989925274359976821449031680000000000000000000000000000000000000
 
-63094374953960410813993849801154388063838916271144960000000000000000000000000000000000000
 
31054262672652389697512597949005675375170716602204160000000000000000000000000000000000000
 
124217050690609558790050391796022701500682866408816640000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-826840904823816277892215057034731277529184940851200000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1)
 (3 0 1 0 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (
47636924557750732059633789294182048911146457497600000000000000000000000000000000000000000000
 
-29403856239131343418323793023835882947809234858803200000000000000000000000000000000000000000000
 
-7223714279499347171021503130486866806224367900426240000000000000000000000000000000000000000000
 
3381051986970535775223606245953362967026169439846400000000000000000000000000000000000000000000
 
-45206197315981057038063230068449429751561335456399360000000000000000000000000000000000000000000
 
-15347370344872375987173383682506272488360042194534400000000000000000000000000000000000000000000
 
-1071830802549391471341760259119096100500795293696000000000000000000000000000000000000000000000
 
-60911180428265867599155790556192991992851280481484800000000000000000000000000000000000000000000
 
-49184773708888700991268769608062896749059148653527040000000000000000000000000000000000000000000
 
302387530906995667343438649429844581496387635511296000000000000000000000000000000000000000000
 
-167993072726108704079688138572135878609104241950720000000000000000000000000000000000000000000
 
636507086662256312124151725034425940063383850057728000000000000000000000000000000000000000000
 
-451611007235928028559902372519538118112746280058880000000000000000000000000000000000000000000
 
1510041172737303165742137453482018324018040066002229657600000000000000000000000000000000000000
 
627846643779718917693834087947845259007087838041735168000000000000000000000000000000000000000
 
3907871171403027317717938073871814750494676202748798566400000000000000000000000000000000000000
 
788650999602639337120278581138808920593577604694199500800000000000000000000000000000000000000
 
464965260270685184354532602920750460147161453081657344000000000000000000000000000000000000000
 
-586967981282573113320638556885481221209282762275553280000000000000000000000000000000000000000
 
-334870566453645592546347098099066167399319901044736000000000000000000000000000000000000000000
 
350217381830324026862844048125070207452465157542982451200000000000000000000000000000000000000
 
-314259378402780410736235536522553516573409693046669312000000000000000000000000000000000000000
 
5694656186489310694063403554515539408546900321167736832000000000000000000000000000000000000000
 
99373640552487647032040313436818161200546293127053312000000000000000000000000000000000000000
 
-5423413242616819343871295245850872858765045131158487040000000000000000000000000000000000000000
 
-1894196582879307254824820116806189695315764589761658880000000000000000000000000000000000000000
 
11552225373640696969891408047974491693873922969669782732800000000000000000000000000000000000000
 
-4711363851532807423607157896029005679046459714307096576000000000000000000000000000000000000000
 
-491679801739475097462683845508510695735638588401909760000000000000000000000000000000000000000
 
-51106443712707932759335018338935054331709522179627417600000000000000000000000000000000000000
 
-593065238501260222517382430210152626309257416060960768000000000000000000000000000000000000000
 
-2966995073812647092607243167939751127274118988930901606400000000000000000000000000000000000000
 
-30285299977900997190717047904554106270642679810149580800000000000000000000000000000000000000
 
14906046082873147054806047015522724180081943969057996800000000000000000000000000000000000000
 
59624184331492588219224188062090896720327775876231987200000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 1 0 1) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0
 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
47636924557750732059633789294182048911146457497600000000000000000000000000000000000000000000
 
-29403856239131343418323793023835882947809234858803200000000000000000000000000000000000000000000
 
-7223714279499347171021503130486866806224367900426240000000000000000000000000000000000000000000
 
3381051986970535775223606245953362967026169439846400000000000000000000000000000000000000000000
 
-45206197315981057038063230068449429751561335456399360000000000000000000000000000000000000000000
 
-15347370344872375987173383682506272488360042194534400000000000000000000000000000000000000000000
 
-1071830802549391471341760259119096100500795293696000000000000000000000000000000000000000000000
 
-60911180428265867599155790556192991992851280481484800000000000000000000000000000000000000000000
 
-49184773708888700991268769608062896749059148653527040000000000000000000000000000000000000000000
 
302387530906995667343438649429844581496387635511296000000000000000000000000000000000000000000
 
-167993072726108704079688138572135878609104241950720000000000000000000000000000000000000000000
 
636507086662256312124151725034425940063383850057728000000000000000000000000000000000000000000
 
-451611007235928028559902372519538118112746280058880000000000000000000000000000000000000000000
 
1510041172737303165742137453482018324018040066002229657600000000000000000000000000000000000000
 
627846643779718917693834087947845259007087838041735168000000000000000000000000000000000000000
 
3907871171403027317717938073871814750494676202748798566400000000000000000000000000000000000000
 
788650999602639337120278581138808920593577604694199500800000000000000000000000000000000000000
 
464965260270685184354532602920750460147161453081657344000000000000000000000000000000000000000
 
-586967981282573113320638556885481221209282762275553280000000000000000000000000000000000000000
 
-334870566453645592546347098099066167399319901044736000000000000000000000000000000000000000000
 
350217381830324026862844048125070207452465157542982451200000000000000000000000000000000000000
 
-314259378402780410736235536522553516573409693046669312000000000000000000000000000000000000000
 
5694656186489310694063403554515539408546900321167736832000000000000000000000000000000000000000
 
99373640552487647032040313436818161200546293127053312000000000000000000000000000000000000000
 
-5423413242616819343871295245850872858765045131158487040000000000000000000000000000000000000000
 
-1894196582879307254824820116806189695315764589761658880000000000000000000000000000000000000000
 
11552225373640696969891408047974491693873922969669782732800000000000000000000000000000000000000
 
-4711363851532807423607157896029005679046459714307096576000000000000000000000000000000000000000
 
-491679801739475097462683845508510695735638588401909760000000000000000000000000000000000000000
 
-51106443712707932759335018338935054331709522179627417600000000000000000000000000000000000000
 
-593065238501260222517382430210152626309257416060960768000000000000000000000000000000000000000
 
-2966995073812647092607243167939751127274118988930901606400000000000000000000000000000000000000
 
-30285299977900997190717047904554106270642679810149580800000000000000000000000000000000000000
 
14906046082873147054806047015522724180081943969057996800000000000000000000000000000000000000
 
59624184331492588219224188062090896720327775876231987200000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-29403856239131343418323793023835882947809234858803200000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
95273849115501464119267578588364097822292914995200000000000000000000000000000000000000000000
 
-14447428558998694342043006260973733612448735800852480000000000000000000000000000000000000000000
 
6762103973941071550447212491906725934052338879692800000000000000000000000000000000000000000000
 
-2200825914568083821155081065391210659694966336389120000000000000000000000000000000000000000000
 
-30694740689744751974346767365012544976720084389068800000000000000000000000000000000000000000000
 
-2143661605098782942683520518238192201001590587392000000000000000000000000000000000000000000000
 
-4206935900006361525016409017042452194465621527756800000000000000000000000000000000000000000000
 
-98369547417777401982537539216125793498118297307054080000000000000000000000000000000000000000000
 
604775061813991334686877298859689162992775271022592000000000000000000000000000000000000000000
 
-335986145452217408159376277144271757218208483901440000000000000000000000000000000000000000000
 
1273014173324512624248303450068851880126767700115456000000000000000000000000000000000000000000
 
-903222014471856057119804745039076236225492560117760000000000000000000000000000000000000000000
 
3020082345474606331484274906964036648036080132004459315200000000000000000000000000000000000000
 
1255693287559437835387668175895690518014175676083470336000000000000000000000000000000000000000
 
7815742342806054635435876147743629500989352405497597132800000000000000000000000000000000000000
 
1577301999205278674240557162277617841187155209388399001600000000000000000000000000000000000000
 
929930520541370368709065205841500920294322906163314688000000000000000000000000000000000000000
 
-1173935962565146226641277113770962442418565524551106560000000000000000000000000000000000000000
 
-669741132907291185092694196198132334798639802089472000000000000000000000000000000000000000000
 
700434763660648053725688096250140414904930315085964902400000000000000000000000000000000000000
 
-628518756805560821472471073045107033146819386093338624000000000000000000000000000000000000000
 
11389312372978621388126807109031078817093800642335473664000000000000000000000000000000000000000
 
198747281104975294064080626873636322401092586254106624000000000000000000000000000000000000000
 
-10846826485233638687742590491701745717530090262316974080000000000000000000000000000000000000000
 
-3788393165758614509649640233612379390631529179523317760000000000000000000000000000000000000000
 
23104450747281393939782816095948983387747845939339565465600000000000000000000000000000000000000
 
-9422727703065614847214315792058011358092919428614193152000000000000000000000000000000000000000
 
-983359603478950194925367691017021391471277176803819520000000000000000000000000000000000000000
 
-102212887425415865518670036677870108663419044359254835200000000000000000000000000000000000000
 
-1186130477002520445034764860420305252618514832121921536000000000000000000000000000000000000000
 
-5933990147625294185214486335879502254548237977861803212800000000000000000000000000000000000000
 
-60570599955801994381434095809108212541285359620299161600000000000000000000000000000000000000
 
29812092165746294109612094031045448360163887938115993600000000000000000000000000000000000000
 
119248368662985176438448376124181793440655551752463974400000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 0 2 0 1) (3 0 1 0 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
95273849115501464119267578588364097822292914995200000000000000000000000000000000000000000000
 
-14447428558998694342043006260973733612448735800852480000000000000000000000000000000000000000000
 
6762103973941071550447212491906725934052338879692800000000000000000000000000000000000000000000
 
-2200825914568083821155081065391210659694966336389120000000000000000000000000000000000000000000
 
-30694740689744751974346767365012544976720084389068800000000000000000000000000000000000000000000
 
-2143661605098782942683520518238192201001590587392000000000000000000000000000000000000000000000
 
-4206935900006361525016409017042452194465621527756800000000000000000000000000000000000000000000
 
-98369547417777401982537539216125793498118297307054080000000000000000000000000000000000000000000
 
604775061813991334686877298859689162992775271022592000000000000000000000000000000000000000000
 
-335986145452217408159376277144271757218208483901440000000000000000000000000000000000000000000
 
1273014173324512624248303450068851880126767700115456000000000000000000000000000000000000000000
 
-903222014471856057119804745039076236225492560117760000000000000000000000000000000000000000000
 
3020082345474606331484274906964036648036080132004459315200000000000000000000000000000000000000
 
1255693287559437835387668175895690518014175676083470336000000000000000000000000000000000000000
 
7815742342806054635435876147743629500989352405497597132800000000000000000000000000000000000000
 
1577301999205278674240557162277617841187155209388399001600000000000000000000000000000000000000
 
929930520541370368709065205841500920294322906163314688000000000000000000000000000000000000000
 
-1173935962565146226641277113770962442418565524551106560000000000000000000000000000000000000000
 
-669741132907291185092694196198132334798639802089472000000000000000000000000000000000000000000
 
700434763660648053725688096250140414904930315085964902400000000000000000000000000000000000000
 
-628518756805560821472471073045107033146819386093338624000000000000000000000000000000000000000
 
11389312372978621388126807109031078817093800642335473664000000000000000000000000000000000000000
 
198747281104975294064080626873636322401092586254106624000000000000000000000000000000000000000
 
-10846826485233638687742590491701745717530090262316974080000000000000000000000000000000000000000
 
-3788393165758614509649640233612379390631529179523317760000000000000000000000000000000000000000
 
23104450747281393939782816095948983387747845939339565465600000000000000000000000000000000000000
 
-9422727703065614847214315792058011358092919428614193152000000000000000000000000000000000000000
 
-983359603478950194925367691017021391471277176803819520000000000000000000000000000000000000000
 
-102212887425415865518670036677870108663419044359254835200000000000000000000000000000000000000
 
-1186130477002520445034764860420305252618514832121921536000000000000000000000000000000000000000
 
-5933990147625294185214486335879502254548237977861803212800000000000000000000000000000000000000
 
-60570599955801994381434095809108212541285359620299161600000000000000000000000000000000000000
 
29812092165746294109612094031045448360163887938115993600000000000000000000000000000000000000
 
119248368662985176438448376124181793440655551752463974400000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-14447428558998694342043006260973733612448735800852480000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
36585158060352562221798750177931813563760479358156800000000000000000000000000000000000000000000
 
2596647925993371475371729596892182758676098129802035200000000000000000000000000000000000000000000
 
-11702417132788942417054835071388724226083475998690508800000000000000000000000000000000000000000000
 
-18398742850377557812905803736193311232448081071209185280000000000000000000000000000000000000000000
 
-11786780424861984758149158668164817271060512405402419200000000000000000000000000000000000000000000
 
-823166056357932649990471879003465805184610785558528000000000000000000000000000000000000000000000
 
-25020297651180327659715971205321750094841750664039628800000000000000000000000000000000000000000000
 
-37773906208426522361294415058992304703277426165908766720000000000000000000000000000000000000000000
 
232233623736572672519760882762120638589225704072675328000000000000000000000000000000000000000000
 
-129018679853651484733200490423400354771792057818152960000000000000000000000000000000000000000000
 
488837442556612847711348524826439121968678796844335104000000000000000000000000000000000000000000
 
-346837253557192725934005022095005274710589143085219840000000000000000000000000000000000000000000
 
1159711620662248831289961564274190072845854770689712377036800000000000000000000000000000000000000
 
482186222422824128788864579543945158917443459616052609024000000000000000000000000000000000000000
 
3001245059637524980007376440733553728379911323711077298995200000000000000000000000000000000000000
 
605683967694827010908373950314605251015867600405145216614400000000000000000000000000000000000000
 
357093319887886221584281039043136353393019995966712840192000000000000000000000000000000000000000
 
-450791409625016151030250411688049577888729161427624919040000000000000000000000000000000000000000
 
-257180595036399815075594571340082816562677684002357248000000000000000000000000000000000000000000
 
268966949245688852630664228960053919323493240993010522521600000000000000000000000000000000000000
 
-241351202613335355445428892049321100728378644259842031616000000000000000000000000000000000000000
 
11654999944959132561430369085398696006438182290286471806976000000000000000000000000000000000000000
 
76318955944310512920606960719476347802019553121576943616000000000000000000000000000000000000000
 
-8210461366849351671865196501886115767017200684968412446720000000000000000000000000000000000000000
 
-8476193255324673421938362892540388221652592804151259299840000000000000000000000000000000000000000
 
8872109086956055272876601380844409620895172840706393138790400000000000000000000000000000000000000
 
-9281719433104684283411155718451979937587585494522022330368000000000000000000000000000000000000000
 
-14420510647082647775317143279017005285625141634321277255680000000000000000000000000000000000000000
 
-39249748771359692359169294084302121726752913033953856716800000000000000000000000000000000000000
 
-455474103168967850893349706401397217005509695534817869824000000000000000000000000000000000000000
 
-2278652216688112967122362752977728865746523383498932433715200000000000000000000000000000000000000
 
-23259110383027965842470692790697553615853578094194878054400000000000000000000000000000000000000
 
11447843391646576938091044107921452170302932968236541542400000000000000000000000000000000000000
 
45791373566586307752364176431685808681211731872946166169600000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
36585158060352562221798750177931813563760479358156800000000000000000000000000000000000000000000
 
2596647925993371475371729596892182758676098129802035200000000000000000000000000000000000000000000
 
-11702417132788942417054835071388724226083475998690508800000000000000000000000000000000000000000000
 
-18398742850377557812905803736193311232448081071209185280000000000000000000000000000000000000000000
 
-11786780424861984758149158668164817271060512405402419200000000000000000000000000000000000000000000
 
-823166056357932649990471879003465805184610785558528000000000000000000000000000000000000000000000
 
-25020297651180327659715971205321750094841750664039628800000000000000000000000000000000000000000000
 
-37773906208426522361294415058992304703277426165908766720000000000000000000000000000000000000000000
 
232233623736572672519760882762120638589225704072675328000000000000000000000000000000000000000000
 
-129018679853651484733200490423400354771792057818152960000000000000000000000000000000000000000000
 
488837442556612847711348524826439121968678796844335104000000000000000000000000000000000000000000
 
-346837253557192725934005022095005274710589143085219840000000000000000000000000000000000000000000
 
1159711620662248831289961564274190072845854770689712377036800000000000000000000000000000000000000
 
482186222422824128788864579543945158917443459616052609024000000000000000000000000000000000000000
 
3001245059637524980007376440733553728379911323711077298995200000000000000000000000000000000000000
 
605683967694827010908373950314605251015867600405145216614400000000000000000000000000000000000000
 
357093319887886221584281039043136353393019995966712840192000000000000000000000000000000000000000
 
-450791409625016151030250411688049577888729161427624919040000000000000000000000000000000000000000
 
-257180595036399815075594571340082816562677684002357248000000000000000000000000000000000000000000
 
268966949245688852630664228960053919323493240993010522521600000000000000000000000000000000000000
 
-241351202613335355445428892049321100728378644259842031616000000000000000000000000000000000000000
 
11654999944959132561430369085398696006438182290286471806976000000000000000000000000000000000000000
 
76318955944310512920606960719476347802019553121576943616000000000000000000000000000000000000000
 
-8210461366849351671865196501886115767017200684968412446720000000000000000000000000000000000000000
 
-8476193255324673421938362892540388221652592804151259299840000000000000000000000000000000000000000
 
8872109086956055272876601380844409620895172840706393138790400000000000000000000000000000000000000
 
-9281719433104684283411155718451979937587585494522022330368000000000000000000000000000000000000000
 
-14420510647082647775317143279017005285625141634321277255680000000000000000000000000000000000000000
 
-39249748771359692359169294084302121726752913033953856716800000000000000000000000000000000000000
 
-455474103168967850893349706401397217005509695534817869824000000000000000000000000000000000000000
 
-2278652216688112967122362752977728865746523383498932433715200000000000000000000000000000000000000
 
-23259110383027965842470692790697553615853578094194878054400000000000000000000000000000000000000
 
11447843391646576938091044107921452170302932968236541542400000000000000000000000000000000000000
 
45791373566586307752364176431685808681211731872946166169600000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-11786780424861984758149158668164817271060512405402419200000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
57621623945055285499333031530242606362922754989096960000000000000000000000000000000000000000000000
 
4089720483439560073710474115105187844914854554438205440000000000000000000000000000000000000000000000
 
-18431306984142584306861365237437240656081474697937551360000000000000000000000000000000000000000000000
 
-28978019989344653555326640884504465191105727687154466816000000000000000000000000000000000000000000000
 
4950447778442033598422646640629223253845415210269016064000000000000000000000000000000000000000000000
 
-1296486538763743923734993209430458643165761987254681600000000000000000000000000000000000000000000000
 
-59208759914377150457743241210898649414757418136938479616000000000000000000000000000000000000000000000
 
-59493902278271772719038703717912879907661946211306307584000000000000000000000000000000000000000000000
 
365767957385101959218623390350340005778030483914463641600000000000000000000000000000000000000000000
 
-203204420769501088454790772416855558765572491063590912000000000000000000000000000000000000000000000
 
769918972026665235145373926601641617100669105029827788800000000000000000000000000000000000000000000
 
-546268674352578543346057909799633307669177900359221248000000000000000000000000000000000000000000000
 
1826545802543041909281689463731849364732221263836296993832960000000000000000000000000000000000000000
 
759443300315948002842461712781713625294973448895282859212800000000000000000000000000000000000000000
 
4726960968929101843511617894155347122198360334844946745917440000000000000000000000000000000000000000
 
953952249119352542180688971745503270349991470638103716167680000000000000000000000000000000000000000
 
562421978823420798995242636492939756594006493647572723302400000000000000000000000000000000000000000
 
-709996470159400437872644398408678085174748429248509247488000000000000000000000000000000000000000000
 
-405059437182329708744061449860630436086217352303712665600000000000000000000000000000000000000000000
 
423622945061959942893296160612084922934501854563991572971520000000000000000000000000000000000000000
 
-380128144116003184826550504977680733647196364709251199795200000000000000000000000000000000000000000
 
28540403200391388615293704398797348332336419825468883284787200000000000000000000000000000000000000000
 
120202355612289057849955963133175247788180796166483686195200000000000000000000000000000000000000000
 
-18589131256721481567099280651189744623161137033418410819584000000000000000000000000000000000000000000
 
-19290541711266800957660097524506179353717331918861052674048000000000000000000000000000000000000000000
 
20008403389485123250953016412930331595692879575678607823994880000000000000000000000000000000000000000
 
-17588976774205097905426158240939402354007696280033594808729600000000000000000000000000000000000000000
 
-34593378937416050882338852601961919134088594578701650231296000000000000000000000000000000000000000000
 
-61818354314891515465691638182775841719635838028477324328960000000000000000000000000000000000000000
 
-717371712491124365157025787582200616783677770467338144972800000000000000000000000000000000000000000
 
-3588877241283777923217721335939922963550774329010818583101440000000000000000000000000000000000000000
 
-36633098853269046201891341145348646944969385498356932935680000000000000000000000000000000000000000
 
18030353341843358677493394469976287168227119424972552929280000000000000000000000000000000000000000
 
72121413367373434709973577879905148672908477699890211717120000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
57621623945055285499333031530242606362922754989096960000000000000000000000000000000000000000000000
 
4089720483439560073710474115105187844914854554438205440000000000000000000000000000000000000000000000
 
-18431306984142584306861365237437240656081474697937551360000000000000000000000000000000000000000000000
 
-28978019989344653555326640884504465191105727687154466816000000000000000000000000000000000000000000000
 
4950447778442033598422646640629223253845415210269016064000000000000000000000000000000000000000000000
 
-1296486538763743923734993209430458643165761987254681600000000000000000000000000000000000000000000000
 
-59208759914377150457743241210898649414757418136938479616000000000000000000000000000000000000000000000
 
-59493902278271772719038703717912879907661946211306307584000000000000000000000000000000000000000000000
 
365767957385101959218623390350340005778030483914463641600000000000000000000000000000000000000000000
 
-203204420769501088454790772416855558765572491063590912000000000000000000000000000000000000000000000
 
769918972026665235145373926601641617100669105029827788800000000000000000000000000000000000000000000
 
-546268674352578543346057909799633307669177900359221248000000000000000000000000000000000000000000000
 
1826545802543041909281689463731849364732221263836296993832960000000000000000000000000000000000000000
 
759443300315948002842461712781713625294973448895282859212800000000000000000000000000000000000000000
 
4726960968929101843511617894155347122198360334844946745917440000000000000000000000000000000000000000
 
953952249119352542180688971745503270349991470638103716167680000000000000000000000000000000000000000
 
562421978823420798995242636492939756594006493647572723302400000000000000000000000000000000000000000
 
-709996470159400437872644398408678085174748429248509247488000000000000000000000000000000000000000000
 
-405059437182329708744061449860630436086217352303712665600000000000000000000000000000000000000000000
 
423622945061959942893296160612084922934501854563991572971520000000000000000000000000000000000000000
 
-380128144116003184826550504977680733647196364709251199795200000000000000000000000000000000000000000
 
28540403200391388615293704398797348332336419825468883284787200000000000000000000000000000000000000000
 
120202355612289057849955963133175247788180796166483686195200000000000000000000000000000000000000000
 
-18589131256721481567099280651189744623161137033418410819584000000000000000000000000000000000000000000
 
-19290541711266800957660097524506179353717331918861052674048000000000000000000000000000000000000000000
 
20008403389485123250953016412930331595692879575678607823994880000000000000000000000000000000000000000
 
-17588976774205097905426158240939402354007696280033594808729600000000000000000000000000000000000000000
 
-34593378937416050882338852601961919134088594578701650231296000000000000000000000000000000000000000000
 
-61818354314891515465691638182775841719635838028477324328960000000000000000000000000000000000000000
 
-717371712491124365157025787582200616783677770467338144972800000000000000000000000000000000000000000
 
-3588877241283777923217721335939922963550774329010818583101440000000000000000000000000000000000000000
 
-36633098853269046201891341145348646944969385498356932935680000000000000000000000000000000000000000
 
18030353341843358677493394469976287168227119424972552929280000000000000000000000000000000000000000
 
72121413367373434709973577879905148672908477699890211717120000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
4950447778442033598422646640629223253845415210269016064000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1)
 (3 0 0 0 1 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)
 (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
12100541028461609954859936621350947336213778547710361600000000000000000000000000000000000000000000000
 
858841301522307615479199564172089447432119456432023142400000000000000000000000000000000000000000000000
 
-3870574466669942704440886699861820537777109686566885785600000000000000000000000000000000000000000000000
 
-6085384197762377246618594585745937690132202814302438031360000000000000000000000000000000000000000000000
 
-272262173140386223984348573980396315064810017323483136000000000000000000000000000000000000000000000000
 
-8275463448127893373451057476160168843868909032131107225600000000000000000000000000000000000000000000000
 
-4696764227390869353482459321770678155802479748200624291840000000000000000000000000000000000000000000000
 
76811271050871411435910911973571401213386401622037364736000000000000000000000000000000000000000000000
 
-42672928361595228575506062207539667340770223123354091520000000000000000000000000000000000000000000000
 
161682984125599699380528524586344739591140512056263835648000000000000000000000000000000000000000000000
 
-114716421614041494102672161057922994610527359075436462080000000000000000000000000000000000000000000000
 
383574618534038800949154787383688366593766465405622368704921600000000000000000000000000000000000000000
 
159483093066349080596916959684159861311944424268009400434688000000000000000000000000000000000000000000
 
992661803475111387137439757772622895661655670317438816642662400000000000000000000000000000000000000000
 
200329972315064033857944684066555686773498208834001780395212800000000000000000000000000000000000000000
 
118108615552918367789000953663517348884741363665990271893504000000000000000000000000000000000000000000
 
-149099258733474091953255323665822397886697170142186941972480000000000000000000000000000000000000000000
 
-85062481808289238836252904470732391578105643983779659776000000000000000000000000000000000000000000000
 
88960818463011588007592193728537833816245389458438230324019200000000000000000000000000000000000000000
 
-79826910264360668813575606045312954065911236588942751956992000000000000000000000000000000000000000000
 
3854891231795233094693094574995618704129428792512250550157312000000000000000000000000000000000000000000
 
25242494678580702148490752257966802035517967194961574100992000000000000000000000000000000000000000000
 
-2715610097085423065469413742998832789940939126553302416752640000000000000000000000000000000000000000000
 
-2803500919198635734306113526707733404311595069973029013422080000000000000000000000000000000000000000000
 
2934450080510715281503935906714288482111078417063639530654924800000000000000000000000000000000000000000
 
-3069928702499374326738239753877992364357093902313158885769216000000000000000000000000000000000000000000
 
-4769583896522585751686145139534874498220515595551762452316160000000000000000000000000000000000000000000
 
-12981854406127218247795244018382926761123525985980238109081600000000000000000000000000000000000000000
 
-150648059623136116682975415392262129524572331798141010444288000000000000000000000000000000000000000000
 
-753664220669593363875721480547383822345662609092271902451302400000000000000000000000000000000000000000
 
-7692950759186499702397181640523215858443570954654955916492800000000000000000000000000000000000000000
 
3786374201787105322273612838695020305327695079244236115148800000000000000000000000000000000000000000
 
15145496807148421289094451354780081221310780316976944460595200000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 1 1) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1
 0 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0
 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
12100541028461609954859936621350947336213778547710361600000000000000000000000000000000000000000000000
 
858841301522307615479199564172089447432119456432023142400000000000000000000000000000000000000000000000
 
-3870574466669942704440886699861820537777109686566885785600000000000000000000000000000000000000000000000
 
-6085384197762377246618594585745937690132202814302438031360000000000000000000000000000000000000000000000
 
-272262173140386223984348573980396315064810017323483136000000000000000000000000000000000000000000000000
 
-8275463448127893373451057476160168843868909032131107225600000000000000000000000000000000000000000000000
 
-4696764227390869353482459321770678155802479748200624291840000000000000000000000000000000000000000000000
 
76811271050871411435910911973571401213386401622037364736000000000000000000000000000000000000000000000
 
-42672928361595228575506062207539667340770223123354091520000000000000000000000000000000000000000000000
 
161682984125599699380528524586344739591140512056263835648000000000000000000000000000000000000000000000
 
-114716421614041494102672161057922994610527359075436462080000000000000000000000000000000000000000000000
 
383574618534038800949154787383688366593766465405622368704921600000000000000000000000000000000000000000
 
159483093066349080596916959684159861311944424268009400434688000000000000000000000000000000000000000000
 
992661803475111387137439757772622895661655670317438816642662400000000000000000000000000000000000000000
 
200329972315064033857944684066555686773498208834001780395212800000000000000000000000000000000000000000
 
118108615552918367789000953663517348884741363665990271893504000000000000000000000000000000000000000000
 
-149099258733474091953255323665822397886697170142186941972480000000000000000000000000000000000000000000
 
-85062481808289238836252904470732391578105643983779659776000000000000000000000000000000000000000000000
 
88960818463011588007592193728537833816245389458438230324019200000000000000000000000000000000000000000
 
-79826910264360668813575606045312954065911236588942751956992000000000000000000000000000000000000000000
 
3854891231795233094693094574995618704129428792512250550157312000000000000000000000000000000000000000000
 
25242494678580702148490752257966802035517967194961574100992000000000000000000000000000000000000000000
 
-2715610097085423065469413742998832789940939126553302416752640000000000000000000000000000000000000000000
 
-2803500919198635734306113526707733404311595069973029013422080000000000000000000000000000000000000000000
 
2934450080510715281503935906714288482111078417063639530654924800000000000000000000000000000000000000000
 
-3069928702499374326738239753877992364357093902313158885769216000000000000000000000000000000000000000000
 
-4769583896522585751686145139534874498220515595551762452316160000000000000000000000000000000000000000000
 
-12981854406127218247795244018382926761123525985980238109081600000000000000000000000000000000000000000
 
-150648059623136116682975415392262129524572331798141010444288000000000000000000000000000000000000000000
 
-753664220669593363875721480547383822345662609092271902451302400000000000000000000000000000000000000000
 
-7692950759186499702397181640523215858443570954654955916492800000000000000000000000000000000000000000
 
3786374201787105322273612838695020305327695079244236115148800000000000000000000000000000000000000000
 
15145496807148421289094451354780081221310780316976944460595200000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
858841301522307615479199564172089447432119456432023142400000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1)
 (3 0 0 0 0 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)
 (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
48402164113846439819439746485403789344855114190841446400000000000000000000000000000000000000000000000
 
-15482297866679770817763546799447282151108438746267543142400000000000000000000000000000000000000000000000
 
-24341536791049508986474378342983750760528811257209752125440000000000000000000000000000000000000000000000
 
-7729571713700768539312796077548805026889075107888208281600000000000000000000000000000000000000000000000
 
-1089048692561544895937394295921585260259240069293932544000000000000000000000000000000000000000000000000
 
-33101853792511573493804229904640675375475636128524428902400000000000000000000000000000000000000000000000
 
-18787056909563477413929837287082712623209918992802497167360000000000000000000000000000000000000000000000
 
307245084203485645743643647894285604853545606488149458944000000000000000000000000000000000000000000000
 
-170691713446380914302024248830158669363080892493416366080000000000000000000000000000000000000000000000
 
646731936502398797522114098345378958364562048225055342592000000000000000000000000000000000000000000000
 
-458865686456165976410688644231691978442109436301745848320000000000000000000000000000000000000000000000
 
1534298474136155203796619149534753466375065861622489474819686400000000000000000000000000000000000000000
 
637932372265396322387667838736639445247777697072037601738752000000000000000000000000000000000000000000
 
3970647213900445548549759031090491582646622681269755266570649600000000000000000000000000000000000000000
 
801319889260256135431778736266222747093992835336007121580851200000000000000000000000000000000000000000
 
472434462211673471156003814654069395538965454663961087574016000000000000000000000000000000000000000000
 
-596397034933896367813021294663289591546788680568747767889920000000000000000000000000000000000000000000
 
-340249927233156955345011617882929566312422575935118639104000000000000000000000000000000000000000000000
 
355843273852046352030368774914151335264981557833752921296076800000000000000000000000000000000000000000
 
-319307641057442675254302424181251816263644946355771007827968000000000000000000000000000000000000000000
 
15419564927180932378772378299982474816517715170049002200629248000000000000000000000000000000000000000000
 
100969978714322808593963009031867208142071868779846296403968000000000000000000000000000000000000000000
 
-10862440388341692261877654971995331159763756506213209667010560000000000000000000000000000000000000000000
 
-11214003676794542937224454106830933617246380279892116053688320000000000000000000000000000000000000000000
 
11737800322042861126015743626857153928444313668254558122619699200000000000000000000000000000000000000000
 
-12279714809997497306952959015511969457428375609252635543076864000000000000000000000000000000000000000000
 
-19078335586090343006744580558139497992882062382207049809264640000000000000000000000000000000000000000000
 
-51927417624508872991180976073531707044494103943920952436326400000000000000000000000000000000000000000
 
-602592238492544466731901661569048518098289327192564041777152000000000000000000000000000000000000000000
 
-3014656882678373455502885922189535289382650436369087609805209600000000000000000000000000000000000000000
 
-30771803036745998809588726562092863433774283818619823665971200000000000000000000000000000000000000000
 
15145496807148421289094451354780081221310780316976944460595200000000000000000000000000000000000000000
 
60581987228593685156377805419120324885243121267907777842380800000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 1 0 0 0 1 1) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0
 1 0 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0
 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
48402164113846439819439746485403789344855114190841446400000000000000000000000000000000000000000000000
 
-15482297866679770817763546799447282151108438746267543142400000000000000000000000000000000000000000000000
 
-24341536791049508986474378342983750760528811257209752125440000000000000000000000000000000000000000000000
 
-7729571713700768539312796077548805026889075107888208281600000000000000000000000000000000000000000000000
 
-1089048692561544895937394295921585260259240069293932544000000000000000000000000000000000000000000000000
 
-33101853792511573493804229904640675375475636128524428902400000000000000000000000000000000000000000000000
 
-18787056909563477413929837287082712623209918992802497167360000000000000000000000000000000000000000000000
 
307245084203485645743643647894285604853545606488149458944000000000000000000000000000000000000000000000
 
-170691713446380914302024248830158669363080892493416366080000000000000000000000000000000000000000000000
 
646731936502398797522114098345378958364562048225055342592000000000000000000000000000000000000000000000
 
-458865686456165976410688644231691978442109436301745848320000000000000000000000000000000000000000000000
 
1534298474136155203796619149534753466375065861622489474819686400000000000000000000000000000000000000000
 
637932372265396322387667838736639445247777697072037601738752000000000000000000000000000000000000000000
 
3970647213900445548549759031090491582646622681269755266570649600000000000000000000000000000000000000000
 
801319889260256135431778736266222747093992835336007121580851200000000000000000000000000000000000000000
 
472434462211673471156003814654069395538965454663961087574016000000000000000000000000000000000000000000
 
-596397034933896367813021294663289591546788680568747767889920000000000000000000000000000000000000000000
 
-340249927233156955345011617882929566312422575935118639104000000000000000000000000000000000000000000000
 
355843273852046352030368774914151335264981557833752921296076800000000000000000000000000000000000000000
 
-319307641057442675254302424181251816263644946355771007827968000000000000000000000000000000000000000000
 
15419564927180932378772378299982474816517715170049002200629248000000000000000000000000000000000000000000
 
100969978714322808593963009031867208142071868779846296403968000000000000000000000000000000000000000000
 
-10862440388341692261877654971995331159763756506213209667010560000000000000000000000000000000000000000000
 
-11214003676794542937224454106830933617246380279892116053688320000000000000000000000000000000000000000000
 
11737800322042861126015743626857153928444313668254558122619699200000000000000000000000000000000000000000
 
-12279714809997497306952959015511969457428375609252635543076864000000000000000000000000000000000000000000
 
-19078335586090343006744580558139497992882062382207049809264640000000000000000000000000000000000000000000
 
-51927417624508872991180976073531707044494103943920952436326400000000000000000000000000000000000000000
 
-602592238492544466731901661569048518098289327192564041777152000000000000000000000000000000000000000000
 
-3014656882678373455502885922189535289382650436369087609805209600000000000000000000000000000000000000000
 
-30771803036745998809588726562092863433774283818619823665971200000000000000000000000000000000000000000
 
15145496807148421289094451354780081221310780316976944460595200000000000000000000000000000000000000000
 
60581987228593685156377805419120324885243121267907777842380800000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-15482297866679770817763546799447282151108438746267543142400000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (
3484955816196943666999661746949072832829568221740584140800000000000000000000000000000000000000000000000
 
-452077628154463898334017309541258354064965555832628529070080000000000000000000000000000000000000000000000
 
1069112112614920601034651096358450663930372660590141033676800000000000000000000000000000000000000000000000
 
-78411505864431232507492389306354138738665284989163143168000000000000000000000000000000000000000000000000
 
-2383333473060833291553904553134128627034245801253758880972800000000000000000000000000000000000000000000000
 
-1352668097488570373802948284669955308871114167481779796049920000000000000000000000000000000000000000000000
 
22121646062650966493542342648388563549455283667146761043968000000000000000000000000000000000000000000000
 
-12289803368139425829745745915771424194141824259525978357760000000000000000000000000000000000000000000000
 
46564699428172713421592215080867285002248467472203984666624000000000000000000000000000000000000000000000
 
-33038329424843950301569582384681822447831879413725701079040000000000000000000000000000000000000000000000
 
110469490137803174673356578766502249579004742036819242187017420800000000000000000000000000000000000000000
 
45931130803108535211912084389038040057839994189186707325190144000000000000000000000000000000000000000000
 
285886599400832079495582650238515393950556833051422379193086771200000000000000000000000000000000000000000
 
57695032026738441751088069011168037790767484144192512753821286400000000000000000000000000000000000000000
 
34015281279240489923232274655092996478805512735805198305329152000000000000000000000000000000000000000000
 
-42940586515240538482537533215756850591368785000949839288074240000000000000000000000000000000000000000000
 
-24497994760787300784840836487570928774494425467328542015488000000000000000000000000000000000000000000000
 
25620715717347337346186551793818896139078672164030210333317529600000000000000000000000000000000000000000
 
-22990150156135872618309774541050130770982436137615512563613696000000000000000000000000000000000000000000
 
1110208674757027131271611237598738186789275492243528158445305856000000000000000000000000000000000000000000
 
7269838467431242218765336650294438986229174552148933341085696000000000000000000000000000000000000000000
 
-782095707960601842855191157983663843502990468447351096024760320000000000000000000000000000000000000000000
 
-807408264729207091480160695691827220441739380152232355865559040000000000000000000000000000000000000000000
 
845121623187086001073133541133715082847990584114328184828618342400000000000000000000000000000000000000000
 
106727597147685526236253946047764256736097035894933002012065792000000000000000000000000000000000000000000
 
-1373640162198504696485609800186043855487508491518907586267054080000000000000000000000000000000000000000000
 
-3738774068964638855365030277294282907203575483962308575415500800000000000000000000000000000000000000000
 
-43386641171463201604696919632971493303076831557864611007954944000000000000000000000000000000000000000000
 
-217055295552842888796207786397646540835550831418574307905975091200000000000000000000000000000000000000000
 
-2215569818645711914290388312470686167231748434940627303949926400000000000000000000000000000000000000000
 
1090475770114686332814800497544165847934376182822340001162854400000000000000000000000000000000000000000
 
4361903080458745331259201990176663391737504731289360004651417600000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 0 1 1) (3 0 0 0 0 1 0 1 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (
3484955816196943666999661746949072832829568221740584140800000000000000000000000000000000000000000000000
 
-452077628154463898334017309541258354064965555832628529070080000000000000000000000000000000000000000000000
 
1069112112614920601034651096358450663930372660590141033676800000000000000000000000000000000000000000000000
 
-78411505864431232507492389306354138738665284989163143168000000000000000000000000000000000000000000000000
 
-2383333473060833291553904553134128627034245801253758880972800000000000000000000000000000000000000000000000
 
-1352668097488570373802948284669955308871114167481779796049920000000000000000000000000000000000000000000000
 
22121646062650966493542342648388563549455283667146761043968000000000000000000000000000000000000000000000
 
-12289803368139425829745745915771424194141824259525978357760000000000000000000000000000000000000000000000
 
46564699428172713421592215080867285002248467472203984666624000000000000000000000000000000000000000000000
 
-33038329424843950301569582384681822447831879413725701079040000000000000000000000000000000000000000000000
 
110469490137803174673356578766502249579004742036819242187017420800000000000000000000000000000000000000000
 
45931130803108535211912084389038040057839994189186707325190144000000000000000000000000000000000000000000
 
285886599400832079495582650238515393950556833051422379193086771200000000000000000000000000000000000000000
 
57695032026738441751088069011168037790767484144192512753821286400000000000000000000000000000000000000000
 
34015281279240489923232274655092996478805512735805198305329152000000000000000000000000000000000000000000
 
-42940586515240538482537533215756850591368785000949839288074240000000000000000000000000000000000000000000
 
-24497994760787300784840836487570928774494425467328542015488000000000000000000000000000000000000000000000
 
25620715717347337346186551793818896139078672164030210333317529600000000000000000000000000000000000000000
 
-22990150156135872618309774541050130770982436137615512563613696000000000000000000000000000000000000000000
 
1110208674757027131271611237598738186789275492243528158445305856000000000000000000000000000000000000000000
 
7269838467431242218765336650294438986229174552148933341085696000000000000000000000000000000000000000000
 
-782095707960601842855191157983663843502990468447351096024760320000000000000000000000000000000000000000000
 
-807408264729207091480160695691827220441739380152232355865559040000000000000000000000000000000000000000000
 
845121623187086001073133541133715082847990584114328184828618342400000000000000000000000000000000000000000
 
106727597147685526236253946047764256736097035894933002012065792000000000000000000000000000000000000000000
 
-1373640162198504696485609800186043855487508491518907586267054080000000000000000000000000000000000000000000
 
-3738774068964638855365030277294282907203575483962308575415500800000000000000000000000000000000000000000
 
-43386641171463201604696919632971493303076831557864611007954944000000000000000000000000000000000000000000
 
-217055295552842888796207786397646540835550831418574307905975091200000000000000000000000000000000000000000
 
-2215569818645711914290388312470686167231748434940627303949926400000000000000000000000000000000000000000
 
1090475770114686332814800497544165847934376182822340001162854400000000000000000000000000000000000000000
 
4361903080458745331259201990176663391737504731289360004651417600000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-452077628154463898334017309541258354064965555832628529070080000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (2 0 0 0 0 0 0 1 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (
41819469794363324003995940963388873993954818660887009689600000000000000000000000000000000000000000000000
 
19610509773696005687426072799420283278138955264571120340172800000000000000000000000000000000000000000000000
 
8137397306780350170012311571742650373169380004987313523261440000000000000000000000000000000000000000000000
 
-940938070373174790089908671676249664863983419869957718016000000000000000000000000000000000000000000000000
 
-28600001676729999498646854637609543524410949615045106571673600000000000000000000000000000000000000000000000
 
-16232017169862844485635379416039463706453370009781357552599040000000000000000000000000000000000000000000000
 
265459752751811597922508111780662762593463404005761132527616000000000000000000000000000000000000000000000
 
-147477640417673109956948950989257090329701891114311740293120000000000000000000000000000000000000000000000
 
558776393138072561059106580970407420026981609666447815999488000000000000000000000000000000000000000000000
 
-396459953098127403618834988616181869373982552964708412948480000000000000000000000000000000000000000000000
 
1325633881653638096080278945198026994948056904441830906244209049600000000000000000000000000000000000000000
 
551173569637302422542945012668456480694079930270240487902281728000000000000000000000000000000000000000000
 
3430639192809984953946991802862184727406681996617068550317041254400000000000000000000000000000000000000000
 
692340384320861301013056828134016453489209809730310153045855436800000000000000000000000000000000000000000
 
408183375350885879078787295861115957745666152829662379663949824000000000000000000000000000000000000000000
 
-515287038182886461790450398589082207096425420011398071456890880000000000000000000000000000000000000000000
 
-293975937129447609418090037850851145293933105607942504185856000000000000000000000000000000000000000000000
 
307448588608168048154238621525826753668944065968362523999810355200000000000000000000000000000000000000000
 
-275881801873630471419717294492601569251789233651386150763364352000000000000000000000000000000000000000000
 
13322504097084325575259334851184858241471305906922337901343670272000000000000000000000000000000000000000000
 
87238061609174906625184039803533267834750094625787200093028352000000000000000000000000000000000000000000
 
-9385148495527222114262293895803966122035885621368213152297123840000000000000000000000000000000000000000000
 
-9688899176750485097761928348301926645300872561826788270386708480000000000000000000000000000000000000000000
 
10141459478245032012877602493604580994175887009371938217943420108800000000000000000000000000000000000000000
 
-5048355628390268261841194981004445876076353350917603382836330496000000000000000000000000000000000000000000
 
-16483681946382056357827317602232526265850101898226891035204648960000000000000000000000000000000000000000000
 
-44865288827575666264380363327531394886442905807547702904986009600000000000000000000000000000000000000000
 
-520639694057558419256363035595657919636921978694375332095459328000000000000000000000000000000000000000000
 
-2604663546634114665554493436771758490026609977022891694871701094400000000000000000000000000000000000000000
 
-26586837823748542971484659749648234006780981219287527647399116800000000000000000000000000000000000000000
 
13085709241376235993777605970529990175212514193868080013954252800000000000000000000000000000000000000000
 
52342836965504943975110423882119960700850056775472320055817011200000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (
41819469794363324003995940963388873993954818660887009689600000000000000000000000000000000000000000000000
 
19610509773696005687426072799420283278138955264571120340172800000000000000000000000000000000000000000000000
 
8137397306780350170012311571742650373169380004987313523261440000000000000000000000000000000000000000000000
 
-940938070373174790089908671676249664863983419869957718016000000000000000000000000000000000000000000000000
 
-28600001676729999498646854637609543524410949615045106571673600000000000000000000000000000000000000000000000
 
-16232017169862844485635379416039463706453370009781357552599040000000000000000000000000000000000000000000000
 
265459752751811597922508111780662762593463404005761132527616000000000000000000000000000000000000000000000
 
-147477640417673109956948950989257090329701891114311740293120000000000000000000000000000000000000000000000
 
558776393138072561059106580970407420026981609666447815999488000000000000000000000000000000000000000000000
 
-396459953098127403618834988616181869373982552964708412948480000000000000000000000000000000000000000000000
 
1325633881653638096080278945198026994948056904441830906244209049600000000000000000000000000000000000000000
 
551173569637302422542945012668456480694079930270240487902281728000000000000000000000000000000000000000000
 
3430639192809984953946991802862184727406681996617068550317041254400000000000000000000000000000000000000000
 
692340384320861301013056828134016453489209809730310153045855436800000000000000000000000000000000000000000
 
408183375350885879078787295861115957745666152829662379663949824000000000000000000000000000000000000000000
 
-515287038182886461790450398589082207096425420011398071456890880000000000000000000000000000000000000000000
 
-293975937129447609418090037850851145293933105607942504185856000000000000000000000000000000000000000000000
 
307448588608168048154238621525826753668944065968362523999810355200000000000000000000000000000000000000000
 
-275881801873630471419717294492601569251789233651386150763364352000000000000000000000000000000000000000000
 
13322504097084325575259334851184858241471305906922337901343670272000000000000000000000000000000000000000000
 
87238061609174906625184039803533267834750094625787200093028352000000000000000000000000000000000000000000
 
-9385148495527222114262293895803966122035885621368213152297123840000000000000000000000000000000000000000000
 
-9688899176750485097761928348301926645300872561826788270386708480000000000000000000000000000000000000000000
 
10141459478245032012877602493604580994175887009371938217943420108800000000000000000000000000000000000000000
 
-5048355628390268261841194981004445876076353350917603382836330496000000000000000000000000000000000000000000
 
-16483681946382056357827317602232526265850101898226891035204648960000000000000000000000000000000000000000000
 
-44865288827575666264380363327531394886442905807547702904986009600000000000000000000000000000000000000000
 
-520639694057558419256363035595657919636921978694375332095459328000000000000000000000000000000000000000000
 
-2604663546634114665554493436771758490026609977022891694871701094400000000000000000000000000000000000000000
 
-26586837823748542971484659749648234006780981219287527647399116800000000000000000000000000000000000000000
 
13085709241376235993777605970529990175212514193868080013954252800000000000000000000000000000000000000000
 
52342836965504943975110423882119960700850056775472320055817011200000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
3430639192809984953946991802862184727406681996617068550317041254400000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (
83638939588726648007991881926777747987909637321774019379200000000000000000000000000000000000000000000000
 
39221019547392011374852145598840566556277910529142240680345600000000000000000000000000000000000000000000000
 
16274794613560700340024623143485300746338760009974627046522880000000000000000000000000000000000000000000000
 
-1881876140746349580179817343352499329727966839739915436032000000000000000000000000000000000000000000000000
 
-57200003353459998997293709275219087048821899230090213143347200000000000000000000000000000000000000000000000
 
-32464034339725688971270758832078927412906740019562715105198080000000000000000000000000000000000000000000000
 
530919505503623195845016223561325525186926808011522265055232000000000000000000000000000000000000000000000
 
-294955280835346219913897901978514180659403782228623480586240000000000000000000000000000000000000000000000
 
1117552786276145122118213161940814840053963219332895631998976000000000000000000000000000000000000000000000
 
-792919906196254807237669977232363738747965105929416825896960000000000000000000000000000000000000000000000
 
2651267763307276192160557890396053989896113808883661812488418099200000000000000000000000000000000000000000
 
1102347139274604845085890025336912961388159860540480975804563456000000000000000000000000000000000000000000
 
1384680768641722602026113656268032906978419619460620306091710873600000000000000000000000000000000000000000
 
816366750701771758157574591722231915491332305659324759327899648000000000000000000000000000000000000000000
 
-11322491654795727785421876205764718596412896829874001793864905523200000000000000000000000000000000000000000
 
-587951874258895218836180075701702290587866211215885008371712000000000000000000000000000000000000000000000
 
614897177216336096308477243051653507337888131936725047999620710400000000000000000000000000000000000000000
 
-551763603747260942839434588985203138503578467302772301526728704000000000000000000000000000000000000000000
 
26645008194168651150518669702369716482942611813844675802687340544000000000000000000000000000000000000000000
 
-13548080648021590002537599131841672373957227797216699801082108313600000000000000000000000000000000000000000
 
-18770296991054444228524587791607932244071771242736426304594247680000000000000000000000000000000000000000000
 
-19377798353500970195523856696603853290601745123653576540773416960000000000000000000000000000000000000000000
 
20282918956490064025755204987209161988351774018743876435886840217600000000000000000000000000000000000000000
 
-10096711256780536523682389962008891752152706701835206765672660992000000000000000000000000000000000000000000
 
-32967363892764112715654635204465052531700203796453782070409297920000000000000000000000000000000000000000000
 
-89730577655151332528760726655062789772885811615095405809972019200000000000000000000000000000000000000000
 
-1041279388115116838512726071191315839273843957388750664190918656000000000000000000000000000000000000000000
 
-5209327093268229331108986873543516980053219954045783389743402188800000000000000000000000000000000000000000
 
-53173675647497085942969319499296468013561962438575055294798233600000000000000000000000000000000000000000
 
26171418482752471987555211941059980350425028387736160027908505600000000000000000000000000000000000000000
 
104685673931009887950220847764239921401700113550944640111634022400000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
83638939588726648007991881926777747987909637321774019379200000000000000000000000000000000000000000000000
 
39221019547392011374852145598840566556277910529142240680345600000000000000000000000000000000000000000000000
 
16274794613560700340024623143485300746338760009974627046522880000000000000000000000000000000000000000000000
 
-1881876140746349580179817343352499329727966839739915436032000000000000000000000000000000000000000000000000
 
-57200003353459998997293709275219087048821899230090213143347200000000000000000000000000000000000000000000000
 
-32464034339725688971270758832078927412906740019562715105198080000000000000000000000000000000000000000000000
 
530919505503623195845016223561325525186926808011522265055232000000000000000000000000000000000000000000000
 
-294955280835346219913897901978514180659403782228623480586240000000000000000000000000000000000000000000000
 
1117552786276145122118213161940814840053963219332895631998976000000000000000000000000000000000000000000000
 
-792919906196254807237669977232363738747965105929416825896960000000000000000000000000000000000000000000000
 
2651267763307276192160557890396053989896113808883661812488418099200000000000000000000000000000000000000000
 
1102347139274604845085890025336912961388159860540480975804563456000000000000000000000000000000000000000000
 
1384680768641722602026113656268032906978419619460620306091710873600000000000000000000000000000000000000000
 
816366750701771758157574591722231915491332305659324759327899648000000000000000000000000000000000000000000
 
-11322491654795727785421876205764718596412896829874001793864905523200000000000000000000000000000000000000000
 
-587951874258895218836180075701702290587866211215885008371712000000000000000000000000000000000000000000000
 
614897177216336096308477243051653507337888131936725047999620710400000000000000000000000000000000000000000
 
-551763603747260942839434588985203138503578467302772301526728704000000000000000000000000000000000000000000
 
26645008194168651150518669702369716482942611813844675802687340544000000000000000000000000000000000000000000
 
-13548080648021590002537599131841672373957227797216699801082108313600000000000000000000000000000000000000000
 
-18770296991054444228524587791607932244071771242736426304594247680000000000000000000000000000000000000000000
 
-19377798353500970195523856696603853290601745123653576540773416960000000000000000000000000000000000000000000
 
20282918956490064025755204987209161988351774018743876435886840217600000000000000000000000000000000000000000
 
-10096711256780536523682389962008891752152706701835206765672660992000000000000000000000000000000000000000000
 
-32967363892764112715654635204465052531700203796453782070409297920000000000000000000000000000000000000000000
 
-89730577655151332528760726655062789772885811615095405809972019200000000000000000000000000000000000000000
 
-1041279388115116838512726071191315839273843957388750664190918656000000000000000000000000000000000000000000
 
-5209327093268229331108986873543516980053219954045783389743402188800000000000000000000000000000000000000000
 
-53173675647497085942969319499296468013561962438575055294798233600000000000000000000000000000000000000000
 
26171418482752471987555211941059980350425028387736160027908505600000000000000000000000000000000000000000
 
104685673931009887950220847764239921401700113550944640111634022400000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
1384680768641722602026113656268032906978419619460620306091710873600000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1)
 (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (
32117352802071032835068882659882655227357300731561223441612800000000000000000000000000000000000000000000000
 
15060871506198532367943223909954777557610717643190620421252710400000000000000000000000000000000000000000000000
 
6249521131607308930569455287098355486594083843830256785864785920000000000000000000000000000000000000000000000
 
-722640438046598238789049859847359742615539266460127527436288000000000000000000000000000000000000000000000000
 
-21964801287728639614960784361684129426747609304354641847045324800000000000000000000000000000000000000000000000
 
-12466189186454664564967971391518308126556188167512082600396062720000000000000000000000000000000000000000000000
 
203873090113391307204486229847549001671779894276424549781209088000000000000000000000000000000000000000000000
 
-113262827840772948446936794359749445373211052375791416545116160000000000000000000000000000000000000000000000
 
429140269930039726893393854185272898580721876223831922687606784000000000000000000000000000000000000000000000
 
-304481243979361845979265271257227675679218600676896061144432640000000000000000000000000000000000000000000000
 
1018086821109994057789654229912084732120107702611326135995552550092800000000000000000000000000000000000000000
 
423301301481448260512981769729374577173053386447544694708952367104000000000000000000000000000000000000000000
 
313484832269480355132508643221337055548671605373180707581913464832000000000000000000000000000000000000000000
 
1121591422599795307641152061577106654652519891763102447934285807616000000000000000000000000000000000000000000
 
-2665449661541866508140272370647991959043772545026963016942695009484800000000000000000000000000000000000000000
 
-225773519715415764033093149069453679585740625106899843214737408000000000000000000000000000000000000000000000
 
236120516051073060982455261331834946817749042663702418431854352793600000000000000000000000000000000000000000
 
-211877223838948202050342882170318005185374131444264563786263822336000000000000000000000000000000000000000000
 
10231683146560762041799169165709971129449962936516355508231938768896000000000000000000000000000000000000000000
 
-2959280123640699945692133943472988882294535690605007827746957977190400000000000000000000000000000000000000000
 
-7207794044564906583753441711977445981723560157210787700964191109120000000000000000000000000000000000000000000
 
-7441074567744372555081160971495879663591070127482973391656992112640000000000000000000000000000000000000000000
 
7788640879292184585889998715088318203527081223197648551380546643558400000000000000000000000000000000000000000
 
-3877137122603726025094037745411414432826639373504719398018301820928000000000000000000000000000000000000000000
 
-12659467734821419282811379918514580172172878257838252315037170401280000000000000000000000000000000000000000000
 
-732335649215006303112205401794632696389911639868349270101251535667200000000000000000000000000000000000000000
 
-12140669816522537421574987582416068327198586188306569343633719296000000000000000000000000000000000000000000
 
-1327426750255122878561159722494446527548924527295719352900894955929600000000000000000000000000000000000000000
 
-20418691448638881002100218687729843717207793576412821233202521702400000000000000000000000000000000000000000
 
552844686004932209237457754642435931990103701729453845438667528601600000000000000000000000000000000000000000
 
1386109005909262166142267279433996115401276713719285679324010433740800000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 1 1) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0
 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (
32117352802071032835068882659882655227357300731561223441612800000000000000000000000000000000000000000000000
 
15060871506198532367943223909954777557610717643190620421252710400000000000000000000000000000000000000000000000
 
6249521131607308930569455287098355486594083843830256785864785920000000000000000000000000000000000000000000000
 
-722640438046598238789049859847359742615539266460127527436288000000000000000000000000000000000000000000000000
 
-21964801287728639614960784361684129426747609304354641847045324800000000000000000000000000000000000000000000000
 
-12466189186454664564967971391518308126556188167512082600396062720000000000000000000000000000000000000000000000
 
203873090113391307204486229847549001671779894276424549781209088000000000000000000000000000000000000000000000
 
-113262827840772948446936794359749445373211052375791416545116160000000000000000000000000000000000000000000000
 
429140269930039726893393854185272898580721876223831922687606784000000000000000000000000000000000000000000000
 
-304481243979361845979265271257227675679218600676896061144432640000000000000000000000000000000000000000000000
 
1018086821109994057789654229912084732120107702611326135995552550092800000000000000000000000000000000000000000
 
423301301481448260512981769729374577173053386447544694708952367104000000000000000000000000000000000000000000
 
313484832269480355132508643221337055548671605373180707581913464832000000000000000000000000000000000000000000
 
1121591422599795307641152061577106654652519891763102447934285807616000000000000000000000000000000000000000000
 
-2665449661541866508140272370647991959043772545026963016942695009484800000000000000000000000000000000000000000
 
-225773519715415764033093149069453679585740625106899843214737408000000000000000000000000000000000000000000000
 
236120516051073060982455261331834946817749042663702418431854352793600000000000000000000000000000000000000000
 
-211877223838948202050342882170318005185374131444264563786263822336000000000000000000000000000000000000000000
 
10231683146560762041799169165709971129449962936516355508231938768896000000000000000000000000000000000000000000
 
-2959280123640699945692133943472988882294535690605007827746957977190400000000000000000000000000000000000000000
 
-7207794044564906583753441711977445981723560157210787700964191109120000000000000000000000000000000000000000000
 
-7441074567744372555081160971495879663591070127482973391656992112640000000000000000000000000000000000000000000
 
7788640879292184585889998715088318203527081223197648551380546643558400000000000000000000000000000000000000000
 
-3877137122603726025094037745411414432826639373504719398018301820928000000000000000000000000000000000000000000
 
-12659467734821419282811379918514580172172878257838252315037170401280000000000000000000000000000000000000000000
 
-732335649215006303112205401794632696389911639868349270101251535667200000000000000000000000000000000000000000
 
-12140669816522537421574987582416068327198586188306569343633719296000000000000000000000000000000000000000000
 
-1327426750255122878561159722494446527548924527295719352900894955929600000000000000000000000000000000000000000
 
-20418691448638881002100218687729843717207793576412821233202521702400000000000000000000000000000000000000000
 
552844686004932209237457754642435931990103701729453845438667528601600000000000000000000000000000000000000000
 
1386109005909262166142267279433996115401276713719285679324010433740800000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
15060871506198532367943223909954777557610717643190620421252710400000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2)
 (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0
 0 0 1)) (
50584830663261876715233490189315181983087748652208926920540160000000000000000000000000000000000000000000000000
 
3517429749678127971110738034998903317189180643892593860810899456000000000000000000000000000000000000000000000000
 
-1138158689923392226092753529259591594619474344674700855712153600000000000000000000000000000000000000000000000000
 
-9292297897759073015418619200928477550341479013798318601391833088000000000000000000000000000000000000000000000000
 
-19634247968666096689824554941641335299325996363831530095623798784000000000000000000000000000000000000000000000000
 
321100116928591308847065812009889677633053333485368665905404313600000000000000000000000000000000000000000000000
 
-178388953849217393803925451116605376462807407491871481058557952000000000000000000000000000000000000000000000000
 
675895925139812569857095320341804815264636955052535278232980684800000000000000000000000000000000000000000000000
 
-479557959267494907417342802230133589194769296066111296302481408000000000000000000000000000000000000000000000000
 
1603486743248240641018705412111533453089169631612838664192995266396160000000000000000000000000000000000000000000
 
666699549833281010307946287323764959047559083654882894166599978188800000000000000000000000000000000000000000000
 
493738610824431559333701113073605862489157778462759614441513707110400000000000000000000000000000000000000000000
 
1766506490594677609534814496983942981077718829526886355496500146995200000000000000000000000000000000000000000000
 
-4198083216928439750320928983770587335493941758417466751684744639938560000000000000000000000000000000000000000000
 
-355593293551779828352121709784389545347541484543367253063211417600000000000000000000000000000000000000000000000
 
371889812780440071047367036597640041237954742195331309030170605649920000000000000000000000000000000000000000000
 
-333706627546343418229290039418250858166964257024716687963365520179200000000000000000000000000000000000000000000
 
3102307974477668249930745977792276719108031581296563881502961775411200000000000000000000000000000000000000000000
 
-4660866194734102414465110960969957489613893712702887328701458814074880000000000000000000000000000000000000000000
 
-4123057297214432332798923219586184193561462778875492826817300004864000000000000000000000000000000000000000000000
 
-4129013205073326460809443679488802581120133758617610399548396535808000000000000000000000000000000000000000000000
 
4555943173711542150389817334367255061058465493222698812742973238804480000000000000000000000000000000000000000000
 
-2311151348538838332801417023714373787184056167185896705723142347161600000000000000000000000000000000000000000000
 
-4757303204095614743541153670426047993100679871759102011560811298816000000000000000000000000000000000000000000000
 
-1153428647513634927401723507826546496814110832792650100409471168675840000000000000000000000000000000000000000000
 
-19121554961022996438980605442305307615337773246582846716223107891200000000000000000000000000000000000000000000
 
-2090697131651818533733826562928753280889556130490757980818909555589120000000000000000000000000000000000000000000
 
-32159439031606237578307844433174503854602274882850193442293971681280000000000000000000000000000000000000000000
 
870730380457768229548995963561836592884413330223889806565901357547520000000000000000000000000000000000000000000
 
2183121684307087911674070965108543881757010824107874944935316433141760000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 0 1 1 1) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0
 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
50584830663261876715233490189315181983087748652208926920540160000000000000000000000000000000000000000000000000
 
3517429749678127971110738034998903317189180643892593860810899456000000000000000000000000000000000000000000000000
 
-1138158689923392226092753529259591594619474344674700855712153600000000000000000000000000000000000000000000000000
 
-9292297897759073015418619200928477550341479013798318601391833088000000000000000000000000000000000000000000000000
 
-19634247968666096689824554941641335299325996363831530095623798784000000000000000000000000000000000000000000000000
 
321100116928591308847065812009889677633053333485368665905404313600000000000000000000000000000000000000000000000
 
-178388953849217393803925451116605376462807407491871481058557952000000000000000000000000000000000000000000000000
 
675895925139812569857095320341804815264636955052535278232980684800000000000000000000000000000000000000000000000
 
-479557959267494907417342802230133589194769296066111296302481408000000000000000000000000000000000000000000000000
 
1603486743248240641018705412111533453089169631612838664192995266396160000000000000000000000000000000000000000000
 
666699549833281010307946287323764959047559083654882894166599978188800000000000000000000000000000000000000000000
 
493738610824431559333701113073605862489157778462759614441513707110400000000000000000000000000000000000000000000
 
1766506490594677609534814496983942981077718829526886355496500146995200000000000000000000000000000000000000000000
 
-4198083216928439750320928983770587335493941758417466751684744639938560000000000000000000000000000000000000000000
 
-355593293551779828352121709784389545347541484543367253063211417600000000000000000000000000000000000000000000000
 
371889812780440071047367036597640041237954742195331309030170605649920000000000000000000000000000000000000000000
 
-333706627546343418229290039418250858166964257024716687963365520179200000000000000000000000000000000000000000000
 
3102307974477668249930745977792276719108031581296563881502961775411200000000000000000000000000000000000000000000
 
-4660866194734102414465110960969957489613893712702887328701458814074880000000000000000000000000000000000000000000
 
-4123057297214432332798923219586184193561462778875492826817300004864000000000000000000000000000000000000000000000
 
-4129013205073326460809443679488802581120133758617610399548396535808000000000000000000000000000000000000000000000
 
4555943173711542150389817334367255061058465493222698812742973238804480000000000000000000000000000000000000000000
 
-2311151348538838332801417023714373787184056167185896705723142347161600000000000000000000000000000000000000000000
 
-4757303204095614743541153670426047993100679871759102011560811298816000000000000000000000000000000000000000000000
 
-1153428647513634927401723507826546496814110832792650100409471168675840000000000000000000000000000000000000000000
 
-19121554961022996438980605442305307615337773246582846716223107891200000000000000000000000000000000000000000000
 
-2090697131651818533733826562928753280889556130490757980818909555589120000000000000000000000000000000000000000000
 
-32159439031606237578307844433174503854602274882850193442293971681280000000000000000000000000000000000000000000
 
870730380457768229548995963561836592884413330223889806565901357547520000000000000000000000000000000000000000000
 
2183121684307087911674070965108543881757010824107874944935316433141760000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
3517429749678127971110738034998903317189180643892593860810899456000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2)
 (3 0 0 0 1 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #
2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
10622814439284994110199032939756188216448427216963874653313433600000000000000000000000000000000000000000000000000
 
-239013324883912367479478241144514234870089612381687179699552256000000000000000000000000000000000000000000000000000
 
1003258431200222162495109917204098500867201147972131936788870594560000000000000000000000000000000000000000000000000
 
1416759782323171249636255867378592311714500277726214010696168898560000000000000000000000000000000000000000000000000
 
67431024555004174857883820522076832302941200031927419840134905856000000000000000000000000000000000000000000000000
 
-37461680308335652698824344734487129057189555573293011022297169920000000000000000000000000000000000000000000000000
 
141938144279360639669990017271779011205573760561032408428925943808000000000000000000000000000000000000000000000000
 
-100707171446173930557641988468328053730901552173883372223521095680000000000000000000000000000000000000000000000000
 
336732216082130534613928136543422025148725622638696119480529005943193600000000000000000000000000000000000000000000
 
140006905464989012164668720337990641399987407567525407774985995419648000000000000000000000000000000000000000000000
 
103685108273130627460077233745457231122723133477179519032717878493184000000000000000000000000000000000000000000000
 
370966363024882298002311044366628026026320954200646134654265030868992000000000000000000000000000000000000000000000
 
-881597475554972347567395086591823340453727769267668017853796374387097600000000000000000000000000000000000000000000
 
-74674591645873763953945559054721804522983711754107123143274397696000000000000000000000000000000000000000000000000
 
78096860683892414919947077685504408659970495861019574896335827186483200000000000000000000000000000000000000000000
 
-70078391784732117828150908277832680215062493975190504472306759237632000000000000000000000000000000000000000000000
 
-868044977220640951034382175783148122013039406089322132754686592155648000000000000000000000000000000000000000000000
 
-978781900894161507037673301803691072818917679667606339027306350955724800000000000000000000000000000000000000000000
 
-21658892492280076821196747713361884522503829029630967037017131581440000000000000000000000000000000000000000000000
 
19299523853489691949922812127075093896445432951235469019183390392320000000000000000000000000000000000000000000000
 
56286050561823090977512703257404313621847508740262722308434119412940800000000000000000000000000000000000000000000
 
-42145634733711925528344582570156677342815033978571481739686561447936000000000000000000000000000000000000000000000
 
773750920977697401296169698849977193312204271452455883420922953072640000000000000000000000000000000000000000000000
 
-242220015977863334754361936643574764330963274886456521085988945421926400000000000000000000000000000000000000000000
 
-4015526541814829252185927142884114599220932381782397810406852657152000000000000000000000000000000000000000000000
 
-439046397646881892084103578215038188986806787403059175971971006673715200000000000000000000000000000000000000000000
 
-6753482196637309891444647330966645809466477725398540622881734053068800000000000000000000000000000000000000000000
 
182853379896131328205289152347985684505726799347016859378839285084979200000000000000000000000000000000000000000000
 
458455553704488461451554902672794215168972273062653738436416450959769600000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 1 0 0 0 0 0 2) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1
 0 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0
 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
10622814439284994110199032939756188216448427216963874653313433600000000000000000000000000000000000000000000000000
 
-239013324883912367479478241144514234870089612381687179699552256000000000000000000000000000000000000000000000000000
 
1003258431200222162495109917204098500867201147972131936788870594560000000000000000000000000000000000000000000000000
 
1416759782323171249636255867378592311714500277726214010696168898560000000000000000000000000000000000000000000000000
 
67431024555004174857883820522076832302941200031927419840134905856000000000000000000000000000000000000000000000000
 
-37461680308335652698824344734487129057189555573293011022297169920000000000000000000000000000000000000000000000000
 
141938144279360639669990017271779011205573760561032408428925943808000000000000000000000000000000000000000000000000
 
-100707171446173930557641988468328053730901552173883372223521095680000000000000000000000000000000000000000000000000
 
336732216082130534613928136543422025148725622638696119480529005943193600000000000000000000000000000000000000000000
 
140006905464989012164668720337990641399987407567525407774985995419648000000000000000000000000000000000000000000000
 
103685108273130627460077233745457231122723133477179519032717878493184000000000000000000000000000000000000000000000
 
370966363024882298002311044366628026026320954200646134654265030868992000000000000000000000000000000000000000000000
 
-881597475554972347567395086591823340453727769267668017853796374387097600000000000000000000000000000000000000000000
 
-74674591645873763953945559054721804522983711754107123143274397696000000000000000000000000000000000000000000000000
 
78096860683892414919947077685504408659970495861019574896335827186483200000000000000000000000000000000000000000000
 
-70078391784732117828150908277832680215062493975190504472306759237632000000000000000000000000000000000000000000000
 
-868044977220640951034382175783148122013039406089322132754686592155648000000000000000000000000000000000000000000000
 
-978781900894161507037673301803691072818917679667606339027306350955724800000000000000000000000000000000000000000000
 
-21658892492280076821196747713361884522503829029630967037017131581440000000000000000000000000000000000000000000000
 
19299523853489691949922812127075093896445432951235469019183390392320000000000000000000000000000000000000000000000
 
56286050561823090977512703257404313621847508740262722308434119412940800000000000000000000000000000000000000000000
 
-42145634733711925528344582570156677342815033978571481739686561447936000000000000000000000000000000000000000000000
 
773750920977697401296169698849977193312204271452455883420922953072640000000000000000000000000000000000000000000000
 
-242220015977863334754361936643574764330963274886456521085988945421926400000000000000000000000000000000000000000000
 
-4015526541814829252185927142884114599220932381782397810406852657152000000000000000000000000000000000000000000000
 
-439046397646881892084103578215038188986806787403059175971971006673715200000000000000000000000000000000000000000000
 
-6753482196637309891444647330966645809466477725398540622881734053068800000000000000000000000000000000000000000000
 
182853379896131328205289152347985684505726799347016859378839285084979200000000000000000000000000000000000000000000
 
458455553704488461451554902672794215168972273062653738436416450959769600000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-239013324883912367479478241144514234870089612381687179699552256000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 1 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #
2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
42491257757139976440796131759024752865793708867855498613253734400000000000000000000000000000000000000000000000000
 
4013033724800888649980439668816394003468804591888527747155482378240000000000000000000000000000000000000000000000000
 
5667039129292684998545023469514369246858001110904856042784675594240000000000000000000000000000000000000000000000000
 
2151119923955211307315304170300628113830806511435184617295970304000000000000000000000000000000000000000000000000000
 
269724098220016699431535282088307329211764800127709679360539623424000000000000000000000000000000000000000000000000
 
-149846721233342610795297378937948516228758222293172044089188679680000000000000000000000000000000000000000000000000
 
567752577117442558679960069087116044822295042244129633715703775232000000000000000000000000000000000000000000000000
 
-402828685784695722230567953873312214923606208695533488894084382720000000000000000000000000000000000000000000000000
 
1346928864328522138455712546173688100594902490554784477922116023772774400000000000000000000000000000000000000000000
 
560027621859956048658674881351962565599949630270101631099943981678592000000000000000000000000000000000000000000000
 
414740433092522509840308934981828924490892533908718076130871513972736000000000000000000000000000000000000000000000
 
1483865452099529192009244177466512104105283816802584538617060123475968000000000000000000000000000000000000000000000
 
-3526389902219889390269580346367293361814911077070672071415185497548390400000000000000000000000000000000000000000000
 
-298698366583495055815782236218887218091934847016428492573097590784000000000000000000000000000000000000000000000000
 
312387442735569659679788310742017634639881983444078299585343308745932800000000000000000000000000000000000000000000
 
-280313567138928471312603633111330720860249975900762017889227036950528000000000000000000000000000000000000000000000
 
-3472179908882563804137528703132592488052157624357288531018746368622592000000000000000000000000000000000000000000000
 
-3915127603576646028150693207214764291275670718670425356109225403822899200000000000000000000000000000000000000000000
 
-86635569969120307284786990853447538090015316118523868148068526325760000000000000000000000000000000000000000000000
 
77198095413958767799691248508300375585781731804941876076733561569280000000000000000000000000000000000000000000000
 
225144202247292363910050813029617254487390034961050889233736477651763200000000000000000000000000000000000000000000
 
-168582538934847702113378330280626709371260135914285926958746245791744000000000000000000000000000000000000000000000
 
3095003683910789605184678795399908773248817085809823533683691812290560000000000000000000000000000000000000000000000
 
-968880063911453339017447746574299057323853099545826084343955781687705600000000000000000000000000000000000000000000
 
-16062106167259317008743708571536458396883729527129591241627410628608000000000000000000000000000000000000000000000
 
-1756185590587527568336414312860152755947227149612236703887884026694860800000000000000000000000000000000000000000000
 
-27013928786549239565778589323866583237865910901594162491526936212275200000000000000000000000000000000000000000000
 
731413519584525312821156609391942738022907197388067437515357140339916800000000000000000000000000000000000000000000
 
1833822214817953845806219610691176860675889092250614953745665803839078400000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0
 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
42491257757139976440796131759024752865793708867855498613253734400000000000000000000000000000000000000000000000000
 
4013033724800888649980439668816394003468804591888527747155482378240000000000000000000000000000000000000000000000000
 
5667039129292684998545023469514369246858001110904856042784675594240000000000000000000000000000000000000000000000000
 
2151119923955211307315304170300628113830806511435184617295970304000000000000000000000000000000000000000000000000000
 
269724098220016699431535282088307329211764800127709679360539623424000000000000000000000000000000000000000000000000
 
-149846721233342610795297378937948516228758222293172044089188679680000000000000000000000000000000000000000000000000
 
567752577117442558679960069087116044822295042244129633715703775232000000000000000000000000000000000000000000000000
 
-402828685784695722230567953873312214923606208695533488894084382720000000000000000000000000000000000000000000000000
 
1346928864328522138455712546173688100594902490554784477922116023772774400000000000000000000000000000000000000000000
 
560027621859956048658674881351962565599949630270101631099943981678592000000000000000000000000000000000000000000000
 
414740433092522509840308934981828924490892533908718076130871513972736000000000000000000000000000000000000000000000
 
1483865452099529192009244177466512104105283816802584538617060123475968000000000000000000000000000000000000000000000
 
-3526389902219889390269580346367293361814911077070672071415185497548390400000000000000000000000000000000000000000000
 
-298698366583495055815782236218887218091934847016428492573097590784000000000000000000000000000000000000000000000000
 
312387442735569659679788310742017634639881983444078299585343308745932800000000000000000000000000000000000000000000
 
-280313567138928471312603633111330720860249975900762017889227036950528000000000000000000000000000000000000000000000
 
-3472179908882563804137528703132592488052157624357288531018746368622592000000000000000000000000000000000000000000000
 
-3915127603576646028150693207214764291275670718670425356109225403822899200000000000000000000000000000000000000000000
 
-86635569969120307284786990853447538090015316118523868148068526325760000000000000000000000000000000000000000000000
 
77198095413958767799691248508300375585781731804941876076733561569280000000000000000000000000000000000000000000000
 
225144202247292363910050813029617254487390034961050889233736477651763200000000000000000000000000000000000000000000
 
-168582538934847702113378330280626709371260135914285926958746245791744000000000000000000000000000000000000000000000
 
3095003683910789605184678795399908773248817085809823533683691812290560000000000000000000000000000000000000000000000
 
-968880063911453339017447746574299057323853099545826084343955781687705600000000000000000000000000000000000000000000
 
-16062106167259317008743708571536458396883729527129591241627410628608000000000000000000000000000000000000000000000
 
-1756185590587527568336414312860152755947227149612236703887884026694860800000000000000000000000000000000000000000000
 
-27013928786549239565778589323866583237865910901594162491526936212275200000000000000000000000000000000000000000000
 
731413519584525312821156609391942738022907197388067437515357140339916800000000000000000000000000000000000000000000
 
1833822214817953845806219610691176860675889092250614953745665803839078400000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
4013033724800888649980439668816394003468804591888527747155482378240000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
3059370558514078303737321486649782206337147038485595900154268876800000000000000000000000000000000000000000000000000
 
70931984425798673296884757624457489482396494266513304319436123013120000000000000000000000000000000000000000000000000
 
-266487906579318094121244264964076146168406413324962121006015787827200000000000000000000000000000000000000000000000000
 
19420135071841202359070540310358127703247065609195096913958852886528000000000000000000000000000000000000000000000000
 
-10788963928800667977261411283532293168470592005108387174421584936960000000000000000000000000000000000000000000000000
 
40878185552455864224957124974272355227205243041577333627530671816704000000000000000000000000000000000000000000000000
 
-29003665376498092000600892678878479474499647026078411200374075555840000000000000000000000000000000000000000000000000
 
96978878231653593968811303324505543242832979319944482410392353711639756800000000000000000000000000000000000000000000
 
40321988773916835503424591457341304723196373379447317439195966680858624000000000000000000000000000000000000000000000
 
29861311182661620708502243318691682563344262441427701481422749006036992000000000000000000000000000000000000000000000
 
106838312551166101824665580777588871495580434809786086780428328890269696000000000000000000000000000000000000000000000
 
-253900072959832036099409784938445122050673597549088389141893355823484108800000000000000000000000000000000000000000000
 
-21506282394011644018736321007759879702619308985182851465263026536448000000000000000000000000000000000000000000000000
 
22491895876961015496944758373425269694071502807973637570144718229707161600000000000000000000000000000000000000000000
 
-20182576834002849934507461584015811901937998264854865288024346660438016000000000000000000000000000000000000000000000
 
-249996953439544593897902066625546659139755348953724774233349738540826624000000000000000000000000000000000000000000000
 
-281889187457518514026849910919463028971848291744270625639864229075248742400000000000000000000000000000000000000000000
 
-6237761037776662124504663341448222742481102760533718506660933895454720000000000000000000000000000000000000000000000
 
5558262869805031281577769892597627042176284689955815077524816432988160000000000000000000000000000000000000000000000
 
16210382561805050201523658538132442323092082517195664024829026390926950400000000000000000000000000000000000000000000
 
-12137942803309034552163239780205123074730729785828586741029729697005568000000000000000000000000000000000000000000000
 
-33993893145680022025451265535455784548088663702558481392725061722439680000000000000000000000000000000000000000000000
 
-69759364601624640409256237753349532127317423167299478072764816281514803200000000000000000000000000000000000000000000
 
-1156471644042670824629547017150625004575628525953330569397173565259776000000000000000000000000000000000000000000000
 
-126445362522301984920221830525930998428200354772081042679927649922029977600000000000000000000000000000000000000000000
 
-1945002872631545248736058431318393993126345584914779699389939407283814400000000000000000000000000000000000000000000
 
52661773410085822523123275876219877137649318211940855501105714104474009600000000000000000000000000000000000000000000
 
132035199466892676898047811969764733968664014642044276669687937876413644800000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0
 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0
 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
3059370558514078303737321486649782206337147038485595900154268876800000000000000000000000000000000000000000000000000
 
70931984425798673296884757624457489482396494266513304319436123013120000000000000000000000000000000000000000000000000
 
-266487906579318094121244264964076146168406413324962121006015787827200000000000000000000000000000000000000000000000000
 
19420135071841202359070540310358127703247065609195096913958852886528000000000000000000000000000000000000000000000000
 
-10788963928800667977261411283532293168470592005108387174421584936960000000000000000000000000000000000000000000000000
 
40878185552455864224957124974272355227205243041577333627530671816704000000000000000000000000000000000000000000000000
 
-29003665376498092000600892678878479474499647026078411200374075555840000000000000000000000000000000000000000000000000
 
96978878231653593968811303324505543242832979319944482410392353711639756800000000000000000000000000000000000000000000
 
40321988773916835503424591457341304723196373379447317439195966680858624000000000000000000000000000000000000000000000
 
29861311182661620708502243318691682563344262441427701481422749006036992000000000000000000000000000000000000000000000
 
106838312551166101824665580777588871495580434809786086780428328890269696000000000000000000000000000000000000000000000
 
-253900072959832036099409784938445122050673597549088389141893355823484108800000000000000000000000000000000000000000000
 
-21506282394011644018736321007759879702619308985182851465263026536448000000000000000000000000000000000000000000000000
 
22491895876961015496944758373425269694071502807973637570144718229707161600000000000000000000000000000000000000000000
 
-20182576834002849934507461584015811901937998264854865288024346660438016000000000000000000000000000000000000000000000
 
-249996953439544593897902066625546659139755348953724774233349738540826624000000000000000000000000000000000000000000000
 
-281889187457518514026849910919463028971848291744270625639864229075248742400000000000000000000000000000000000000000000
 
-6237761037776662124504663341448222742481102760533718506660933895454720000000000000000000000000000000000000000000000
 
5558262869805031281577769892597627042176284689955815077524816432988160000000000000000000000000000000000000000000000
 
16210382561805050201523658538132442323092082517195664024829026390926950400000000000000000000000000000000000000000000
 
-12137942803309034552163239780205123074730729785828586741029729697005568000000000000000000000000000000000000000000000
 
-33993893145680022025451265535455784548088663702558481392725061722439680000000000000000000000000000000000000000000000
 
-69759364601624640409256237753349532127317423167299478072764816281514803200000000000000000000000000000000000000000000
 
-1156471644042670824629547017150625004575628525953330569397173565259776000000000000000000000000000000000000000000000
 
-126445362522301984920221830525930998428200354772081042679927649922029977600000000000000000000000000000000000000000000
 
-1945002872631545248736058431318393993126345584914779699389939407283814400000000000000000000000000000000000000000000
 
52661773410085822523123275876219877137649318211940855501105714104474009600000000000000000000000000000000000000000000
 
132035199466892676898047811969764733968664014642044276669687937876413644800000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
70931984425798673296884757624457489482396494266513304319436123013120000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
36712446702168939644847857839797386476045764461827150801851226521600000000000000000000000000000000000000000000000000
 
-4261834645338797228908202543935776096256824373897245016863731299123200000000000000000000000000000000000000000000000000
 
-1276775719664376119343925637240234810683136896797239477749850214236160000000000000000000000000000000000000000000000000
 
233041620862094428308846483724297532438964787310341162967506234638336000000000000000000000000000000000000000000000000
 
-129467567145608015727136935402387518021647104061300646093059019243520000000000000000000000000000000000000000000000000
 
490538226629470370699485499691268262726462916498928003530368061800448000000000000000000000000000000000000000000000000
 
-348043984517977104007210712146541753693995764312940934404488906670080000000000000000000000000000000000000000000000000
 
1163746538779843127625735639894066518913995751839333788924708244539677081600000000000000000000000000000000000000000000
 
483863865287002026041095097488095656678356480553367809270351600170303488000000000000000000000000000000000000000000000
 
358335734191939448502026919824300190760131149297132417777072988072443904000000000000000000000000000000000000000000000
 
1282059750613993221895986969331066457946965217717433041365139946683236352000000000000000000000000000000000000000000000
 
-3046800875517984433192917419261341464608083170589060669702720269881809305600000000000000000000000000000000000000000000
 
-258075388728139728224835852093118556431431707822194217583156318437376000000000000000000000000000000000000000000000000
 
269902750523532185963337100481103236328858033695683650841736618756485939200000000000000000000000000000000000000000000
 
-242190922008034199214089539008189742823255979178258383456292159925256192000000000000000000000000000000000000000000000
 
-2999963441274535126774824799506559909677064187444697290800196862489919488000000000000000000000000000000000000000000000
 
-3382670249490222168322198931033556347662179500931247507678370748902984908800000000000000000000000000000000000000000000
 
-74853132453319945494055960097378672909773233126404622079931206745456640000000000000000000000000000000000000000000000
 
66699154437660375378933238711171524506115416279469780930297797195857920000000000000000000000000000000000000000000000
 
194524590741660602418283902457589307877104990206347968297948316691123404800000000000000000000000000000000000000000000
 
-145655313639708414625958877362461476896768757429943040892356756364066816000000000000000000000000000000000000000000000
 
585121064213021161850971420316935438176486955300484483759404981514403840000000000000000000000000000000000000000000000
 
-837112375219495684911074853040194385527809078007593736873177795378177638400000000000000000000000000000000000000000000
 
-13877659728512049895554564205807500054907542311439966832766082783117312000000000000000000000000000000000000000000000
 
-1517344350267623819042661966311171981138404257264972512159131799064359731200000000000000000000000000000000000000000000
 
-23340034471578542984832701175820727917516147018977356392679272887405772800000000000000000000000000000000000000000000
 
631941280921029870277479310514638525651791818543290266013268569253688115200000000000000000000000000000000000000000000
 
1584422393602712122776573743637176807623968175704531320036255254516963737600000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0
 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0
 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0
 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
36712446702168939644847857839797386476045764461827150801851226521600000000000000000000000000000000000000000000000000
 
-4261834645338797228908202543935776096256824373897245016863731299123200000000000000000000000000000000000000000000000000
 
-1276775719664376119343925637240234810683136896797239477749850214236160000000000000000000000000000000000000000000000000
 
233041620862094428308846483724297532438964787310341162967506234638336000000000000000000000000000000000000000000000000
 
-129467567145608015727136935402387518021647104061300646093059019243520000000000000000000000000000000000000000000000000
 
490538226629470370699485499691268262726462916498928003530368061800448000000000000000000000000000000000000000000000000
 
-348043984517977104007210712146541753693995764312940934404488906670080000000000000000000000000000000000000000000000000
 
1163746538779843127625735639894066518913995751839333788924708244539677081600000000000000000000000000000000000000000000
 
483863865287002026041095097488095656678356480553367809270351600170303488000000000000000000000000000000000000000000000
 
358335734191939448502026919824300190760131149297132417777072988072443904000000000000000000000000000000000000000000000
 
1282059750613993221895986969331066457946965217717433041365139946683236352000000000000000000000000000000000000000000000
 
-3046800875517984433192917419261341464608083170589060669702720269881809305600000000000000000000000000000000000000000000
 
-258075388728139728224835852093118556431431707822194217583156318437376000000000000000000000000000000000000000000000000
 
269902750523532185963337100481103236328858033695683650841736618756485939200000000000000000000000000000000000000000000
 
-242190922008034199214089539008189742823255979178258383456292159925256192000000000000000000000000000000000000000000000
 
-2999963441274535126774824799506559909677064187444697290800196862489919488000000000000000000000000000000000000000000000
 
-3382670249490222168322198931033556347662179500931247507678370748902984908800000000000000000000000000000000000000000000
 
-74853132453319945494055960097378672909773233126404622079931206745456640000000000000000000000000000000000000000000000
 
66699154437660375378933238711171524506115416279469780930297797195857920000000000000000000000000000000000000000000000
 
194524590741660602418283902457589307877104990206347968297948316691123404800000000000000000000000000000000000000000000
 
-145655313639708414625958877362461476896768757429943040892356756364066816000000000000000000000000000000000000000000000
 
585121064213021161850971420316935438176486955300484483759404981514403840000000000000000000000000000000000000000000000
 
-837112375219495684911074853040194385527809078007593736873177795378177638400000000000000000000000000000000000000000000
 
-13877659728512049895554564205807500054907542311439966832766082783117312000000000000000000000000000000000000000000000
 
-1517344350267623819042661966311171981138404257264972512159131799064359731200000000000000000000000000000000000000000000
 
-23340034471578542984832701175820727917516147018977356392679272887405772800000000000000000000000000000000000000000000
 
631941280921029870277479310514638525651791818543290266013268569253688115200000000000000000000000000000000000000000000
 
1584422393602712122776573743637176807623968175704531320036255254516963737600000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-4261834645338797228908202543935776096256824373897245016863731299123200000000000000000000000000000000000000000000000000
Arg4: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (4134375 1874250 -55296 30720 32256 -32768 -23040 12800 -18432 17920 
1068480 -593600 -680400 602112 176960 -1250550) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4134375
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0)
 (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #
2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
151783021834279709844167862256412319711901707446866626596403664650240000000000000000000000000000000000000000000000000000000
 
2709073968038835687868656061506532552991258975080824507034811407899033600000000000000000000000000000000000000000000000000000
 
963481451251721652039387181147642610677345042536191745643783588832870400000000000000000000000000000000000000000000000000000
 
-535267472917623140021881767304245894820747245853439858690990882684928000000000000000000000000000000000000000000000000000000
 
2028068980721216563860685362786087223709720120400255464595865455506227200000000000000000000000000000000000000000000000000000
 
-1438944348491511589379811788030858562928613738081315175678558823514112000000000000000000000000000000000000000000000000000000
 
4575702187719259799207942818317558589116433825931723573133093762602410967040000000000000000000000000000000000000000000000000
 
2131398228350756852285712525827052522256589719053953403370163722463163187200000000000000000000000000000000000000000000000000
 
137469738320048243415662981257192393760860127004429535263956516784517939200000000000000000000000000000000000000000000000000
 
-139651797658461707596863980959687511122143621083864924712590747209669017600000000000000000000000000000000000000000000000000
 
1383301630821193769246522560036310819916159986800739314558545765930211737600000000000000000000000000000000000000000000000000
 
5300515781444728226776221126328127887074484322000512230394000467068505292800000000000000000000000000000000000000000000000000
 
-12542065886259330286451942962696230683706956506418262970086328355163828387840000000000000000000000000000000000000000000000000
 
-1066980435272902688879555725997487031746200467027384218320361904039526400000000000000000000000000000000000000000000000000000
 
1037325048012843670818935835511736967690916646200918073797972537865907732480000000000000000000000000000000000000000000000000
 
-924936016332495146033716448249655360339976646134873373399909833810693324800000000000000000000000000000000000000000000000000
 
-7849288770667808101615830026315435583242620542944942006033504284869604147200000000000000000000000000000000000000000000000000
 
-13985227312736137277157091205491859524865823374162626414557764064995778232320000000000000000000000000000000000000000000000000
 
-2839295964959804684731896640107876641549394659052383751422026482047778816000000000000000000000000000000000000000000000000000
 
-2623992976060315520091863902097402284263172379819252633940382820641800192000000000000000000000000000000000000000000000000000
 
3370339386821786930215468159357353811623794981300387873025685051797531525120000000000000000000000000000000000000000000000000
 
151980571509984080908396788579448269448529309705435718494868426100152729600000000000000000000000000000000000000000000000000
 
-2910527415872723508583542725446054844963058464956759218296149205669904384000000000000000000000000000000000000000000000000000
 
-3460936476298102472304225095538053662666535656887645355885044447766653173760000000000000000000000000000000000000000000000000
 
-57375449440067006286933401388385383039508370243859612874217273506450636800000000000000000000000000000000000000000000000000
 
-6273270548137707226854505566967751659519090101129870729957910531756712263680000000000000000000000000000000000000000000000000
 
-96496455018432538652917698923783821983980820331584507835983368843868241920000000000000000000000000000000000000000000000000
 
2612682233307882869928453524408958654491626799789915693548607241008216801280000000000000000000000000000000000000000000000000
 
6550596333551212932604397071349952864020343426428421676274892817893571952640000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (3 0 0 0 0 0 1 0 2) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1
 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0
 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 
0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
151783021834279709844167862256412319711901707446866626596403664650240000000000000000000000000000000000000000000000000000000
 
2709073968038835687868656061506532552991258975080824507034811407899033600000000000000000000000000000000000000000000000000000
 
963481451251721652039387181147642610677345042536191745643783588832870400000000000000000000000000000000000000000000000000000
 
-535267472917623140021881767304245894820747245853439858690990882684928000000000000000000000000000000000000000000000000000000
 
2028068980721216563860685362786087223709720120400255464595865455506227200000000000000000000000000000000000000000000000000000
 
-1438944348491511589379811788030858562928613738081315175678558823514112000000000000000000000000000000000000000000000000000000
 
4575702187719259799207942818317558589116433825931723573133093762602410967040000000000000000000000000000000000000000000000000
 
2131398228350756852285712525827052522256589719053953403370163722463163187200000000000000000000000000000000000000000000000000
 
137469738320048243415662981257192393760860127004429535263956516784517939200000000000000000000000000000000000000000000000000
 
-139651797658461707596863980959687511122143621083864924712590747209669017600000000000000000000000000000000000000000000000000
 
1383301630821193769246522560036310819916159986800739314558545765930211737600000000000000000000000000000000000000000000000000
 
5300515781444728226776221126328127887074484322000512230394000467068505292800000000000000000000000000000000000000000000000000
 
-12542065886259330286451942962696230683706956506418262970086328355163828387840000000000000000000000000000000000000000000000000
 
-1066980435272902688879555725997487031746200467027384218320361904039526400000000000000000000000000000000000000000000000000000
 
1037325048012843670818935835511736967690916646200918073797972537865907732480000000000000000000000000000000000000000000000000
 
-924936016332495146033716448249655360339976646134873373399909833810693324800000000000000000000000000000000000000000000000000
 
-7849288770667808101615830026315435583242620542944942006033504284869604147200000000000000000000000000000000000000000000000000
 
-13985227312736137277157091205491859524865823374162626414557764064995778232320000000000000000000000000000000000000000000000000
 
-2839295964959804684731896640107876641549394659052383751422026482047778816000000000000000000000000000000000000000000000000000
 
-2623992976060315520091863902097402284263172379819252633940382820641800192000000000000000000000000000000000000000000000000000
 
3370339386821786930215468159357353811623794981300387873025685051797531525120000000000000000000000000000000000000000000000000
 
151980571509984080908396788579448269448529309705435718494868426100152729600000000000000000000000000000000000000000000000000
 
-2910527415872723508583542725446054844963058464956759218296149205669904384000000000000000000000000000000000000000000000000000
 
-3460936476298102472304225095538053662666535656887645355885044447766653173760000000000000000000000000000000000000000000000000
 
-57375449440067006286933401388385383039508370243859612874217273506450636800000000000000000000000000000000000000000000000000
 
-6273270548137707226854505566967751659519090101129870729957910531756712263680000000000000000000000000000000000000000000000000
 
-96496455018432538652917698923783821983980820331584507835983368843868241920000000000000000000000000000000000000000000000000
 
2612682233307882869928453524408958654491626799789915693548607241008216801280000000000000000000000000000000000000000000000000
 
6550596333551212932604397071349952864020343426428421676274892817893571952640000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
2709073968038835687868656061506532552991258975080824507034811407899033600000000000000000000000000000000000000000000000000000
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1929375
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
292846367751513415180591369240965519344150356805298297689436320484556800000000000000000000000000000000000000000000000000000000000
 
1858917025008790462403492642626732961975602591443264949251474961704419328000000000000000000000000000000000000000000000000000000000
 
-1032731680560439145779718134792629423319779217468480527361930534280232960000000000000000000000000000000000000000000000000000000000
 
3912905589678997207898709821825407037244941257297242887004647913217327104000000000000000000000000000000000000000000000000000000000
 
-2776263252370810172759674368532037739850394130910637467074819430117539840000000000000000000000000000000000000000000000000000000000
 
8987408922201064549430483956017071403429861960210967770350972018057910681600000000000000000000000000000000000000000000000000000000
 
4023842282507453905026713670669996237599173096253083235717693387673541017600000000000000000000000000000000000000000000000000000000
 
172385293338616102945460183923143691056243079945201217094799047999613619404800000000000000000000000000000000000000000000000000000
 
-175121567836054453785864313826685654406342176452267903080430778920242407014400000000000000000000000000000000000000000000000000000
 
1945259745623106939596534057120432212620716077110086572707255413863612416000000000000000000000000000000000000000000000000000000000
 
10226682635824922522536371635609331742124333188759738284516424651150297399296000000000000000000000000000000000000000000000000000000
 
-23796321792444632155343508894124470644513206377668741761066343757311994809548800000000000000000000000000000000000000000000000000000
 
-1597791895341250674850534432784140354611512374409711177575226828122635632640000000000000000000000000000000000000000000000000000000
 
1586315537422742008633800320520672620399553569137912700964117600572377399296000000000000000000000000000000000000000000000000000000
 
-1904397858857545913210111016502727811000275738694046990994671092293959680000000000000000000000000000000000000000000000000000000000
 
-14072403497192317304506686972847898989153269309143420074927639544199118848000000000000000000000000000000000000000000000000000000000
 
-26982747946510284859114962844595856470787997972525017338587386042901229626982400000000000000000000000000000000000000000000000000000
 
-6073521110569259247798133682327270350436842043031958127046123891257140838400000000000000000000000000000000000000000000000000000000
 
-5779487420129447179587286309983804045721745335120156715170137203105857536000000000000000000000000000000000000000000000000000000000
 
7227206641645079996219068155546385680794489602485652851872433616722906316800000000000000000000000000000000000000000000000000000000
 
381218237638976919244612002843205182188412328423550219359527444135542784000000000000000000000000000000000000000000000000000000000
 
-328944164919250987174280591082096779279633380378849353159726022030000128000000000000000000000000000000000000000000000000000000000
 
-6677444313957651457501964293703732285407247233007600758510707631409786467123200000000000000000000000000000000000000000000000000000
 
-110698757763429280254852131303716048401851461839246640589192952071508197376000000000000000000000000000000000000000000000000000000
 
-12103491363813188880812411678268405858084644463867444339612543632208106723737600000000000000000000000000000000000000000000000000000
 
-186177847901188279263473085361075411540342995227250859806050412263138289254400000000000000000000000000000000000000000000000000000
 
5040843783888396512168210018656534604009782456844668591240344095620228290969600000000000000000000000000000000000000000000000000000
 
12638556801045371451843608599535815307019250098365336071662871330523410386124800000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0
 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0
 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
292846367751513415180591369240965519344150356805298297689436320484556800000000000000000000000000000000000000000000000000000000000
 
1858917025008790462403492642626732961975602591443264949251474961704419328000000000000000000000000000000000000000000000000000000000
 
-1032731680560439145779718134792629423319779217468480527361930534280232960000000000000000000000000000000000000000000000000000000000
 
3912905589678997207898709821825407037244941257297242887004647913217327104000000000000000000000000000000000000000000000000000000000
 
-2776263252370810172759674368532037739850394130910637467074819430117539840000000000000000000000000000000000000000000000000000000000
 
8987408922201064549430483956017071403429861960210967770350972018057910681600000000000000000000000000000000000000000000000000000000
 
4023842282507453905026713670669996237599173096253083235717693387673541017600000000000000000000000000000000000000000000000000000000
 
172385293338616102945460183923143691056243079945201217094799047999613619404800000000000000000000000000000000000000000000000000000
 
-175121567836054453785864313826685654406342176452267903080430778920242407014400000000000000000000000000000000000000000000000000000
 
1945259745623106939596534057120432212620716077110086572707255413863612416000000000000000000000000000000000000000000000000000000000
 
10226682635824922522536371635609331742124333188759738284516424651150297399296000000000000000000000000000000000000000000000000000000
 
-23796321792444632155343508894124470644513206377668741761066343757311994809548800000000000000000000000000000000000000000000000000000
 
-1597791895341250674850534432784140354611512374409711177575226828122635632640000000000000000000000000000000000000000000000000000000
 
1586315537422742008633800320520672620399553569137912700964117600572377399296000000000000000000000000000000000000000000000000000000
 
-1904397858857545913210111016502727811000275738694046990994671092293959680000000000000000000000000000000000000000000000000000000000
 
-14072403497192317304506686972847898989153269309143420074927639544199118848000000000000000000000000000000000000000000000000000000000
 
-26982747946510284859114962844595856470787997972525017338587386042901229626982400000000000000000000000000000000000000000000000000000
 
-6073521110569259247798133682327270350436842043031958127046123891257140838400000000000000000000000000000000000000000000000000000000
 
-5779487420129447179587286309983804045721745335120156715170137203105857536000000000000000000000000000000000000000000000000000000000
 
7227206641645079996219068155546385680794489602485652851872433616722906316800000000000000000000000000000000000000000000000000000000
 
381218237638976919244612002843205182188412328423550219359527444135542784000000000000000000000000000000000000000000000000000000000
 
-328944164919250987174280591082096779279633380378849353159726022030000128000000000000000000000000000000000000000000000000000000000
 
-6677444313957651457501964293703732285407247233007600758510707631409786467123200000000000000000000000000000000000000000000000000000
 
-110698757763429280254852131303716048401851461839246640589192952071508197376000000000000000000000000000000000000000000000000000000
 
-12103491363813188880812411678268405858084644463867444339612543632208106723737600000000000000000000000000000000000000000000000000000
 
-186177847901188279263473085361075411540342995227250859806050412263138289254400000000000000000000000000000000000000000000000000000
 
5040843783888396512168210018656534604009782456844668591240344095620228290969600000000000000000000000000000000000000000000000000000
 
12638556801045371451843608599535815307019250098365336071662871330523410386124800000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
172385293338616102945460183923143691056243079945201217094799047999613619404800000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (
585692735503026830361182738481931038688300713610596595378872640969113600000000000000000000000000000000000000000000000000000000000
 
3717834050017580924806985285253465923951205182886529898502949923408838656000000000000000000000000000000000000000000000000000000000
 
-2065463361120878291559436269585258846639558434936961054723861068560465920000000000000000000000000000000000000000000000000000000000
 
7825811179357994415797419643650814074489882514594485774009295826434654208000000000000000000000000000000000000000000000000000000000
 
-5552526504741620345519348737064075479700788261821274934149638860235079680000000000000000000000000000000000000000000000000000000000
 
17974817844402129098860967912034142806859723920421935540701944036115821363200000000000000000000000000000000000000000000000000000000
 
8047684565014907810053427341339992475198346192506166471435386775347082035200000000000000000000000000000000000000000000000000000000
 
-350243135672108907571728627653371308812684352904535806160861557840484814028800000000000000000000000000000000000000000000000000000
 
3890519491246213879193068114240864425241432154220173145414510827727224832000000000000000000000000000000000000000000000000000000000
 
20453365271649845045072743271218663484248666377519476569032849302300594798592000000000000000000000000000000000000000000000000000000
 
-48109799464905112619523398340018372362195141995173087173417084658622830477312000000000000000000000000000000000000000000000000000000
 
-3195583790682501349701068865568280709223024748819422355150453656245271265280000000000000000000000000000000000000000000000000000000
 
3172631074845484017267600641041345240799107138275825401928235201144754798592000000000000000000000000000000000000000000000000000000
 
-3808795717715091826420222033005455622000551477388093981989342184587919360000000000000000000000000000000000000000000000000000000000
 
-28144806994384634609013373945695797978306538618286840149855279088398237696000000000000000000000000000000000000000000000000000000000
 
-54655037066375034130011766424884287705800968264830839545553968277800913731584000000000000000000000000000000000000000000000000000000
 
-12147042221138518495596267364654540700873684086063916254092247782514281676800000000000000000000000000000000000000000000000000000000
 
-11558974840258894359174572619967608091443490670240313430340274406211715072000000000000000000000000000000000000000000000000000000000
 
14454413283290159992438136311092771361588979204971305703744867233445812633600000000000000000000000000000000000000000000000000000000
 
762436475277953838489224005686410364376824656847100438719054888271085568000000000000000000000000000000000000000000000000000000000
 
-657888329838501974348561182164193558559266760757698706319452044060000256000000000000000000000000000000000000000000000000000000000
 
-13354888627915302915003928587407464570814494466015201517021415262819572934246400000000000000000000000000000000000000000000000000000
 
-221397515526858560509704262607432096803702923678493281178385904143016394752000000000000000000000000000000000000000000000000000000
 
-24206982727626377761624823356536811716169288927734888679225087264416213447475200000000000000000000000000000000000000000000000000000
 
-372355695802376558526946170722150823080685990454501719612100824526276578508800000000000000000000000000000000000000000000000000000
 
10081687567776793024336420037313069208019564913689337182480688191240456581939200000000000000000000000000000000000000000000000000000
 
25277113602090742903687217199071630614038500196730672143325742661046820772249600000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (
585692735503026830361182738481931038688300713610596595378872640969113600000000000000000000000000000000000000000000000000000000000
 
3717834050017580924806985285253465923951205182886529898502949923408838656000000000000000000000000000000000000000000000000000000000
 
-2065463361120878291559436269585258846639558434936961054723861068560465920000000000000000000000000000000000000000000000000000000000
 
7825811179357994415797419643650814074489882514594485774009295826434654208000000000000000000000000000000000000000000000000000000000
 
-5552526504741620345519348737064075479700788261821274934149638860235079680000000000000000000000000000000000000000000000000000000000
 
17974817844402129098860967912034142806859723920421935540701944036115821363200000000000000000000000000000000000000000000000000000000
 
8047684565014907810053427341339992475198346192506166471435386775347082035200000000000000000000000000000000000000000000000000000000
 
-350243135672108907571728627653371308812684352904535806160861557840484814028800000000000000000000000000000000000000000000000000000
 
3890519491246213879193068114240864425241432154220173145414510827727224832000000000000000000000000000000000000000000000000000000000
 
20453365271649845045072743271218663484248666377519476569032849302300594798592000000000000000000000000000000000000000000000000000000
 
-48109799464905112619523398340018372362195141995173087173417084658622830477312000000000000000000000000000000000000000000000000000000
 
-3195583790682501349701068865568280709223024748819422355150453656245271265280000000000000000000000000000000000000000000000000000000
 
3172631074845484017267600641041345240799107138275825401928235201144754798592000000000000000000000000000000000000000000000000000000
 
-3808795717715091826420222033005455622000551477388093981989342184587919360000000000000000000000000000000000000000000000000000000000
 
-28144806994384634609013373945695797978306538618286840149855279088398237696000000000000000000000000000000000000000000000000000000000
 
-54655037066375034130011766424884287705800968264830839545553968277800913731584000000000000000000000000000000000000000000000000000000
 
-12147042221138518495596267364654540700873684086063916254092247782514281676800000000000000000000000000000000000000000000000000000000
 
-11558974840258894359174572619967608091443490670240313430340274406211715072000000000000000000000000000000000000000000000000000000000
 
14454413283290159992438136311092771361588979204971305703744867233445812633600000000000000000000000000000000000000000000000000000000
 
762436475277953838489224005686410364376824656847100438719054888271085568000000000000000000000000000000000000000000000000000000000
 
-657888329838501974348561182164193558559266760757698706319452044060000256000000000000000000000000000000000000000000000000000000000
 
-13354888627915302915003928587407464570814494466015201517021415262819572934246400000000000000000000000000000000000000000000000000000
 
-221397515526858560509704262607432096803702923678493281178385904143016394752000000000000000000000000000000000000000000000000000000
 
-24206982727626377761624823356536811716169288927734888679225087264416213447475200000000000000000000000000000000000000000000000000000
 
-372355695802376558526946170722150823080685990454501719612100824526276578508800000000000000000000000000000000000000000000000000000
 
10081687567776793024336420037313069208019564913689337182480688191240456581939200000000000000000000000000000000000000000000000000000
 
25277113602090742903687217199071630614038500196730672143325742661046820772249600000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-350243135672108907571728627653371308812684352904535806160861557840484814028800000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0
 0 0 1)) (
224906010433162302858694171577061518856307474026469092625487094132139622400000000000000000000000000000000000000000000000000000000000
 
1427648275206751075125882349537330914797262790228427481025132770588994043904000000000000000000000000000000000000000000000000000000000
 
-793137930670417263958823527520739397109590439015793045013962650327218913280000000000000000000000000000000000000000000000000000000000
 
3005111492873469855666209143161912604604114885604282537219569597350907215872000000000000000000000000000000000000000000000000000000000
 
-2132170177820782212679429915032604984205102692539369574713461322330270597120000000000000000000000000000000000000000000000000000000000
 
6902330052250417573962611678221110837834133985442023247629546509868475403468800000000000000000000000000000000000000000000000000000000
 
3090310872965724599060516099074557110476164937922367925031188521733279501516800000000000000000000000000000000000000000000000000000000
 
1493959484638546129610138155868491939292709947220546487839172157847254335488000000000000000000000000000000000000000000000000000000000
 
7570395324419132282174833227748736017813213563114804999518316270232635703296000000000000000000000000000000000000000000000000000000000
 
-18899708404365175568596635245165901127290346014925476479077607301687355952332800000000000000000000000000000000000000000000000000000000
 
-1227104175622080518285210444378219792341641503546658184377774203998184165867520000000000000000000000000000000000000000000000000000000
 
1218290332740665862630758646159876572466857141097916954340442317239585842659328000000000000000000000000000000000000000000000000000000
 
-1462577555602595261345365260674094958848211767317028089083907398881761034240000000000000000000000000000000000000000000000000000000000
 
-10807605885843699689861135595147186423669710829422146617544427169944923275264000000000000000000000000000000000000000000000000000000000
 
-21554928113276829536190718683954027999304120465400390391473319542377136271654912000000000000000000000000000000000000000000000000000000
 
-4664464212917191102308966668027343629135494689048543841571423148485484163891200000000000000000000000000000000000000000000000000000000
 
-4438646338659415433923035886067561507114300417372280357250665371985298587648000000000000000000000000000000000000000000000000000000000
 
5550494700783421437096244343459624202850168014708981390238029017643192051302400000000000000000000000000000000000000000000000000000000
 
292775606506734273979862018183581579920700668229286568468117077096096858112000000000000000000000000000000000000000000000000000000000
 
-252629118657984758149847493951050326486758436130956303226669584919040098304000000000000000000000000000000000000000000000000000000000
 
-4951754692740733429945357349227167255551172961085951336231149235771111660480102400000000000000000000000000000000000000000000000000000
 
-183084723950504181355810452584197891640173541505811445697541423386254043512832000000000000000000000000000000000000000000000000000000
 
-9465699531345173989543792281949674155091971543761801654616612226646301583448473600000000000000000000000000000000000000000000000000000
 
-142984587188112598474347329557305916062983420334528660331046716618090206147379200000000000000000000000000000000000000000000000000000
 
3734072716842821829577067672288097022824940660518127442057526534762865280365363200000000000000000000000000000000000000000000000000000
 
9365975295329555416856171178364429243624854884521369299448727747621027937307852800000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
224906010433162302858694171577061518856307474026469092625487094132139622400000000000000000000000000000000000000000000000000000000000
 
1427648275206751075125882349537330914797262790228427481025132770588994043904000000000000000000000000000000000000000000000000000000000
 
-793137930670417263958823527520739397109590439015793045013962650327218913280000000000000000000000000000000000000000000000000000000000
 
3005111492873469855666209143161912604604114885604282537219569597350907215872000000000000000000000000000000000000000000000000000000000
 
-2132170177820782212679429915032604984205102692539369574713461322330270597120000000000000000000000000000000000000000000000000000000000
 
6902330052250417573962611678221110837834133985442023247629546509868475403468800000000000000000000000000000000000000000000000000000000
 
3090310872965724599060516099074557110476164937922367925031188521733279501516800000000000000000000000000000000000000000000000000000000
 
1493959484638546129610138155868491939292709947220546487839172157847254335488000000000000000000000000000000000000000000000000000000000
 
7570395324419132282174833227748736017813213563114804999518316270232635703296000000000000000000000000000000000000000000000000000000000
 
-18899708404365175568596635245165901127290346014925476479077607301687355952332800000000000000000000000000000000000000000000000000000000
 
-1227104175622080518285210444378219792341641503546658184377774203998184165867520000000000000000000000000000000000000000000000000000000
 
1218290332740665862630758646159876572466857141097916954340442317239585842659328000000000000000000000000000000000000000000000000000000
 
-1462577555602595261345365260674094958848211767317028089083907398881761034240000000000000000000000000000000000000000000000000000000000
 
-10807605885843699689861135595147186423669710829422146617544427169944923275264000000000000000000000000000000000000000000000000000000000
 
-21554928113276829536190718683954027999304120465400390391473319542377136271654912000000000000000000000000000000000000000000000000000000
 
-4664464212917191102308966668027343629135494689048543841571423148485484163891200000000000000000000000000000000000000000000000000000000
 
-4438646338659415433923035886067561507114300417372280357250665371985298587648000000000000000000000000000000000000000000000000000000000
 
5550494700783421437096244343459624202850168014708981390238029017643192051302400000000000000000000000000000000000000000000000000000000
 
292775606506734273979862018183581579920700668229286568468117077096096858112000000000000000000000000000000000000000000000000000000000
 
-252629118657984758149847493951050326486758436130956303226669584919040098304000000000000000000000000000000000000000000000000000000000
 
-4951754692740733429945357349227167255551172961085951336231149235771111660480102400000000000000000000000000000000000000000000000000000
 
-183084723950504181355810452584197891640173541505811445697541423386254043512832000000000000000000000000000000000000000000000000000000
 
-9465699531345173989543792281949674155091971543761801654616612226646301583448473600000000000000000000000000000000000000000000000000000
 
-142984587188112598474347329557305916062983420334528660331046716618090206147379200000000000000000000000000000000000000000000000000000
 
3734072716842821829577067672288097022824940660518127442057526534762865280365363200000000000000000000000000000000000000000000000000000
 
9365975295329555416856171178364429243624854884521369299448727747621027937307852800000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-1227104175622080518285210444378219792341641503546658184377774203998184165867520000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
354226966432230627002443320233871892198684271591688820885142173258119905280000000000000000000000000000000000000000000000000000000000000
 
2248546033450632943323264700521296190805688894609773282614584113677665619148800000000000000000000000000000000000000000000000000000000000
 
-1249192240805907190735147055845164550447604941449874045896991174265369788416000000000000000000000000000000000000000000000000000000000000
 
4733050601275715022674279400480012352251480944826744996120822115827678864998400000000000000000000000000000000000000000000000000000000000
 
-3358168030067731984970102116176352850123036740749507080173701582670176190464000000000000000000000000000000000000000000000000000000000000
 
10871169832294407678991113393198249569588761027071186615016535753042848760463360000000000000000000000000000000000000000000000000000000000
 
4867239624921016243520312856042427448999959777227729481924121921729915214888960000000000000000000000000000000000000000000000000000000000
 
2352986188305710154135967595492874804386018166872360718346696148609425578393600000000000000000000000000000000000000000000000000000000000
 
11923372635960133344425362333704259228055811361905817874241348125616401232691200000000000000000000000000000000000000000000000000000000000
 
-29767040736875151520539700511136294275482294973507625454547231500157585624924160000000000000000000000000000000000000000000000000000000000
 
2434191027827822551323233254340657914418789428718815640524861815331585051852800000000000000000000000000000000000000000000000000000000000
 
-2303559650074087536618950285561699560185933533524319240307154153238773628928000000000000000000000000000000000000000000000000000000000000
 
-17021979270203827011531288562356818617279794556339880922632472792663254158540800000000000000000000000000000000000000000000000000000000000
 
-36010546793456101790219535473783003350037947458964000616325138941960939026513920000000000000000000000000000000000000000000000000000000000
 
-7346531135344575986136622502143066215888404135251456550474991458864637558128640000000000000000000000000000000000000000000000000000000000
 
-6990867983388579308428781520556409373705023157361341562669797960876845275545600000000000000000000000000000000000000000000000000000000000
 
8742029153733888763426584840948908119489014623166645689624895702788027480801280000000000000000000000000000000000000000000000000000000000
 
461121580248106481518282678639140988375103552461126345337284396426352551526400000000000000000000000000000000000000000000000000000000000
 
-397890861886325994086009802972904264216644536906256177582004596247488154828800000000000000000000000000000000000000000000000000000000000
 
-6738795633329177584365516001090006526909919154646060683261663134085069745946624000000000000000000000000000000000000000000000000000000000
 
-877368444520642734412302476121657179657261249574048955474959359752478518149120000000000000000000000000000000000000000000000000000000000
 
-15526937266382177614747218908037359569610042499212353330947562455783009813528576000000000000000000000000000000000000000000000000000000000
 
403076613097227882764930703468891715879721562789006350380021813773578218242048000000000000000000000000000000000000000000000000000000000
 
5571934276770680090976008551870441423279187881422292858777405192843970406776832000000000000000000000000000000000000000000000000000000000
 
13514490081116992619116977477990730508028771807546125196778949804872949362065408000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
354226966432230627002443320233871892198684271591688820885142173258119905280000000000000000000000000000000000000000000000000000000000000
 
2248546033450632943323264700521296190805688894609773282614584113677665619148800000000000000000000000000000000000000000000000000000000000
 
-1249192240805907190735147055845164550447604941449874045896991174265369788416000000000000000000000000000000000000000000000000000000000000
 
4733050601275715022674279400480012352251480944826744996120822115827678864998400000000000000000000000000000000000000000000000000000000000
 
-3358168030067731984970102116176352850123036740749507080173701582670176190464000000000000000000000000000000000000000000000000000000000000
 
10871169832294407678991113393198249569588761027071186615016535753042848760463360000000000000000000000000000000000000000000000000000000000
 
4867239624921016243520312856042427448999959777227729481924121921729915214888960000000000000000000000000000000000000000000000000000000000
 
2352986188305710154135967595492874804386018166872360718346696148609425578393600000000000000000000000000000000000000000000000000000000000
 
11923372635960133344425362333704259228055811361905817874241348125616401232691200000000000000000000000000000000000000000000000000000000000
 
-29767040736875151520539700511136294275482294973507625454547231500157585624924160000000000000000000000000000000000000000000000000000000000
 
2434191027827822551323233254340657914418789428718815640524861815331585051852800000000000000000000000000000000000000000000000000000000000
 
-2303559650074087536618950285561699560185933533524319240307154153238773628928000000000000000000000000000000000000000000000000000000000000
 
-17021979270203827011531288562356818617279794556339880922632472792663254158540800000000000000000000000000000000000000000000000000000000000
 
-36010546793456101790219535473783003350037947458964000616325138941960939026513920000000000000000000000000000000000000000000000000000000000
 
-7346531135344575986136622502143066215888404135251456550474991458864637558128640000000000000000000000000000000000000000000000000000000000
 
-6990867983388579308428781520556409373705023157361341562669797960876845275545600000000000000000000000000000000000000000000000000000000000
 
8742029153733888763426584840948908119489014623166645689624895702788027480801280000000000000000000000000000000000000000000000000000000000
 
461121580248106481518282678639140988375103552461126345337284396426352551526400000000000000000000000000000000000000000000000000000000000
 
-397890861886325994086009802972904264216644536906256177582004596247488154828800000000000000000000000000000000000000000000000000000000000
 
-6738795633329177584365516001090006526909919154646060683261663134085069745946624000000000000000000000000000000000000000000000000000000000
 
-877368444520642734412302476121657179657261249574048955474959359752478518149120000000000000000000000000000000000000000000000000000000000
 
-15526937266382177614747218908037359569610042499212353330947562455783009813528576000000000000000000000000000000000000000000000000000000000
 
403076613097227882764930703468891715879721562789006350380021813773578218242048000000000000000000000000000000000000000000000000000000000
 
5571934276770680090976008551870441423279187881422292858777405192843970406776832000000000000000000000000000000000000000000000000000000000
 
13514490081116992619116977477990730508028771807546125196778949804872949362065408000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
2434191027827822551323233254340657914418789428718815640524861815331585051852800000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
74387662950768431670513097249113097361723697034254652385879856384205180108800000000000000000000000000000000000000000000000000000000000000
 
472194667024632918097885587109472200069194667868052389349062663872309780021248000000000000000000000000000000000000000000000000000000000000
 
-262330370569240510054380881727484555593997037704473549638368146595727655567360000000000000000000000000000000000000000000000000000000000000
 
993940626267900154761598674100802593972810998413616449185372644323812561649664000000000000000000000000000000000000000000000000000000000000
 
-705215286314223716843721444397034098525837715557396486836477332360736999997440000000000000000000000000000000000000000000000000000000000000
 
2282945664781825612588133812571632409613639815684949189153472508138998239697305600000000000000000000000000000000000000000000000000000000000
 
1022120321233413411139265699768909764289991553217823191204065603563282195126681600000000000000000000000000000000000000000000000000000000000
 
494127099544199132368553195053503708921063815043195750852806191207979371462656000000000000000000000000000000000000000000000000000000000000
 
2503908253551628002329326090077894437891720386000221753590683106379444258865152000000000000000000000000000000000000000000000000000000000000
 
-6251078554743781819313337107338621797851281944436601345454918615033092981234073600000000000000000000000000000000000000000000000000000000000
 
-483747526515558382689979559967956907639046042040107040464502372180142462074880000000000000000000000000000000000000000000000000000000000000
 
-3574615646742803672421570598094931909628756856831374993752819286459283373293568000000000000000000000000000000000000000000000000000000000000
 
-5517494363250410432834586515848278055396185846258634991387395252933265752011571200000000000000000000000000000000000000000000000000000000000
 
2291079330406459561245401650136492309873028481829328758226909152785672569461145600000000000000000000000000000000000000000000000000000000000
 
-1468082276511601654770044119316845968478054863045881728160657571784137507864576000000000000000000000000000000000000000000000000000000000000
 
1835826122284116640319582816599270705092693070864995594821228097585485770968268800000000000000000000000000000000000000000000000000000000000
 
96835531852102361118839362514219607558771746016836532520829723249534035820544000000000000000000000000000000000000000000000000000000000000
 
-83557080996128458758062058624309895485495352750313797292220965211972512514048000000000000000000000000000000000000000000000000000000000000
 
-2466717607020746634888395126104065589680000055682201100191689562381109389049200640000000000000000000000000000000000000000000000000000000000
 
399958473329342438090992461056209891732484600481965473076225370131559923633356800000000000000000000000000000000000000000000000000000000000
 
-2647240686927646016163461190593999715184573988797452658086722938250872627774095360000000000000000000000000000000000000000000000000000000000
 
-538506814373504717758112265382741165756468565566325470394560043832434347443486720000000000000000000000000000000000000000000000000000000000
 
1476814267628148460571689185939715596105396923117252271049387679229013501956587520000000000000000000000000000000000000000000000000000000000
 
4064875195059791015881474830565744995553111951658969374148109813950438232167546880000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
74387662950768431670513097249113097361723697034254652385879856384205180108800000000000000000000000000000000000000000000000000000000000000
 
472194667024632918097885587109472200069194667868052389349062663872309780021248000000000000000000000000000000000000000000000000000000000000
 
-262330370569240510054380881727484555593997037704473549638368146595727655567360000000000000000000000000000000000000000000000000000000000000
 
993940626267900154761598674100802593972810998413616449185372644323812561649664000000000000000000000000000000000000000000000000000000000000
 
-705215286314223716843721444397034098525837715557396486836477332360736999997440000000000000000000000000000000000000000000000000000000000000
 
2282945664781825612588133812571632409613639815684949189153472508138998239697305600000000000000000000000000000000000000000000000000000000000
 
1022120321233413411139265699768909764289991553217823191204065603563282195126681600000000000000000000000000000000000000000000000000000000000
 
494127099544199132368553195053503708921063815043195750852806191207979371462656000000000000000000000000000000000000000000000000000000000000
 
2503908253551628002329326090077894437891720386000221753590683106379444258865152000000000000000000000000000000000000000000000000000000000000
 
-6251078554743781819313337107338621797851281944436601345454918615033092981234073600000000000000000000000000000000000000000000000000000000000
 
-483747526515558382689979559967956907639046042040107040464502372180142462074880000000000000000000000000000000000000000000000000000000000000
 
-3574615646742803672421570598094931909628756856831374993752819286459283373293568000000000000000000000000000000000000000000000000000000000000
 
-5517494363250410432834586515848278055396185846258634991387395252933265752011571200000000000000000000000000000000000000000000000000000000000
 
2291079330406459561245401650136492309873028481829328758226909152785672569461145600000000000000000000000000000000000000000000000000000000000
 
-1468082276511601654770044119316845968478054863045881728160657571784137507864576000000000000000000000000000000000000000000000000000000000000
 
1835826122284116640319582816599270705092693070864995594821228097585485770968268800000000000000000000000000000000000000000000000000000000000
 
96835531852102361118839362514219607558771746016836532520829723249534035820544000000000000000000000000000000000000000000000000000000000000
 
-83557080996128458758062058624309895485495352750313797292220965211972512514048000000000000000000000000000000000000000000000000000000000000
 
-2466717607020746634888395126104065589680000055682201100191689562381109389049200640000000000000000000000000000000000000000000000000000000000
 
399958473329342438090992461056209891732484600481965473076225370131559923633356800000000000000000000000000000000000000000000000000000000000
 
-2647240686927646016163461190593999715184573988797452658086722938250872627774095360000000000000000000000000000000000000000000000000000000000
 
-538506814373504717758112265382741165756468565566325470394560043832434347443486720000000000000000000000000000000000000000000000000000000000
 
1476814267628148460571689185939715596105396923117252271049387679229013501956587520000000000000000000000000000000000000000000000000000000000
 
4064875195059791015881474830565744995553111951658969374148109813950438232167546880000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
472194667024632918097885587109472200069194667868052389349062663872309780021248000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 1 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (
297550651803073726682052388996452389446894788137018609543519425536820720435200000000000000000000000000000000000000000000000000000000000000
 
-1049321482276962040217523526909938222375988150817894198553472586382910622269440000000000000000000000000000000000000000000000000000000000000
 
-273989498150095643834575587582039424731508017158005707400073397555537773592576000000000000000000000000000000000000000000000000000000000000
 
-2820861145256894867374885777588136394103350862229585947345909329442947999989760000000000000000000000000000000000000000000000000000000000000
 
9131782659127302450352535250286529638454559262739796756613890032555992958789222400000000000000000000000000000000000000000000000000000000000
 
4088481284933653644557062799075639057159966212871292764816262414253128780506726400000000000000000000000000000000000000000000000000000000000
 
1976508398176796529474212780214014835684255260172783003411224764831917485850624000000000000000000000000000000000000000000000000000000000000
 
10015633014206512009317304360311577751566881544000887014362732425517777035460608000000000000000000000000000000000000000000000000000000000000
 
-25004314218975127277253348429354487191405127777746405381819674460132371924936294400000000000000000000000000000000000000000000000000000000000
 
-1934990106062233530759918239871827630556184168160428161858009488720569848299520000000000000000000000000000000000000000000000000000000000000
 
-14298462586971214689686282392379727638515027427325499975011277145837133493174272000000000000000000000000000000000000000000000000000000000000
 
-22069977453001641731338346063393112221584743385034539965549581011733063008046284800000000000000000000000000000000000000000000000000000000000
 
9164317321625838244981606600545969239492113927317315032907636611142690277844582400000000000000000000000000000000000000000000000000000000000
 
-5872329106046406619080176477267383873912219452183526912642630287136550031458304000000000000000000000000000000000000000000000000000000000000
 
7343304489136466561278331266397082820370772283459982379284912390341943083873075200000000000000000000000000000000000000000000000000000000000
 
387342127408409444475357450056878430235086984067346130083318892998136143282176000000000000000000000000000000000000000000000000000000000000
 
-334228323984513835032248234497239581941981411001255189168883860847890050056192000000000000000000000000000000000000000000000000000000000000
 
-9866870428082986539553580504416262358720000222728804400766758249524437556196802560000000000000000000000000000000000000000000000000000000000
 
1599833893317369752363969844224839566929938401927861892304901480526239694533427200000000000000000000000000000000000000000000000000000000000
 
-10588962747710584064653844762375998860738295955189810632346891753003490511096381440000000000000000000000000000000000000000000000000000000000
 
-2154027257494018871032449061530964663025874262265301881578240175329737389773946880000000000000000000000000000000000000000000000000000000000
 
5907257070512593842286756743758862384421587692469009084197550716916054007826350080000000000000000000000000000000000000000000000000000000000
 
16259500780239164063525899322262979982212447806635877496592439255801752928670187520000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0
 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (
297550651803073726682052388996452389446894788137018609543519425536820720435200000000000000000000000000000000000000000000000000000000000000
 
-1049321482276962040217523526909938222375988150817894198553472586382910622269440000000000000000000000000000000000000000000000000000000000000
 
-273989498150095643834575587582039424731508017158005707400073397555537773592576000000000000000000000000000000000000000000000000000000000000
 
-2820861145256894867374885777588136394103350862229585947345909329442947999989760000000000000000000000000000000000000000000000000000000000000
 
9131782659127302450352535250286529638454559262739796756613890032555992958789222400000000000000000000000000000000000000000000000000000000000
 
4088481284933653644557062799075639057159966212871292764816262414253128780506726400000000000000000000000000000000000000000000000000000000000
 
1976508398176796529474212780214014835684255260172783003411224764831917485850624000000000000000000000000000000000000000000000000000000000000
 
10015633014206512009317304360311577751566881544000887014362732425517777035460608000000000000000000000000000000000000000000000000000000000000
 
-25004314218975127277253348429354487191405127777746405381819674460132371924936294400000000000000000000000000000000000000000000000000000000000
 
-1934990106062233530759918239871827630556184168160428161858009488720569848299520000000000000000000000000000000000000000000000000000000000000
 
-14298462586971214689686282392379727638515027427325499975011277145837133493174272000000000000000000000000000000000000000000000000000000000000
 
-22069977453001641731338346063393112221584743385034539965549581011733063008046284800000000000000000000000000000000000000000000000000000000000
 
9164317321625838244981606600545969239492113927317315032907636611142690277844582400000000000000000000000000000000000000000000000000000000000
 
-5872329106046406619080176477267383873912219452183526912642630287136550031458304000000000000000000000000000000000000000000000000000000000000
 
7343304489136466561278331266397082820370772283459982379284912390341943083873075200000000000000000000000000000000000000000000000000000000000
 
387342127408409444475357450056878430235086984067346130083318892998136143282176000000000000000000000000000000000000000000000000000000000000
 
-334228323984513835032248234497239581941981411001255189168883860847890050056192000000000000000000000000000000000000000000000000000000000000
 
-9866870428082986539553580504416262358720000222728804400766758249524437556196802560000000000000000000000000000000000000000000000000000000000
 
1599833893317369752363969844224839566929938401927861892304901480526239694533427200000000000000000000000000000000000000000000000000000000000
 
-10588962747710584064653844762375998860738295955189810632346891753003490511096381440000000000000000000000000000000000000000000000000000000000
 
-2154027257494018871032449061530964663025874262265301881578240175329737389773946880000000000000000000000000000000000000000000000000000000000
 
5907257070512593842286756743758862384421587692469009084197550716916054007826350080000000000000000000000000000000000000000000000000000000000
 
16259500780239164063525899322262979982212447806635877496592439255801752928670187520000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
10015633014206512009317304360311577751566881544000887014362732425517777035460608000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
21423646929821308321107772007744572040176424745865339887133398638651091871334400000000000000000000000000000000000000000000000000000000000000
 
-75551146723941266895661693937515552011071146858888382295850026219569564803399680000000000000000000000000000000000000000000000000000000000000
 
-19727243866806886356089442305906838580668577235376410932805284623998719698665472000000000000000000000000000000000000000000000000000000000000
 
-203102002458496430450991775986345820375441262080530188208905471719892255999262720000000000000000000000000000000000000000000000000000000000000
 
657488351457165776425382538020630133968728266917265366476200082344031493032824012800000000000000000000000000000000000000000000000000000000000
 
294370652515223062408108521533446012115517567326733079066770893826225272196484300800000000000000000000000000000000000000000000000000000000000
 
142308604668729350122143320175409068169266378732440376245608183067898058981244928000000000000000000000000000000000000000000000000000000000000
 
-2641623796959556172744894653179695608912787249693815696697486084873024049574104268800000000000000000000000000000000000000000000000000000000000
 
-1051641466491683760978316957832715663914522562120093136508086904679366588723363840000000000000000000000000000000000000000000000000000000000000
 
-139319287636480814214714113270771589400045260107550827653776683187881029077565440000000000000000000000000000000000000000000000000000000000000
 
-1029489306261927457657412332251340389973081974767435998200811954500273611508547584000000000000000000000000000000000000000000000000000000000000
 
-1589038376616118204656360916564304079954101523722486877519569832844780536579332505600000000000000000000000000000000000000000000000000000000000
 
659830847157060353638675675239309785243432202766846682369349836002273700004809932800000000000000000000000000000000000000000000000000000000000
 
-422807695635341276573772706363251638921679800557213937710269380673831602264997888000000000000000000000000000000000000000000000000000000000000
 
528717923217825592412039851180589963066695604409118731308513692104619902038861414400000000000000000000000000000000000000000000000000000000000
 
27888633173405480002225736404095246976926262852848921365998960295865802316316672000000000000000000000000000000000000000000000000000000000000
 
-24064439326884996122321872883801249899822661592090373620159637981048083604045824000000000000000000000000000000000000000000000000000000000000
 
-710414670821975030847857796317970889827840016036473916855206593965759504046169784320000000000000000000000000000000000000000000000000000000000
 
115188040318850622170205828784188448818955564938806056245952906597889258006406758400000000000000000000000000000000000000000000000000000000000
 
-762405317835162052655076822891071917973157308773666365528976206216251316798939463680000000000000000000000000000000000000000000000000000000000
 
-155089962539569358714336332430229455737862946883101735473633292623741092063724175360000000000000000000000000000000000000000000000000000000000
 
-215678003832310011951660993509302884421926104958288114856991223615181841705981706240000000000000000000000000000000000000000000000000000000000
 
1170684056177219812573864751202934558719296242077783179754655626417726210864253501440000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
21423646929821308321107772007744572040176424745865339887133398638651091871334400000000000000000000000000000000000000000000000000000000000000
 
-75551146723941266895661693937515552011071146858888382295850026219569564803399680000000000000000000000000000000000000000000000000000000000000
 
-19727243866806886356089442305906838580668577235376410932805284623998719698665472000000000000000000000000000000000000000000000000000000000000
 
-203102002458496430450991775986345820375441262080530188208905471719892255999262720000000000000000000000000000000000000000000000000000000000000
 
657488351457165776425382538020630133968728266917265366476200082344031493032824012800000000000000000000000000000000000000000000000000000000000
 
294370652515223062408108521533446012115517567326733079066770893826225272196484300800000000000000000000000000000000000000000000000000000000000
 
142308604668729350122143320175409068169266378732440376245608183067898058981244928000000000000000000000000000000000000000000000000000000000000
 
-2641623796959556172744894653179695608912787249693815696697486084873024049574104268800000000000000000000000000000000000000000000000000000000000
 
-1051641466491683760978316957832715663914522562120093136508086904679366588723363840000000000000000000000000000000000000000000000000000000000000
 
-139319287636480814214714113270771589400045260107550827653776683187881029077565440000000000000000000000000000000000000000000000000000000000000
 
-1029489306261927457657412332251340389973081974767435998200811954500273611508547584000000000000000000000000000000000000000000000000000000000000
 
-1589038376616118204656360916564304079954101523722486877519569832844780536579332505600000000000000000000000000000000000000000000000000000000000
 
659830847157060353638675675239309785243432202766846682369349836002273700004809932800000000000000000000000000000000000000000000000000000000000
 
-422807695635341276573772706363251638921679800557213937710269380673831602264997888000000000000000000000000000000000000000000000000000000000000
 
528717923217825592412039851180589963066695604409118731308513692104619902038861414400000000000000000000000000000000000000000000000000000000000
 
27888633173405480002225736404095246976926262852848921365998960295865802316316672000000000000000000000000000000000000000000000000000000000000
 
-24064439326884996122321872883801249899822661592090373620159637981048083604045824000000000000000000000000000000000000000000000000000000000000
 
-710414670821975030847857796317970889827840016036473916855206593965759504046169784320000000000000000000000000000000000000000000000000000000000
 
115188040318850622170205828784188448818955564938806056245952906597889258006406758400000000000000000000000000000000000000000000000000000000000
 
-762405317835162052655076822891071917973157308773666365528976206216251316798939463680000000000000000000000000000000000000000000000000000000000
 
-155089962539569358714336332430229455737862946883101735473633292623741092063724175360000000000000000000000000000000000000000000000000000000000
 
-215678003832310011951660993509302884421926104958288114856991223615181841705981706240000000000000000000000000000000000000000000000000000000000
 
1170684056177219812573864751202934558719296242077783179754655626417726210864253501440000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-75551146723941266895661693937515552011071146858888382295850026219569564803399680000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 1 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
257083763157855699853293264092934864482117096950384078645600783663813102456012800000000000000000000000000000000000000000000000000000000000000
 
896540274457436367161852101391851217198044276058808803244086977805558835667009536000000000000000000000000000000000000000000000000000000000000
 
-2437224029501957165411901311836149844505295144966362258506865660638707071991152640000000000000000000000000000000000000000000000000000000000000
 
9249780858516932121226500947122841543824019846467175279039701460080630082855082393600000000000000000000000000000000000000000000000000000000000
 
3532447830182676748897302258401352145386210807920796948801250725914703266357811609600000000000000000000000000000000000000000000000000000000000
 
1707703256024752201465719842104908818031196544789284514947298196814776707774939136000000000000000000000000000000000000000000000000000000000000
 
-31699485563514674072938735838156347306953446996325788360369833018476288594889251225600000000000000000000000000000000000000000000000000000000000
 
-12619697597900205131739803493992587966974270745441117638097042856152399064680366080000000000000000000000000000000000000000000000000000000000000
 
-1671831451637769770576569359249259072800543121290609931845320198254572348930785280000000000000000000000000000000000000000000000000000000000000
 
-12353871675143129491888947987016084679676983697209231978409743454003283338102571008000000000000000000000000000000000000000000000000000000000000
 
-19068460519393418455876330998771648959449218284669842530234837994137366438951990067200000000000000000000000000000000000000000000000000000000000
 
7917970165884724243664108102871717422921186433202160188432198032027284400057719193600000000000000000000000000000000000000000000000000000000000
 
-5073692347624095318885272476359019667060157606686567252523232568085979227179974656000000000000000000000000000000000000000000000000000000000000
 
6344615078613907108944478214167079556800347252909424775702164305255438824466336972800000000000000000000000000000000000000000000000000000000000
 
334663598080865760026708836849142963723115154234187056391987523550389627795800064000000000000000000000000000000000000000000000000000000000000
 
-288773271922619953467862474605614998797871939105084483441915655772577003248549888000000000000000000000000000000000000000000000000000000000000
 
-9582692103998878106713557270940868406089076248462124354404379494663087955801632931840000000000000000000000000000000000000000000000000000000000
 
1382256483826207466042469945410261385827466779265672674951434879174671096076881100800000000000000000000000000000000000000000000000000000000000
 
-9148863814021944631860921874692863015677887705283996386347714474595015801587273564160000000000000000000000000000000000000000000000000000000000
 
-1861079550474832304572035989162753468854355362597220825683599511484893104764690104320000000000000000000000000000000000000000000000000000000000
 
-2588136045987720143419931922111634613063113259499457378283894683382182100471780474880000000000000000000000000000000000000000000000000000000000
 
14048208674126637750886377014435214704631554904933398157055867517012714530371042017280000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
257083763157855699853293264092934864482117096950384078645600783663813102456012800000000000000000000000000000000000000000000000000000000000000
 
896540274457436367161852101391851217198044276058808803244086977805558835667009536000000000000000000000000000000000000000000000000000000000000
 
-2437224029501957165411901311836149844505295144966362258506865660638707071991152640000000000000000000000000000000000000000000000000000000000000
 
9249780858516932121226500947122841543824019846467175279039701460080630082855082393600000000000000000000000000000000000000000000000000000000000
 
3532447830182676748897302258401352145386210807920796948801250725914703266357811609600000000000000000000000000000000000000000000000000000000000
 
1707703256024752201465719842104908818031196544789284514947298196814776707774939136000000000000000000000000000000000000000000000000000000000000
 
-31699485563514674072938735838156347306953446996325788360369833018476288594889251225600000000000000000000000000000000000000000000000000000000000
 
-12619697597900205131739803493992587966974270745441117638097042856152399064680366080000000000000000000000000000000000000000000000000000000000000
 
-1671831451637769770576569359249259072800543121290609931845320198254572348930785280000000000000000000000000000000000000000000000000000000000000
 
-12353871675143129491888947987016084679676983697209231978409743454003283338102571008000000000000000000000000000000000000000000000000000000000000
 
-19068460519393418455876330998771648959449218284669842530234837994137366438951990067200000000000000000000000000000000000000000000000000000000000
 
7917970165884724243664108102871717422921186433202160188432198032027284400057719193600000000000000000000000000000000000000000000000000000000000
 
-5073692347624095318885272476359019667060157606686567252523232568085979227179974656000000000000000000000000000000000000000000000000000000000000
 
6344615078613907108944478214167079556800347252909424775702164305255438824466336972800000000000000000000000000000000000000000000000000000000000
 
334663598080865760026708836849142963723115154234187056391987523550389627795800064000000000000000000000000000000000000000000000000000000000000
 
-288773271922619953467862474605614998797871939105084483441915655772577003248549888000000000000000000000000000000000000000000000000000000000000
 
-9582692103998878106713557270940868406089076248462124354404379494663087955801632931840000000000000000000000000000000000000000000000000000000000
 
1382256483826207466042469945410261385827466779265672674951434879174671096076881100800000000000000000000000000000000000000000000000000000000000
 
-9148863814021944631860921874692863015677887705283996386347714474595015801587273564160000000000000000000000000000000000000000000000000000000000
 
-1861079550474832304572035989162753468854355362597220825683599511484893104764690104320000000000000000000000000000000000000000000000000000000000
 
-2588136045987720143419931922111634613063113259499457378283894683382182100471780474880000000000000000000000000000000000000000000000000000000000
 
14048208674126637750886377014435214704631554904933398157055867517012714530371042017280000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-12619697597900205131739803493992587966974270745441117638097042856152399064680366080000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
404906926973622727268936890946372411559334427696854923866821234270505636368220160000000000000000000000000000000000000000000000000000000000000000
 
1412050932270462278279917059692165667086919734792623865109436990043755166175540019200000000000000000000000000000000000000000000000000000000000000
 
-3838627846465582535523744566141936005095839853322020557148313415505963638386065408000000000000000000000000000000000000000000000000000000000000000
 
14568404852164168090931738991718475431522831258185801064487529799626992380496754769920000000000000000000000000000000000000000000000000000000000000
 
5563605332537715879513251056982129628983282022475255194361969893315657644513553285120000000000000000000000000000000000000000000000000000000000000
 
2689632628238984717308508751315231388399134558043123111041994659983273314745529139200000000000000000000000000000000000000000000000000000000000000
 
-49926689762535611664878508945096247008451679019213116667582487004100154536950570680320000000000000000000000000000000000000000000000000000000000000
 
5300272991118086155330717467476886946129193713085269408000757999584007607165753753600000000000000000000000000000000000000000000000000000000000000
 
-2633134536329487388658096740817583039660855416032710642656379312250951449565986816000000000000000000000000000000000000000000000000000000000000000
 
-19457347888350428949725093079550333370491249323104540365995345940055171257511549337600000000000000000000000000000000000000000000000000000000000000
 
-51233917282516978689328091192972894895649293650696079617122901839102382570012399370240000000000000000000000000000000000000000000000000000000000000
 
12470803011268440683770970262022954941100868632293402296780711900442972930090907729920000000000000000000000000000000000000000000000000000000000000
 
-7991065447507950127244304150265455975619748230531343422724091294735417282808460083200000000000000000000000000000000000000000000000000000000000000
 
9992768748816903696587553187313150301960546923332344021730908780777316148534480732160000000000000000000000000000000000000000000000000000000000000
 
527095166977363572042066418037400167863906367918844613817380349591863663778385100800000000000000000000000000000000000000000000000000000000000000
 
-454817903278126426711883397503843623106648304090508061421017157841808780116466073600000000000000000000000000000000000000000000000000000000000000
 
-4189321339212455784250662482922271736124525167266720218871052676378690738503735574528000000000000000000000000000000000000000000000000000000000000
 
-3880400884965821704218215513095280541469389780468302003238070636253044574725487984640000000000000000000000000000000000000000000000000000000000000
 
-20769788096426266181577812913613523585047705591524617598098559896987959016098860367872000000000000000000000000000000000000000000000000000000000000
 
3530084878127044147749822705992868325645216925575229430254016711761321681111960518656000000000000000000000000000000000000000000000000000000000000
 
-7256478067101510919084823257811956683251919611562807015597588926077341372542506500096000000000000000000000000000000000000000000000000000000000000
 
9405273483066047684852321875790934489084634063865455518161172140293407128136582168576000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
404906926973622727268936890946372411559334427696854923866821234270505636368220160000000000000000000000000000000000000000000000000000000000000000
 
1412050932270462278279917059692165667086919734792623865109436990043755166175540019200000000000000000000000000000000000000000000000000000000000000
 
-3838627846465582535523744566141936005095839853322020557148313415505963638386065408000000000000000000000000000000000000000000000000000000000000000
 
14568404852164168090931738991718475431522831258185801064487529799626992380496754769920000000000000000000000000000000000000000000000000000000000000
 
5563605332537715879513251056982129628983282022475255194361969893315657644513553285120000000000000000000000000000000000000000000000000000000000000
 
2689632628238984717308508751315231388399134558043123111041994659983273314745529139200000000000000000000000000000000000000000000000000000000000000
 
-49926689762535611664878508945096247008451679019213116667582487004100154536950570680320000000000000000000000000000000000000000000000000000000000000
 
5300272991118086155330717467476886946129193713085269408000757999584007607165753753600000000000000000000000000000000000000000000000000000000000000
 
-2633134536329487388658096740817583039660855416032710642656379312250951449565986816000000000000000000000000000000000000000000000000000000000000000
 
-19457347888350428949725093079550333370491249323104540365995345940055171257511549337600000000000000000000000000000000000000000000000000000000000000
 
-51233917282516978689328091192972894895649293650696079617122901839102382570012399370240000000000000000000000000000000000000000000000000000000000000
 
12470803011268440683770970262022954941100868632293402296780711900442972930090907729920000000000000000000000000000000000000000000000000000000000000
 
-7991065447507950127244304150265455975619748230531343422724091294735417282808460083200000000000000000000000000000000000000000000000000000000000000
 
9992768748816903696587553187313150301960546923332344021730908780777316148534480732160000000000000000000000000000000000000000000000000000000000000
 
527095166977363572042066418037400167863906367918844613817380349591863663778385100800000000000000000000000000000000000000000000000000000000000000
 
-454817903278126426711883397503843623106648304090508061421017157841808780116466073600000000000000000000000000000000000000000000000000000000000000
 
-4189321339212455784250662482922271736124525167266720218871052676378690738503735574528000000000000000000000000000000000000000000000000000000000000
 
-3880400884965821704218215513095280541469389780468302003238070636253044574725487984640000000000000000000000000000000000000000000000000000000000000
 
-20769788096426266181577812913613523585047705591524617598098559896987959016098860367872000000000000000000000000000000000000000000000000000000000000
 
3530084878127044147749822705992868325645216925575229430254016711761321681111960518656000000000000000000000000000000000000000000000000000000000000
 
-7256478067101510919084823257811956683251919611562807015597588926077341372542506500096000000000000000000000000000000000000000000000000000000000000
 
9405273483066047684852321875790934489084634063865455518161172140293407128136582168576000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
5300272991118086155330717467476886946129193713085269408000757999584007607165753753600000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
85030454664460772726476747098738206427460229816339534012032459196806183637326233600000000000000000000000000000000000000000000000000000000000000000
 
296530695776797078438782582535354790088253144306451011672981767909188584896863404032000000000000000000000000000000000000000000000000000000000000000
 
-806111847757772332459986358889806561070126369197624317001145817256252364061073735680000000000000000000000000000000000000000000000000000000000000000
 
3059365018954475299095665188260879840619794564219018223542381257921668399904318501683200000000000000000000000000000000000000000000000000000000000000
 
1168357119832920334697782721966247222086489224719803590816013677596288105347846189875200000000000000000000000000000000000000000000000000000000000000
 
564822851930186790634786837776198591563818257189055853318818878596487396096561119232000000000000000000000000000000000000000000000000000000000000000
 
-10484604850132478449624486878470211871774852594034754500192322270861032452759619842867200000000000000000000000000000000000000000000000000000000000000
 
-552958252629192351618200315571692438328779637366869234957839655572699804408857231360000000000000000000000000000000000000000000000000000000000000000
 
-4086043056553590079442269546705570007803162357851953476859022647411585964077425360896000000000000000000000000000000000000000000000000000000000000000
 
-6306893316789373154281096477843722893337828947654550416875172666560933949683370714726400000000000000000000000000000000000000000000000000000000000000
 
10966798593377358238237783766300917477784662510890913799925143348437836296605152785203200000000000000000000000000000000000000000000000000000000000000
 
-1678123743976669526721303871555745754880147128411582118772059171894437629389776617472000000000000000000000000000000000000000000000000000000000000000
 
2098481437251549776283386169335761563411714853899792244563490843963236391192240953753600000000000000000000000000000000000000000000000000000000000000
 
110689985065246350128833947787854035251420337262957368901649873414291369393460871168000000000000000000000000000000000000000000000000000000000000000
 
-95511759688406549609495513475807160852396143859006692898413603146779843824457875456000000000000000000000000000000000000000000000000000000000000000
 
-3169475413397628933795509067363692225313961969178847630219248517859816341381390092206080000000000000000000000000000000000000000000000000000000000000
 
457181332025518119393546934444443953362434637242121237240187086287022465027428424089600000000000000000000000000000000000000000000000000000000000000
 
-3025986706487758186987999910054664442435461358522681804784506562472301476374990731345920000000000000000000000000000000000000000000000000000000000000
 
-615552061319550784737200903415580709823578036179030788094850538423628394400921252003840000000000000000000000000000000000000000000000000000000000000
 
-856025997210438437436142483238423148270624710579445527867398166528656729731041392066560000000000000000000000000000000000000000000000000000000000000
 
4646445018967385436105669197524447263556886784806721440446228181251955330920222147215360000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
85030454664460772726476747098738206427460229816339534012032459196806183637326233600000000000000000000000000000000000000000000000000000000000000000
 
296530695776797078438782582535354790088253144306451011672981767909188584896863404032000000000000000000000000000000000000000000000000000000000000000
 
-806111847757772332459986358889806561070126369197624317001145817256252364061073735680000000000000000000000000000000000000000000000000000000000000000
 
3059365018954475299095665188260879840619794564219018223542381257921668399904318501683200000000000000000000000000000000000000000000000000000000000000
 
1168357119832920334697782721966247222086489224719803590816013677596288105347846189875200000000000000000000000000000000000000000000000000000000000000
 
564822851930186790634786837776198591563818257189055853318818878596487396096561119232000000000000000000000000000000000000000000000000000000000000000
 
-10484604850132478449624486878470211871774852594034754500192322270861032452759619842867200000000000000000000000000000000000000000000000000000000000000
 
-552958252629192351618200315571692438328779637366869234957839655572699804408857231360000000000000000000000000000000000000000000000000000000000000000
 
-4086043056553590079442269546705570007803162357851953476859022647411585964077425360896000000000000000000000000000000000000000000000000000000000000000
 
-6306893316789373154281096477843722893337828947654550416875172666560933949683370714726400000000000000000000000000000000000000000000000000000000000000
 
10966798593377358238237783766300917477784662510890913799925143348437836296605152785203200000000000000000000000000000000000000000000000000000000000000
 
-1678123743976669526721303871555745754880147128411582118772059171894437629389776617472000000000000000000000000000000000000000000000000000000000000000
 
2098481437251549776283386169335761563411714853899792244563490843963236391192240953753600000000000000000000000000000000000000000000000000000000000000
 
110689985065246350128833947787854035251420337262957368901649873414291369393460871168000000000000000000000000000000000000000000000000000000000000000
 
-95511759688406549609495513475807160852396143859006692898413603146779843824457875456000000000000000000000000000000000000000000000000000000000000000
 
-3169475413397628933795509067363692225313961969178847630219248517859816341381390092206080000000000000000000000000000000000000000000000000000000000000
 
457181332025518119393546934444443953362434637242121237240187086287022465027428424089600000000000000000000000000000000000000000000000000000000000000
 
-3025986706487758186987999910054664442435461358522681804784506562472301476374990731345920000000000000000000000000000000000000000000000000000000000000
 
-615552061319550784737200903415580709823578036179030788094850538423628394400921252003840000000000000000000000000000000000000000000000000000000000000
 
-856025997210438437436142483238423148270624710579445527867398166528656729731041392066560000000000000000000000000000000000000000000000000000000000000
 
4646445018967385436105669197524447263556886784806721440446228181251955330920222147215360000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
296530695776797078438782582535354790088253144306451011672981767909188584896863404032000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
340121818657843090905906988394952825709840919265358136048129836787224734549304934400000000000000000000000000000000000000000000000000000000000000000
 
-3224447391031089329839945435559226244280505476790497268004583269025009456244294942720000000000000000000000000000000000000000000000000000000000000000
 
-2668776261991173705949043242818193110794278298758059105056835911182697264071770636288000000000000000000000000000000000000000000000000000000000000000
 
12237460075817901196382660753043519362479178256876072894169525031686673599617274006732800000000000000000000000000000000000000000000000000000000000000
 
4673428479331681338791130887864988888345956898879214363264054710385152421391384759500800000000000000000000000000000000000000000000000000000000000000
 
2259291407720747162539147351104794366255273028756223413275275514385949584386244476928000000000000000000000000000000000000000000000000000000000000000
 
-41938419400529913798497947513880847487099410376139018000769289083444129811038479371468800000000000000000000000000000000000000000000000000000000000000
 
-2211833010516769406472801262286769753315118549467476939831358622290799217635428925440000000000000000000000000000000000000000000000000000000000000000
 
-16344172226214360317769078186822280031212649431407813907436090589646343856309701443584000000000000000000000000000000000000000000000000000000000000000
 
-25227573267157492617124385911374891573351315790618201667500690666243735798733482858905600000000000000000000000000000000000000000000000000000000000000
 
43867194373509432952951135065203669911138650043563655199700573393751345186420611140812800000000000000000000000000000000000000000000000000000000000000
 
-6712494975906678106885215486222983019520588513646328475088236687577750517559106469888000000000000000000000000000000000000000000000000000000000000000
 
8393925749006199105133544677343046253646859415599168978253963375852945564768963815014400000000000000000000000000000000000000000000000000000000000000
 
442759940260985400515335791151416141005681349051829475606599493657165477573843484672000000000000000000000000000000000000000000000000000000000000000
 
-382047038753626198437982053903228643409584575436026771593654412587119375297831501824000000000000000000000000000000000000000000000000000000000000000
 
-12677901653590515735182036269454768901255847876715390520876994071439265365525560368824320000000000000000000000000000000000000000000000000000000000000
 
1828725328102072477574187737777775813449738548968484948960748345148089860109713696358400000000000000000000000000000000000000000000000000000000000000
 
-12103946825951032747951999640218657769741845434090727219138026249889205905499962925383680000000000000000000000000000000000000000000000000000000000000
 
-2462208245278203138948803613662322839294312144716123152379402153694513577603685008015360000000000000000000000000000000000000000000000000000000000000
 
-3424103988841753749744569932953692593082498842317782111469592666114626918924165568266240000000000000000000000000000000000000000000000000000000000000
 
18585780075869541744422676790097789054227547139226885761784912725007821323680888588861440000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
340121818657843090905906988394952825709840919265358136048129836787224734549304934400000000000000000000000000000000000000000000000000000000000000000
 
-3224447391031089329839945435559226244280505476790497268004583269025009456244294942720000000000000000000000000000000000000000000000000000000000000000
 
-2668776261991173705949043242818193110794278298758059105056835911182697264071770636288000000000000000000000000000000000000000000000000000000000000000
 
12237460075817901196382660753043519362479178256876072894169525031686673599617274006732800000000000000000000000000000000000000000000000000000000000000
 
4673428479331681338791130887864988888345956898879214363264054710385152421391384759500800000000000000000000000000000000000000000000000000000000000000
 
2259291407720747162539147351104794366255273028756223413275275514385949584386244476928000000000000000000000000000000000000000000000000000000000000000
 
-41938419400529913798497947513880847487099410376139018000769289083444129811038479371468800000000000000000000000000000000000000000000000000000000000000
 
-2211833010516769406472801262286769753315118549467476939831358622290799217635428925440000000000000000000000000000000000000000000000000000000000000000
 
-16344172226214360317769078186822280031212649431407813907436090589646343856309701443584000000000000000000000000000000000000000000000000000000000000000
 
-25227573267157492617124385911374891573351315790618201667500690666243735798733482858905600000000000000000000000000000000000000000000000000000000000000
 
43867194373509432952951135065203669911138650043563655199700573393751345186420611140812800000000000000000000000000000000000000000000000000000000000000
 
-6712494975906678106885215486222983019520588513646328475088236687577750517559106469888000000000000000000000000000000000000000000000000000000000000000
 
8393925749006199105133544677343046253646859415599168978253963375852945564768963815014400000000000000000000000000000000000000000000000000000000000000
 
442759940260985400515335791151416141005681349051829475606599493657165477573843484672000000000000000000000000000000000000000000000000000000000000000
 
-382047038753626198437982053903228643409584575436026771593654412587119375297831501824000000000000000000000000000000000000000000000000000000000000000
 
-12677901653590515735182036269454768901255847876715390520876994071439265365525560368824320000000000000000000000000000000000000000000000000000000000000
 
1828725328102072477574187737777775813449738548968484948960748345148089860109713696358400000000000000000000000000000000000000000000000000000000000000
 
-12103946825951032747951999640218657769741845434090727219138026249889205905499962925383680000000000000000000000000000000000000000000000000000000000000
 
-2462208245278203138948803613662322839294312144716123152379402153694513577603685008015360000000000000000000000000000000000000000000000000000000000000
 
-3424103988841753749744569932953692593082498842317782111469592666114626918924165568266240000000000000000000000000000000000000000000000000000000000000
 
18585780075869541744422676790097789054227547139226885761784912725007821323680888588861440000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-25227573267157492617124385911374891573351315790618201667500690666243735798733482858905600000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
24488770943364702545225303164436603451108546187105785795465348248680180887549955276800000000000000000000000000000000000000000000000000000000000000000
 
-232160212154238431748476071360264289588196394328915803296329995369800680849589235875840000000000000000000000000000000000000000000000000000000000000000
 
-192151890863364506828331113482909903977188037510580255564092185605154203013167485812736000000000000000000000000000000000000000000000000000000000000000
 
881097125458888886139551574219133394098500834495077248380205802281440499172443728484761600000000000000000000000000000000000000000000000000000000000000
 
336486850511881056392961423926279199960908896719303434155011939147730974340179702684057600000000000000000000000000000000000000000000000000000000000000
 
162668981355893795702818609279545194370379658070448085755819837035788370075809602338816000000000000000000000000000000000000000000000000000000000000000
 
-3019566196838153793491852220999421019071157547082009296055388814007977346394770514745753600000000000000000000000000000000000000000000000000000000000000
 
-159251976757207397266041690884647422238688535561658339667857820804937543669750882631680000000000000000000000000000000000000000000000000000000000000000
 
-1176780400287433942879373629451204162247310759061362601335398522454536757654298503938048000000000000000000000000000000000000000000000000000000000000000
 
5277554149333908552450930141250155125763493329548512114448499300314570660515896562286592000000000000000000000000000000000000000000000000000000000000000
 
2165595554786255901102325005686308837796405785032375524881219478449994221602760034353152000000000000000000000000000000000000000000000000000000000000000
 
604362653928446335569615216768699330262573877923140166434285363061412080663365394681036800000000000000000000000000000000000000000000000000000000000000
 
31878715698790948837104176962901962152409057131731722243675163543315914385316730896384000000000000000000000000000000000000000000000000000000000000000
 
-27507386790261086287534707881032462325490089431393927554743117706272595021443868131328000000000000000000000000000000000000000000000000000000000000000
 
-912808919058517132933106611400743360890421047123508117503143573143627106317840346555351040000000000000000000000000000000000000000000000000000000000000
 
131668223623349218385341517119999858568381175525730916325173880850662469927899386137804800000000000000000000000000000000000000000000000000000000000000
 
-871484171468474357852543974095743359421412871254532359777937889992022825195997330627624960000000000000000000000000000000000000000000000000000000000000
 
-177278993660030626004313860183687244429190474419560866971316955066004977587465320577105920000000000000000000000000000000000000000000000000000000000000
 
-246535487196606269981609035172665866701939916646880312025810671960253138162539920915169280000000000000000000000000000000000000000000000000000000000000
 
2952740854560686533094393427215033872598867604623900681568557918840162226423966881367982080000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
24488770943364702545225303164436603451108546187105785795465348248680180887549955276800000000000000000000000000000000000000000000000000000000000000000
 
-232160212154238431748476071360264289588196394328915803296329995369800680849589235875840000000000000000000000000000000000000000000000000000000000000000
 
-192151890863364506828331113482909903977188037510580255564092185605154203013167485812736000000000000000000000000000000000000000000000000000000000000000
 
881097125458888886139551574219133394098500834495077248380205802281440499172443728484761600000000000000000000000000000000000000000000000000000000000000
 
336486850511881056392961423926279199960908896719303434155011939147730974340179702684057600000000000000000000000000000000000000000000000000000000000000
 
162668981355893795702818609279545194370379658070448085755819837035788370075809602338816000000000000000000000000000000000000000000000000000000000000000
 
-3019566196838153793491852220999421019071157547082009296055388814007977346394770514745753600000000000000000000000000000000000000000000000000000000000000
 
-159251976757207397266041690884647422238688535561658339667857820804937543669750882631680000000000000000000000000000000000000000000000000000000000000000
 
-1176780400287433942879373629451204162247310759061362601335398522454536757654298503938048000000000000000000000000000000000000000000000000000000000000000
 
5277554149333908552450930141250155125763493329548512114448499300314570660515896562286592000000000000000000000000000000000000000000000000000000000000000
 
2165595554786255901102325005686308837796405785032375524881219478449994221602760034353152000000000000000000000000000000000000000000000000000000000000000
 
604362653928446335569615216768699330262573877923140166434285363061412080663365394681036800000000000000000000000000000000000000000000000000000000000000
 
31878715698790948837104176962901962152409057131731722243675163543315914385316730896384000000000000000000000000000000000000000000000000000000000000000
 
-27507386790261086287534707881032462325490089431393927554743117706272595021443868131328000000000000000000000000000000000000000000000000000000000000000
 
-912808919058517132933106611400743360890421047123508117503143573143627106317840346555351040000000000000000000000000000000000000000000000000000000000000
 
131668223623349218385341517119999858568381175525730916325173880850662469927899386137804800000000000000000000000000000000000000000000000000000000000000
 
-871484171468474357852543974095743359421412871254532359777937889992022825195997330627624960000000000000000000000000000000000000000000000000000000000000
 
-177278993660030626004313860183687244429190474419560866971316955066004977587465320577105920000000000000000000000000000000000000000000000000000000000000
 
-246535487196606269981609035172665866701939916646880312025810671960253138162539920915169280000000000000000000000000000000000000000000000000000000000000
 
2952740854560686533094393427215033872598867604623900681568557918840162226423966881367982080000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-232160212154238431748476071360264289588196394328915803296329995369800680849589235875840000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
293865251320376430542703637973239241413302554245269429545584178984162170650599463321600000000000000000000000000000000000000000000000000000000000000000
 
1176580491953202394287167708609045496096689464806773982675843703285159776585828708384768000000000000000000000000000000000000000000000000000000000000000
 
10573165505506666633674618890629600729182010013940926980562469627377285990069324741817139200000000000000000000000000000000000000000000000000000000000000
 
4037842206142572676715537087115350399530906760631641209860143269772771692082156432208691200000000000000000000000000000000000000000000000000000000000000
 
4178883818776291771472569284484757212587535097920484459333939916656412255292606245765120000000000000000000000000000000000000000000000000000000000000000
 
1952027776270725548433823311354542332444555896845377029069838044429460440909715228065792000000000000000000000000000000000000000000000000000000000000000
 
-36234794362057845521902226651993052228853890564984111552664665768095728156737246176949043200000000000000000000000000000000000000000000000000000000000000
 
-1911023721086488767192500290615769066864262426739900076014293849659250524037010591580160000000000000000000000000000000000000000000000000000000000000000
 
-14121364803449207314552483553414449946967729108736351216024782269454441091851582047256576000000000000000000000000000000000000000000000000000000000000000
 
63330649792006902629411161695001861509161919954582145373381991603774847926190758747439104000000000000000000000000000000000000000000000000000000000000000
 
25987146657435070813227900068235706053556869420388506298574633741399930659233120412237824000000000000000000000000000000000000000000000000000000000000000
 
7252351847141356026835382601224391963150886535077681997211424356736944967960384736172441600000000000000000000000000000000000000000000000000000000000000
 
382544588385491386045250123554823545828908685580780666924101962519790972623800770756608000000000000000000000000000000000000000000000000000000000000000
 
-330088641483133035450416494572389547905881073176727130656917412475271140257326417575936000000000000000000000000000000000000000000000000000000000000000
 
-10953707028702205595197279336808920330685052565482097410037722877723525275814084158664212480000000000000000000000000000000000000000000000000000000000000
 
1580018683480190620624098205439998302820574106308770995902086570207949639134792633653657600000000000000000000000000000000000000000000000000000000000000
 
-13708053027781030338709192688192620367291703975659209563483874615081483434246217269793259520000000000000000000000000000000000000000000000000000000000000
 
-2127347923920367512051766322204246933150285693034730403655803460792059731049583846925271040000000000000000000000000000000000000000000000000000000000000
 
-2958425846359275239779308422071990400423278999762563744309728063523037657950479050982031360000000000000000000000000000000000000000000000000000000000000
 
35432890254728238397132721126580406471186411255486808178822695026081946717087602576415784960000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
293865251320376430542703637973239241413302554245269429545584178984162170650599463321600000000000000000000000000000000000000000000000000000000000000000
 
1176580491953202394287167708609045496096689464806773982675843703285159776585828708384768000000000000000000000000000000000000000000000000000000000000000
 
10573165505506666633674618890629600729182010013940926980562469627377285990069324741817139200000000000000000000000000000000000000000000000000000000000000
 
4037842206142572676715537087115350399530906760631641209860143269772771692082156432208691200000000000000000000000000000000000000000000000000000000000000
 
4178883818776291771472569284484757212587535097920484459333939916656412255292606245765120000000000000000000000000000000000000000000000000000000000000000
 
1952027776270725548433823311354542332444555896845377029069838044429460440909715228065792000000000000000000000000000000000000000000000000000000000000000
 
-36234794362057845521902226651993052228853890564984111552664665768095728156737246176949043200000000000000000000000000000000000000000000000000000000000000
 
-1911023721086488767192500290615769066864262426739900076014293849659250524037010591580160000000000000000000000000000000000000000000000000000000000000000
 
-14121364803449207314552483553414449946967729108736351216024782269454441091851582047256576000000000000000000000000000000000000000000000000000000000000000
 
63330649792006902629411161695001861509161919954582145373381991603774847926190758747439104000000000000000000000000000000000000000000000000000000000000000
 
25987146657435070813227900068235706053556869420388506298574633741399930659233120412237824000000000000000000000000000000000000000000000000000000000000000
 
7252351847141356026835382601224391963150886535077681997211424356736944967960384736172441600000000000000000000000000000000000000000000000000000000000000
 
382544588385491386045250123554823545828908685580780666924101962519790972623800770756608000000000000000000000000000000000000000000000000000000000000000
 
-330088641483133035450416494572389547905881073176727130656917412475271140257326417575936000000000000000000000000000000000000000000000000000000000000000
 
-10953707028702205595197279336808920330685052565482097410037722877723525275814084158664212480000000000000000000000000000000000000000000000000000000000000
 
1580018683480190620624098205439998302820574106308770995902086570207949639134792633653657600000000000000000000000000000000000000000000000000000000000000
 
-13708053027781030338709192688192620367291703975659209563483874615081483434246217269793259520000000000000000000000000000000000000000000000000000000000000
 
-2127347923920367512051766322204246933150285693034730403655803460792059731049583846925271040000000000000000000000000000000000000000000000000000000000000
 
-2958425846359275239779308422071990400423278999762563744309728063523037657950479050982031360000000000000000000000000000000000000000000000000000000000000
 
35432890254728238397132721126580406471186411255486808178822695026081946717087602576415784960000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
1176580491953202394287167708609045496096689464806773982675843703285159776585828708384768000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
141055320633780686660497746227154835878385226037729326181880405912397841912287742394368000000000000000000000000000000000000000000000000000000000000000000
 
3550271125071849681167647717144885387066055260302065869122091981683530204778041870005567488000000000000000000000000000000000000000000000000000000000000000
 
921598713900868016159344901577152883147295547510135059700939809852552365229279083415732224000000000000000000000000000000000000000000000000000000000000000
 
-2780465208253007289653364982068913616079315895832124021045041024968952088610700187741978624000000000000000000000000000000000000000000000000000000000000000
 
-903613817820059438812544800211746941002257508971602418695047964123002708417916448039501824000000000000000000000000000000000000000000000000000000000000000
 
301619866955218970333164626801295751681174519490123023308566661552154732280315806943805440000000000000000000000000000000000000000000000000000000000000000
 
-16658515066808967556477876142784620680285533245152946580089313097836009814644321050903445504000000000000000000000000000000000000000000000000000000000000000
 
194135781172278395057382671920492506855953761693117707141514211042051363136661736883486720000000000000000000000000000000000000000000000000000000000000000
 
-508282772523783434332056450119107654313769848796526360515964479819189023485078002022219776000000000000000000000000000000000000000000000000000000000000000
 
-423127579501169602651789701879770043734236389616306963763006692456673145371717026436874240000000000000000000000000000000000000000000000000000000000000000
 
-6778255105655619510985192105638935974544509972193448583691895489338131724088759382683156480000000000000000000000000000000000000000000000000000000000000000
 
31764721851320981241884759323295995345365978046840094373110010509325997505187711329205485568000000000000000000000000000000000000000000000000000000000000000
 
7232164303917317323800059890899841220596545756072304930494940497736579911742030902020014080000000000000000000000000000000000000000000000000000000000000000
 
1871566773635870017496138223210533903652154348981620550360929505139635010251571000292409344000000000000000000000000000000000000000000000000000000000000000
 
183621402425035865301720059306315301997876169078774720123568942009499666859424369963171840000000000000000000000000000000000000000000000000000000000000000
 
-158442547911903857016199917394746982994822915124829022715320357988130147323516680436449280000000000000000000000000000000000000000000000000000000000000000
 
-5257779373777058685694694081668281758728825231431406756818106981307292132390760396158821990400000000000000000000000000000000000000000000000000000000000000
 
1605546922276797221786327888809711942543491985689087345559609020065130865926497134190788608000000000000000000000000000000000000000000000000000000000000000
 
-2494777985273375849615366206041851813852312086507301322621730477433037304132187013988850073600000000000000000000000000000000000000000000000000000000000000
 
-1021127003481776405784847834658038527912137132656670593754785661180188670903800246524130099200000000000000000000000000000000000000000000000000000000000000
 
-1420044406252452115094068042594555392203173919886030597268669470491058075816229944471375052800000000000000000000000000000000000000000000000000000000000000
 
17007787322269554430623706140758595106169477402633667925834893612519334424202049236679576780800000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
141055320633780686660497746227154835878385226037729326181880405912397841912287742394368000000000000000000000000000000000000000000000000000000000000000000
 
3550271125071849681167647717144885387066055260302065869122091981683530204778041870005567488000000000000000000000000000000000000000000000000000000000000000
 
921598713900868016159344901577152883147295547510135059700939809852552365229279083415732224000000000000000000000000000000000000000000000000000000000000000
 
-2780465208253007289653364982068913616079315895832124021045041024968952088610700187741978624000000000000000000000000000000000000000000000000000000000000000
 
-903613817820059438812544800211746941002257508971602418695047964123002708417916448039501824000000000000000000000000000000000000000000000000000000000000000
 
301619866955218970333164626801295751681174519490123023308566661552154732280315806943805440000000000000000000000000000000000000000000000000000000000000000
 
-16658515066808967556477876142784620680285533245152946580089313097836009814644321050903445504000000000000000000000000000000000000000000000000000000000000000
 
194135781172278395057382671920492506855953761693117707141514211042051363136661736883486720000000000000000000000000000000000000000000000000000000000000000
 
-508282772523783434332056450119107654313769848796526360515964479819189023485078002022219776000000000000000000000000000000000000000000000000000000000000000
 
-423127579501169602651789701879770043734236389616306963763006692456673145371717026436874240000000000000000000000000000000000000000000000000000000000000000
 
-6778255105655619510985192105638935974544509972193448583691895489338131724088759382683156480000000000000000000000000000000000000000000000000000000000000000
 
31764721851320981241884759323295995345365978046840094373110010509325997505187711329205485568000000000000000000000000000000000000000000000000000000000000000
 
7232164303917317323800059890899841220596545756072304930494940497736579911742030902020014080000000000000000000000000000000000000000000000000000000000000000
 
1871566773635870017496138223210533903652154348981620550360929505139635010251571000292409344000000000000000000000000000000000000000000000000000000000000000
 
183621402425035865301720059306315301997876169078774720123568942009499666859424369963171840000000000000000000000000000000000000000000000000000000000000000
 
-158442547911903857016199917394746982994822915124829022715320357988130147323516680436449280000000000000000000000000000000000000000000000000000000000000000
 
-5257779373777058685694694081668281758728825231431406756818106981307292132390760396158821990400000000000000000000000000000000000000000000000000000000000000
 
1605546922276797221786327888809711942543491985689087345559609020065130865926497134190788608000000000000000000000000000000000000000000000000000000000000000
 
-2494777985273375849615366206041851813852312086507301322621730477433037304132187013988850073600000000000000000000000000000000000000000000000000000000000000
 
-1021127003481776405784847834658038527912137132656670593754785661180188670903800246524130099200000000000000000000000000000000000000000000000000000000000000
 
-1420044406252452115094068042594555392203173919886030597268669470491058075816229944471375052800000000000000000000000000000000000000000000000000000000000000
 
17007787322269554430623706140758595106169477402633667925834893612519334424202049236679576780800000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-2780465208253007289653364982068913616079315895832124021045041024968952088610700187741978624000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
282110641267561373320995492454309671756770452075458652363760811824795683824575484788736000000000000000000000000000000000000000000000000000000000000000000
 
7100542250143699362335295434289770774132110520604131738244183963367060409556083740011134976000000000000000000000000000000000000000000000000000000000000000
 
1843197427801736032318689803154305766294591095020270119401879619705104730458558166831464448000000000000000000000000000000000000000000000000000000000000000
 
-1807227635640118877625089600423493882004515017943204837390095928246005416835832896079003648000000000000000000000000000000000000000000000000000000000000000
 
603239733910437940666329253602591503362349038980246046617133323104309464560631613887610880000000000000000000000000000000000000000000000000000000000000000
 
-24975634508858913243995657339362500512333118802809521097043503120765163363456541538580955136000000000000000000000000000000000000000000000000000000000000000
 
388271562344556790114765343840985013711907523386235414283028422084102726273323473766973440000000000000000000000000000000000000000000000000000000000000000
 
-1016565545047566868664112900238215308627539697593052721031928959638378046970156004044439552000000000000000000000000000000000000000000000000000000000000000
 
-846255159002339205303579403759540087468472779232613927526013384913346290743434052873748480000000000000000000000000000000000000000000000000000000000000000
 
-13556510211311239021970384211277871949089019944386897167383790978676263448177518765366312960000000000000000000000000000000000000000000000000000000000000000
 
11121860833012029158613459928275654464317263583328496084180164099875808354442800750967914496000000000000000000000000000000000000000000000000000000000000000
 
63529443702641962483769518646591990690731956093680188746220021018651995010375422658410971136000000000000000000000000000000000000000000000000000000000000000
 
14464328607834634647600119781799682441193091512144609860989880995473159823484061804040028160000000000000000000000000000000000000000000000000000000000000000
 
3743133547271740034992276446421067807304308697963241100721859010279270020503142000584818688000000000000000000000000000000000000000000000000000000000000000
 
367242804850071730603440118612630603995752338157549440247137884018999333718848739926343680000000000000000000000000000000000000000000000000000000000000000
 
-316885095823807714032399834789493965989645830249658045430640715976260294647033360872898560000000000000000000000000000000000000000000000000000000000000000
 
-10515558747554117371389388163336563517457650462862813513636213962614584264781520792317643980800000000000000000000000000000000000000000000000000000000000000
 
3211093844553594443572655777619423885086983971378174691119218040130261731852994268381577216000000000000000000000000000000000000000000000000000000000000000
 
-4989555970546751699230732412083703627704624173014602645243460954866074608264374027977700147200000000000000000000000000000000000000000000000000000000000000
 
-2042254006963552811569695669316077055824274265313341187509571322360377341807600493048260198400000000000000000000000000000000000000000000000000000000000000
 
-2840088812504904230188136085189110784406347839772061194537338940982116151632459888942750105600000000000000000000000000000000000000000000000000000000000000
 
34015574644539108861247412281517190212338954805267335851669787225038668848404098473359153561600000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
282110641267561373320995492454309671756770452075458652363760811824795683824575484788736000000000000000000000000000000000000000000000000000000000000000000
 
7100542250143699362335295434289770774132110520604131738244183963367060409556083740011134976000000000000000000000000000000000000000000000000000000000000000
 
1843197427801736032318689803154305766294591095020270119401879619705104730458558166831464448000000000000000000000000000000000000000000000000000000000000000
 
-1807227635640118877625089600423493882004515017943204837390095928246005416835832896079003648000000000000000000000000000000000000000000000000000000000000000
 
603239733910437940666329253602591503362349038980246046617133323104309464560631613887610880000000000000000000000000000000000000000000000000000000000000000
 
-24975634508858913243995657339362500512333118802809521097043503120765163363456541538580955136000000000000000000000000000000000000000000000000000000000000000
 
388271562344556790114765343840985013711907523386235414283028422084102726273323473766973440000000000000000000000000000000000000000000000000000000000000000
 
-1016565545047566868664112900238215308627539697593052721031928959638378046970156004044439552000000000000000000000000000000000000000000000000000000000000000
 
-846255159002339205303579403759540087468472779232613927526013384913346290743434052873748480000000000000000000000000000000000000000000000000000000000000000
 
-13556510211311239021970384211277871949089019944386897167383790978676263448177518765366312960000000000000000000000000000000000000000000000000000000000000000
 
11121860833012029158613459928275654464317263583328496084180164099875808354442800750967914496000000000000000000000000000000000000000000000000000000000000000
 
63529443702641962483769518646591990690731956093680188746220021018651995010375422658410971136000000000000000000000000000000000000000000000000000000000000000
 
14464328607834634647600119781799682441193091512144609860989880995473159823484061804040028160000000000000000000000000000000000000000000000000000000000000000
 
3743133547271740034992276446421067807304308697963241100721859010279270020503142000584818688000000000000000000000000000000000000000000000000000000000000000
 
367242804850071730603440118612630603995752338157549440247137884018999333718848739926343680000000000000000000000000000000000000000000000000000000000000000
 
-316885095823807714032399834789493965989645830249658045430640715976260294647033360872898560000000000000000000000000000000000000000000000000000000000000000
 
-10515558747554117371389388163336563517457650462862813513636213962614584264781520792317643980800000000000000000000000000000000000000000000000000000000000000
 
3211093844553594443572655777619423885086983971378174691119218040130261731852994268381577216000000000000000000000000000000000000000000000000000000000000000
 
-4989555970546751699230732412083703627704624173014602645243460954866074608264374027977700147200000000000000000000000000000000000000000000000000000000000000
 
-2042254006963552811569695669316077055824274265313341187509571322360377341807600493048260198400000000000000000000000000000000000000000000000000000000000000
 
-2840088812504904230188136085189110784406347839772061194537338940982116151632459888942750105600000000000000000000000000000000000000000000000000000000000000
 
34015574644539108861247412281517190212338954805267335851669787225038668848404098473359153561600000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-1807227635640118877625089600423493882004515017943204837390095928246005416835832896079003648000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0
 0 0 1)) (
108330486246743567355262269102454913954599853596976122507684151740721542588636986158874624000000000000000000000000000000000000000000000000000000000000000000
 
2726608224055180555136753446767271977266730439911986587485766641932951197269536156164275830784000000000000000000000000000000000000000000000000000000000000000
 
707787812275866636410376884411253414257122980487783725850321773966760216496086336063282348032000000000000000000000000000000000000000000000000000000000000000
 
231644057821608169215870433383395137291142030968414481900979196072054834391282539732842577920000000000000000000000000000000000000000000000000000000000000000
 
-1463854384868496290876322576343030044423657164533995918285977701879264387637024645823992954880000000000000000000000000000000000000000000000000000000000000000
 
-11786425228704567122008816282829745263371403367079849978693671751192719313022848919551076204544000000000000000000000000000000000000000000000000000000000000000
 
149096279940309807404069892034938245265372488980314399084682914080295446888956213926517800960000000000000000000000000000000000000000000000000000000000000000
 
-390361169298265677567019353691474678512975243875732244876260720501137170036539905553064787968000000000000000000000000000000000000000000000000000000000000000
 
-324961981056898254836574491043663393587893547225323748169989139806724975645478676303519416320000000000000000000000000000000000000000000000000000000000000000
 
-5205699921143515784436627537130702828450183658644568512275375735811685164100167205900664176640000000000000000000000000000000000000000000000000000000000000000
 
1343085790139626615154923459771791225450514886930150659753227610593781632831986196723693256704000000000000000000000000000000000000000000000000000000000000000
 
24395306381814513593767495160291324425241071139973192478548488071162366083984162300829812916224000000000000000000000000000000000000000000000000000000000000000
 
5554302185408499704678445996211078057418147140663530186620114302261693372217879732751370813440000000000000000000000000000000000000000000000000000000000000000
 
1437363282152348173437034155425690038004854540017884582677193859947239687873206528224570376192000000000000000000000000000000000000000000000000000000000000000
 
141021237062427544551721005547250151934368897852498985054900947463295744148037916131715973120000000000000000000000000000000000000000000000000000000000000000
 
-121683876796342162188441536559165682940023998815868689445366034934883953144460810575193047040000000000000000000000000000000000000000000000000000000000000000
 
-3127131830698161156290479896107799474173462208695945151191697813808013627590844204626157450035200000000000000000000000000000000000000000000000000000000000000
 
727036298329346980596874730487280484912137639985121726920552867501138988317516588156404629504000000000000000000000000000000000000000000000000000000000000000
 
-2794302123611050427030394792045960219692769981158004966745075627796131282155734414237832629452800000000000000000000000000000000000000000000000000000000000000
 
-784225538674004279642763137017373589436521317880323016003675387786384899254118589330531916185600000000000000000000000000000000000000000000000000000000000000
 
-1799027337172809824421279380078628142957807457506207794959255757209566725626511092616985470566400000000000000000000000000000000000000000000000000000000000000
 
11305355401660822253667419224490964988229770047781861865098025052159731572622744238781123421798400000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
108330486246743567355262269102454913954599853596976122507684151740721542588636986158874624000000000000000000000000000000000000000000000000000000000000000000
 
2726608224055180555136753446767271977266730439911986587485766641932951197269536156164275830784000000000000000000000000000000000000000000000000000000000000000
 
707787812275866636410376884411253414257122980487783725850321773966760216496086336063282348032000000000000000000000000000000000000000000000000000000000000000
 
231644057821608169215870433383395137291142030968414481900979196072054834391282539732842577920000000000000000000000000000000000000000000000000000000000000000
 
-1463854384868496290876322576343030044423657164533995918285977701879264387637024645823992954880000000000000000000000000000000000000000000000000000000000000000
 
-11786425228704567122008816282829745263371403367079849978693671751192719313022848919551076204544000000000000000000000000000000000000000000000000000000000000000
 
149096279940309807404069892034938245265372488980314399084682914080295446888956213926517800960000000000000000000000000000000000000000000000000000000000000000
 
-390361169298265677567019353691474678512975243875732244876260720501137170036539905553064787968000000000000000000000000000000000000000000000000000000000000000
 
-324961981056898254836574491043663393587893547225323748169989139806724975645478676303519416320000000000000000000000000000000000000000000000000000000000000000
 
-5205699921143515784436627537130702828450183658644568512275375735811685164100167205900664176640000000000000000000000000000000000000000000000000000000000000000
 
1343085790139626615154923459771791225450514886930150659753227610593781632831986196723693256704000000000000000000000000000000000000000000000000000000000000000
 
24395306381814513593767495160291324425241071139973192478548488071162366083984162300829812916224000000000000000000000000000000000000000000000000000000000000000
 
5554302185408499704678445996211078057418147140663530186620114302261693372217879732751370813440000000000000000000000000000000000000000000000000000000000000000
 
1437363282152348173437034155425690038004854540017884582677193859947239687873206528224570376192000000000000000000000000000000000000000000000000000000000000000
 
141021237062427544551721005547250151934368897852498985054900947463295744148037916131715973120000000000000000000000000000000000000000000000000000000000000000
 
-121683876796342162188441536559165682940023998815868689445366034934883953144460810575193047040000000000000000000000000000000000000000000000000000000000000000
 
-3127131830698161156290479896107799474173462208695945151191697813808013627590844204626157450035200000000000000000000000000000000000000000000000000000000000000
 
727036298329346980596874730487280484912137639985121726920552867501138988317516588156404629504000000000000000000000000000000000000000000000000000000000000000
 
-2794302123611050427030394792045960219692769981158004966745075627796131282155734414237832629452800000000000000000000000000000000000000000000000000000000000000
 
-784225538674004279642763137017373589436521317880323016003675387786384899254118589330531916185600000000000000000000000000000000000000000000000000000000000000
 
-1799027337172809824421279380078628142957807457506207794959255757209566725626511092616985470566400000000000000000000000000000000000000000000000000000000000000
 
11305355401660822253667419224490964988229770047781861865098025052159731572622744238781123421798400000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
149096279940309807404069892034938245265372488980314399084682914080295446888956213926517800960000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
170620515838621118584538073836366489478494769415237392949602538991636429577103253200227532800000000000000000000000000000000000000000000000000000000000000000000
 
4294407952886909374340386678658453364195100442861378875290082461044398135699519445958734433484800000000000000000000000000000000000000000000000000000000000000000
 
1114765804334489952346343592947724127454968694268259368214256793997647340981335979299669698150400000000000000000000000000000000000000000000000000000000000000000
 
364839391069032866514995932578847341233548698775252808994042233813486364166270000079227060224000000000000000000000000000000000000000000000000000000000000000000
 
-2305570656167881658130208057740272319967260034141043571300414880459841410528313817172788903936000000000000000000000000000000000000000000000000000000000000000000
 
-18563619735209693217163885645456848789809960303150763716442533008128532918010987048292945022156800000000000000000000000000000000000000000000000000000000000000000
 
-677439279219698561277764836718746681669392454476010333295677458703015130500911961095214517452800000000000000000000000000000000000000000000000000000000000000000
 
-511815120164614751367604823393769844900932336879884903367732895195591836641628915178043080704000000000000000000000000000000000000000000000000000000000000000000
 
-8198977375801037360487688370980856954809039262365195406833716783903404133457763349293546078208000000000000000000000000000000000000000000000000000000000000000000
 
2365841869769632395307841867759267432130386728401915479573600782340102422483824699236366784921600000000000000000000000000000000000000000000000000000000000000000
 
38422607551357858910183804877458835969754687045457778153713868712080726582275055623806955343052800000000000000000000000000000000000000000000000000000000000000000
 
8748025942018387034868552444032447940433581746545060043926680026062167061243160579083409031168000000000000000000000000000000000000000000000000000000000000000000
 
2263847169389948373163328794795461809857645900528168217716580329416902508400300281953698342502400000000000000000000000000000000000000000000000000000000000000000
 
222108448373323382668960583736918989296631014117685901461468992254690797033159717907452657664000000000000000000000000000000000000000000000000000000000000000000
 
-191652105954238905446795420080685950630537798134993185876451505022442226202525776655929049088000000000000000000000000000000000000000000000000000000000000000000
 
-5054051819218031494754622223087970815732484809175105253936090094512996729567637791118709363834880000000000000000000000000000000000000000000000000000000000000000
 
1216648384240070201994031248694237121463995577687117631460518565072835721106787609031065835929600000000000000000000000000000000000000000000000000000000000000000
 
-4325881319597488279641220571886778470402364985877779365484813925082437864163247770605621419704320000000000000000000000000000000000000000000000000000000000000000
 
-1311492518740995361828235725524251784938391790019429722537146387772667485132382359725964882083840000000000000000000000000000000000000000000000000000000000000000
 
-2795895793502217401997689410831034887351672878349238048491487723256833140245738004962269630300160000000000000000000000000000000000000000000000000000000000000000
 
17956223807795627335389487729744487607689383294148589351806749834544515037344890039718199332700160000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
170620515838621118584538073836366489478494769415237392949602538991636429577103253200227532800000000000000000000000000000000000000000000000000000000000000000000
 
4294407952886909374340386678658453364195100442861378875290082461044398135699519445958734433484800000000000000000000000000000000000000000000000000000000000000000
 
1114765804334489952346343592947724127454968694268259368214256793997647340981335979299669698150400000000000000000000000000000000000000000000000000000000000000000
 
364839391069032866514995932578847341233548698775252808994042233813486364166270000079227060224000000000000000000000000000000000000000000000000000000000000000000
 
-2305570656167881658130208057740272319967260034141043571300414880459841410528313817172788903936000000000000000000000000000000000000000000000000000000000000000000
 
-18563619735209693217163885645456848789809960303150763716442533008128532918010987048292945022156800000000000000000000000000000000000000000000000000000000000000000
 
-677439279219698561277764836718746681669392454476010333295677458703015130500911961095214517452800000000000000000000000000000000000000000000000000000000000000000
 
-511815120164614751367604823393769844900932336879884903367732895195591836641628915178043080704000000000000000000000000000000000000000000000000000000000000000000
 
-8198977375801037360487688370980856954809039262365195406833716783903404133457763349293546078208000000000000000000000000000000000000000000000000000000000000000000
 
2365841869769632395307841867759267432130386728401915479573600782340102422483824699236366784921600000000000000000000000000000000000000000000000000000000000000000
 
38422607551357858910183804877458835969754687045457778153713868712080726582275055623806955343052800000000000000000000000000000000000000000000000000000000000000000
 
8748025942018387034868552444032447940433581746545060043926680026062167061243160579083409031168000000000000000000000000000000000000000000000000000000000000000000
 
2263847169389948373163328794795461809857645900528168217716580329416902508400300281953698342502400000000000000000000000000000000000000000000000000000000000000000
 
222108448373323382668960583736918989296631014117685901461468992254690797033159717907452657664000000000000000000000000000000000000000000000000000000000000000000
 
-191652105954238905446795420080685950630537798134993185876451505022442226202525776655929049088000000000000000000000000000000000000000000000000000000000000000000
 
-5054051819218031494754622223087970815732484809175105253936090094512996729567637791118709363834880000000000000000000000000000000000000000000000000000000000000000
 
1216648384240070201994031248694237121463995577687117631460518565072835721106787609031065835929600000000000000000000000000000000000000000000000000000000000000000
 
-4325881319597488279641220571886778470402364985877779365484813925082437864163247770605621419704320000000000000000000000000000000000000000000000000000000000000000
 
-1311492518740995361828235725524251784938391790019429722537146387772667485132382359725964882083840000000000000000000000000000000000000000000000000000000000000000
 
-2795895793502217401997689410831034887351672878349238048491487723256833140245738004962269630300160000000000000000000000000000000000000000000000000000000000000000
 
17956223807795627335389487729744487607689383294148589351806749834544515037344890039718199332700160000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-677439279219698561277764836718746681669392454476010333295677458703015130500911961095214517452800000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
35830308326110434902752995505636962790483901577199852519416533188243650211191683172047781888000000000000000000000000000000000000000000000000000000000000000000000
 
901825670106250968611481202518275206480971093000889563810917316819323608496899083651334231031808000000000000000000000000000000000000000000000000000000000000000000
 
234100818910242889992732154519022066765543425796334467324993926739505941606080555652930636611584000000000000000000000000000000000000000000000000000000000000000000
 
76616272124496901968149145841557941659045226742803089888748869100832136474916700016637682647040000000000000000000000000000000000000000000000000000000000000000000
 
-484169837795255148207343692125457187193124607169619149973087124896566696210945901606285669826560000000000000000000000000000000000000000000000000000000000000000000
 
-3898360144394035575604415985545938245860091663661660380452931931706991912782307280141518454652928000000000000000000000000000000000000000000000000000000000000000000
 
-107481175234569097787197012912691667429195790744775829707223907991074285694742072187389046947840000000000000000000000000000000000000000000000000000000000000000000
 
-1721785248918217845702414557905979960509898245096691035435080524619714868026130303351644676423680000000000000000000000000000000000000000000000000000000000000000000
 
-72222201892923988458675670614301051854908448795446429257912901019111200899162860480343169826816000000000000000000000000000000000000000000000000000000000000000000
 
7001780721014125137126119406434329530019191163746417137339220432079703751738825342274497757052928000000000000000000000000000000000000000000000000000000000000000000
 
1837085447823861277322396013246814067491052166774462609224602805473055082861063721607515896545280000000000000000000000000000000000000000000000000000000000000000000
 
475407905571889158364299046907046980070105639110915325720481869177549526764063059210276651925504000000000000000000000000000000000000000000000000000000000000000000
 
46642774158397910360481722584752987752292512964714039306908488373485067376963540760565058109440000000000000000000000000000000000000000000000000000000000000000000
 
-40246942250390170143827038216944049632412937608348569034054816054712867502530413097745100308480000000000000000000000000000000000000000000000000000000000000000000
 
-768697113412876835426476257385975304822644269593135639342846257688026776832809968941796294865715200000000000000000000000000000000000000000000000000000000000000000
 
92910733677687087712083001413290591906784882240052222615746308576571870112206527233672341356544000000000000000000000000000000000000000000000000000000000000000000
 
-1079149775478836576166653058949347642565183545562288270742321643860471764360511846023174556536012800000000000000000000000000000000000000000000000000000000000000000
 
-101988973455366194296821704160093724329697807558221596409107312004288298469566833502077708769689600000000000000000000000000000000000000000000000000000000000000000
 
-672495465817147673140513145701079408234194753717317292178467781680514865894719888140073651562086400000000000000000000000000000000000000000000000000000000000000000
 
3429377602910353665547798945540094070053396694715294555898396026068028532069967279948833743070822400000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
35830308326110434902752995505636962790483901577199852519416533188243650211191683172047781888000000000000000000000000000000000000000000000000000000000000000000000
 
901825670106250968611481202518275206480971093000889563810917316819323608496899083651334231031808000000000000000000000000000000000000000000000000000000000000000000
 
234100818910242889992732154519022066765543425796334467324993926739505941606080555652930636611584000000000000000000000000000000000000000000000000000000000000000000
 
76616272124496901968149145841557941659045226742803089888748869100832136474916700016637682647040000000000000000000000000000000000000000000000000000000000000000000
 
-484169837795255148207343692125457187193124607169619149973087124896566696210945901606285669826560000000000000000000000000000000000000000000000000000000000000000000
 
-3898360144394035575604415985545938245860091663661660380452931931706991912782307280141518454652928000000000000000000000000000000000000000000000000000000000000000000
 
-107481175234569097787197012912691667429195790744775829707223907991074285694742072187389046947840000000000000000000000000000000000000000000000000000000000000000000
 
-1721785248918217845702414557905979960509898245096691035435080524619714868026130303351644676423680000000000000000000000000000000000000000000000000000000000000000000
 
-72222201892923988458675670614301051854908448795446429257912901019111200899162860480343169826816000000000000000000000000000000000000000000000000000000000000000000
 
7001780721014125137126119406434329530019191163746417137339220432079703751738825342274497757052928000000000000000000000000000000000000000000000000000000000000000000
 
1837085447823861277322396013246814067491052166774462609224602805473055082861063721607515896545280000000000000000000000000000000000000000000000000000000000000000000
 
475407905571889158364299046907046980070105639110915325720481869177549526764063059210276651925504000000000000000000000000000000000000000000000000000000000000000000
 
46642774158397910360481722584752987752292512964714039306908488373485067376963540760565058109440000000000000000000000000000000000000000000000000000000000000000000
 
-40246942250390170143827038216944049632412937608348569034054816054712867502530413097745100308480000000000000000000000000000000000000000000000000000000000000000000
 
-768697113412876835426476257385975304822644269593135639342846257688026776832809968941796294865715200000000000000000000000000000000000000000000000000000000000000000
 
92910733677687087712083001413290591906784882240052222615746308576571870112206527233672341356544000000000000000000000000000000000000000000000000000000000000000000
 
-1079149775478836576166653058949347642565183545562288270742321643860471764360511846023174556536012800000000000000000000000000000000000000000000000000000000000000000
 
-101988973455366194296821704160093724329697807558221596409107312004288298469566833502077708769689600000000000000000000000000000000000000000000000000000000000000000
 
-672495465817147673140513145701079408234194753717317292178467781680514865894719888140073651562086400000000000000000000000000000000000000000000000000000000000000000
 
3429377602910353665547798945540094070053396694715294555898396026068028532069967279948833743070822400000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
901825670106250968611481202518275206480971093000889563810917316819323608496899083651334231031808000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
143321233304441739611011982022547851161935606308799410077666132752974600844766732688191127552000000000000000000000000000000000000000000000000000000000000000000000
 
936403275640971559970928618076088267062173703185337869299975706958023766424322222611722546446336000000000000000000000000000000000000000000000000000000000000000000
 
-8116431030956258717503330822664476858328739837008006074298255851373912476472091752862008079286272000000000000000000000000000000000000000000000000000000000000000000
 
306465088497987607872596583366231766636180906971212359554995476403328545899666800066550730588160000000000000000000000000000000000000000000000000000000000000000000
 
-1936679351181020592829374768501828748772498428678476599892348499586266784843783606425142679306240000000000000000000000000000000000000000000000000000000000000000000
 
-15593440577576142302417663942183752983440366654646641521811727726827967651129229120566073818611712000000000000000000000000000000000000000000000000000000000000000000
 
-429924700938276391148788051650766669716783162979103318828895631964297142778968288749556187791360000000000000000000000000000000000000000000000000000000000000000000
 
-6887140995672871382809658231623919842039592980386764141740322098478859472104521213406578705694720000000000000000000000000000000000000000000000000000000000000000000
 
-288888807571695953834702682457204207419633795181785717031651604076444803596651441921372679307264000000000000000000000000000000000000000000000000000000000000000000
 
28007122884056500548504477625737318120076764654985668549356881728318815006955301369097991028211712000000000000000000000000000000000000000000000000000000000000000000
 
7348341791295445109289584052987256269964208667097850436898411221892220331444254886430063586181120000000000000000000000000000000000000000000000000000000000000000000
 
1901631622287556633457196187628187920280422556443661302881927476710198107056252236841106607702016000000000000000000000000000000000000000000000000000000000000000000
 
186571096633591641441926890339011951009170051858856157227633953493940269507854163042260232437760000000000000000000000000000000000000000000000000000000000000000000
 
-160987769001560680575308152867776198529651750433394276136219264218851470010121652390980401233920000000000000000000000000000000000000000000000000000000000000000000
 
-3074788453651507341705905029543901219290577078372542557371385030752107107331239875767185179462860800000000000000000000000000000000000000000000000000000000000000000
 
371642934710748350848332005653162367627139528960208890462985234306287480448826108934689365426176000000000000000000000000000000000000000000000000000000000000000000
 
-4316599101915346304666612235797390570260734182249153082969286575441887057442047384092698226144051200000000000000000000000000000000000000000000000000000000000000000
 
-407955893821464777187286816640374897318791230232886385636429248017153193878267334008310835078758400000000000000000000000000000000000000000000000000000000000000000
 
-2689981863268590692562052582804317632936779014869269168713871126722059463578879552560294606248345600000000000000000000000000000000000000000000000000000000000000000
 
13717510411641414662191195782160376280213586778861178223593584104272114128279869119795334972283289600000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
143321233304441739611011982022547851161935606308799410077666132752974600844766732688191127552000000000000000000000000000000000000000000000000000000000000000000000
 
936403275640971559970928618076088267062173703185337869299975706958023766424322222611722546446336000000000000000000000000000000000000000000000000000000000000000000
 
-8116431030956258717503330822664476858328739837008006074298255851373912476472091752862008079286272000000000000000000000000000000000000000000000000000000000000000000
 
306465088497987607872596583366231766636180906971212359554995476403328545899666800066550730588160000000000000000000000000000000000000000000000000000000000000000000
 
-1936679351181020592829374768501828748772498428678476599892348499586266784843783606425142679306240000000000000000000000000000000000000000000000000000000000000000000
 
-15593440577576142302417663942183752983440366654646641521811727726827967651129229120566073818611712000000000000000000000000000000000000000000000000000000000000000000
 
-429924700938276391148788051650766669716783162979103318828895631964297142778968288749556187791360000000000000000000000000000000000000000000000000000000000000000000
 
-6887140995672871382809658231623919842039592980386764141740322098478859472104521213406578705694720000000000000000000000000000000000000000000000000000000000000000000
 
-288888807571695953834702682457204207419633795181785717031651604076444803596651441921372679307264000000000000000000000000000000000000000000000000000000000000000000
 
28007122884056500548504477625737318120076764654985668549356881728318815006955301369097991028211712000000000000000000000000000000000000000000000000000000000000000000
 
7348341791295445109289584052987256269964208667097850436898411221892220331444254886430063586181120000000000000000000000000000000000000000000000000000000000000000000
 
1901631622287556633457196187628187920280422556443661302881927476710198107056252236841106607702016000000000000000000000000000000000000000000000000000000000000000000
 
186571096633591641441926890339011951009170051858856157227633953493940269507854163042260232437760000000000000000000000000000000000000000000000000000000000000000000
 
-160987769001560680575308152867776198529651750433394276136219264218851470010121652390980401233920000000000000000000000000000000000000000000000000000000000000000000
 
-3074788453651507341705905029543901219290577078372542557371385030752107107331239875767185179462860800000000000000000000000000000000000000000000000000000000000000000
 
371642934710748350848332005653162367627139528960208890462985234306287480448826108934689365426176000000000000000000000000000000000000000000000000000000000000000000
 
-4316599101915346304666612235797390570260734182249153082969286575441887057442047384092698226144051200000000000000000000000000000000000000000000000000000000000000000
 
-407955893821464777187286816640374897318791230232886385636429248017153193878267334008310835078758400000000000000000000000000000000000000000000000000000000000000000
 
-2689981863268590692562052582804317632936779014869269168713871126722059463578879552560294606248345600000000000000000000000000000000000000000000000000000000000000000
 
13717510411641414662191195782160376280213586778861178223593584104272114128279869119795334972283289600000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-1936679351181020592829374768501828748772498428678476599892348499586266784843783606425142679306240000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
10319128797919805251992862705623445283659363654233557525591961558214171260823204753549761183744000000000000000000000000000000000000000000000000000000000000000000000
 
67421035846149952317906860501478355228476506629344326589598250900977711182551200028044023344136192000000000000000000000000000000000000000000000000000000000000000000
 
-584383034228850627660239819231842333799669268264576437349474421298921698305990606206064581708611584000000000000000000000000000000000000000000000000000000000000000000
 
22065486371855107766826954002368687197805025301927289887959674301039655304776009604791652602347520000000000000000000000000000000000000000000000000000000000000000000
 
-960046656086276515976404323283076599910816531125566155179487122366367260954426673741045329878319104000000000000000000000000000000000000000000000000000000000000000000
 
203351331874007162247084350692692018621112335011240042988696592456558012408597278674639981327155200000000000000000000000000000000000000000000000000000000000000000000
 
-30954578467555900162712739718855200219608387734495438955680485501429394280085716789968045520977920000000000000000000000000000000000000000000000000000000000000000000
 
-495874151688446739562295392676922228626850694587847018205303191090477881991525527365273666810019840000000000000000000000000000000000000000000000000000000000000000000
 
-20799994145162108676098593136918702934213633253088571626278915493504025858958903818338832910123008000000000000000000000000000000000000000000000000000000000000000000
 
2016512847652068039492322389053086904645527055158968135553695484438954680500781698575055354031243264000000000000000000000000000000000000000000000000000000000000000000
 
529080608973272047868850051815082451437423024031045231456685607976239863863986351822964578205040640000000000000000000000000000000000000000000000000000000000000000000
 
136917476804704077608918125509229530260190424063943613807498778323134263708050161052559675754545152000000000000000000000000000000000000000000000000000000000000000000
 
13433118957618598183818736104408860472660243733837643320389644651563699404565499739042736735518720000000000000000000000000000000000000000000000000000000000000000000
 
-11591119368112369001422187006479886294134926031204387881807787023757305840728758972150588888842240000000000000000000000000000000000000000000000000000000000000000000
 
-221384768662908528602825162127160887788921549642823064130739722214151711727849271055237332921325977600000000000000000000000000000000000000000000000000000000000000000
 
26758291299173881261079904407027690469154046085135040113334936870052698592315479843297634310684672000000000000000000000000000000000000000000000000000000000000000000
 
-310795135337904933935996080977412121058772861121939021973788633431815868135827411654674272282371686400000000000000000000000000000000000000000000000000000000000000000
 
-29372824355145463957484650798106992606952968576767819765822905857235029959235248048598380125670604800000000000000000000000000000000000000000000000000000000000000000
 
-69731215679753211923387800777793829650008189635164877754288417150467207147677176973132080174281523200000000000000000000000000000000000000000000000000000000000000000
 
987660749638181855677766096315547092175378248078004832098738055507592217236150576625264118004396851200000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
10319128797919805251992862705623445283659363654233557525591961558214171260823204753549761183744000000000000000000000000000000000000000000000000000000000000000000000
 
67421035846149952317906860501478355228476506629344326589598250900977711182551200028044023344136192000000000000000000000000000000000000000000000000000000000000000000
 
-584383034228850627660239819231842333799669268264576437349474421298921698305990606206064581708611584000000000000000000000000000000000000000000000000000000000000000000
 
22065486371855107766826954002368687197805025301927289887959674301039655304776009604791652602347520000000000000000000000000000000000000000000000000000000000000000000
 
-960046656086276515976404323283076599910816531125566155179487122366367260954426673741045329878319104000000000000000000000000000000000000000000000000000000000000000000
 
203351331874007162247084350692692018621112335011240042988696592456558012408597278674639981327155200000000000000000000000000000000000000000000000000000000000000000000
 
-30954578467555900162712739718855200219608387734495438955680485501429394280085716789968045520977920000000000000000000000000000000000000000000000000000000000000000000
 
-495874151688446739562295392676922228626850694587847018205303191090477881991525527365273666810019840000000000000000000000000000000000000000000000000000000000000000000
 
-20799994145162108676098593136918702934213633253088571626278915493504025858958903818338832910123008000000000000000000000000000000000000000000000000000000000000000000
 
2016512847652068039492322389053086904645527055158968135553695484438954680500781698575055354031243264000000000000000000000000000000000000000000000000000000000000000000
 
529080608973272047868850051815082451437423024031045231456685607976239863863986351822964578205040640000000000000000000000000000000000000000000000000000000000000000000
 
136917476804704077608918125509229530260190424063943613807498778323134263708050161052559675754545152000000000000000000000000000000000000000000000000000000000000000000
 
13433118957618598183818736104408860472660243733837643320389644651563699404565499739042736735518720000000000000000000000000000000000000000000000000000000000000000000
 
-11591119368112369001422187006479886294134926031204387881807787023757305840728758972150588888842240000000000000000000000000000000000000000000000000000000000000000000
 
-221384768662908528602825162127160887788921549642823064130739722214151711727849271055237332921325977600000000000000000000000000000000000000000000000000000000000000000
 
26758291299173881261079904407027690469154046085135040113334936870052698592315479843297634310684672000000000000000000000000000000000000000000000000000000000000000000
 
-310795135337904933935996080977412121058772861121939021973788633431815868135827411654674272282371686400000000000000000000000000000000000000000000000000000000000000000
 
-29372824355145463957484650798106992606952968576767819765822905857235029959235248048598380125670604800000000000000000000000000000000000000000000000000000000000000000
 
-69731215679753211923387800777793829650008189635164877754288417150467207147677176973132080174281523200000000000000000000000000000000000000000000000000000000000000000
 
987660749638181855677766096315547092175378248078004832098738055507592217236150576625264118004396851200000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
67421035846149952317906860501478355228476506629344326589598250900977711182551200028044023344136192000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
123829545575037663023914352467481343403912363850802690307103538698570055129878457042597134204928000000000000000000000000000000000000000000000000000000000000000000000
 
-8023911948438456816691480738304283334023178818615082147037666819101726047410155274893435330665381888000000000000000000000000000000000000000000000000000000000000000000
 
-1213578645230699141722323489026610394112577119328197878612768516217598801285921600504792420194451456000000000000000000000000000000000000000000000000000000000000000000
 
264785836462261293201923448028424246373660303623127478655516091612475863657312115257499831228170240000000000000000000000000000000000000000000000000000000000000000000
 
-11520559873035318191716851879396919198929798373506793862153845468396407131453120084892543958539829248000000000000000000000000000000000000000000000000000000000000000000
 
2440215982488085946965012208312304223453348020134880515864359109478696148903167344095679775925862400000000000000000000000000000000000000000000000000000000000000000000
 
-371454941610670801952552876626262402635300652813945267468165826017152731361028601479616546251735040000000000000000000000000000000000000000000000000000000000000000000
 
-5950489820261360874747544712123066743522208335054164218463638293085734583898306328383284001720238080000000000000000000000000000000000000000000000000000000000000000000
 
-249599929741945304113183117643024435210563599037062859515346985922048310307506845820065994921476096000000000000000000000000000000000000000000000000000000000000000000
 
24198154171824816473907868668637042855746324661907617626644345813267456166009380382900664248374919168000000000000000000000000000000000000000000000000000000000000000000
 
6348967307679264574426200621780989417249076288372542777480227295714878366367836221875574938460487680000000000000000000000000000000000000000000000000000000000000000000
 
1643009721656448931307017506110754363122285088767323365689985339877611164496601932630716109054541824000000000000000000000000000000000000000000000000000000000000000000
 
161197427491423178205824833252906325671922924806051719844675735818764392854785996868512840826224640000000000000000000000000000000000000000000000000000000000000000000
 
-139093432417348428017066244077758635529619112374452654581693444285087670088745107665807066666106880000000000000000000000000000000000000000000000000000000000000000000
 
-2656617223954902343233901945525930653467058595713876769568876666569820540734191252662847995055911731200000000000000000000000000000000000000000000000000000000000000000
 
321099495590086575132958852884332285629848553021620481360019242440632383107785758119571611728216064000000000000000000000000000000000000000000000000000000000000000000
 
-3729541624054859207231952971728945452705274333463268263685463601181790417629928939856091267388460236800000000000000000000000000000000000000000000000000000000000000000
 
591420609584353764960880237443413061915235469889606735064500642326867597044893823809435765309859430400000000000000000000000000000000000000000000000000000000000000000
 
-836774588157038543080653609333525955800098275621978533051461005805606485772126123677584962091378278400000000000000000000000000000000000000000000000000000000000000000
 
11851928995658182268133193155786565106104538976936057985184856666091106606833806919503169416052762214400000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
123829545575037663023914352467481343403912363850802690307103538698570055129878457042597134204928000000000000000000000000000000000000000000000000000000000000000000000
 
-8023911948438456816691480738304283334023178818615082147037666819101726047410155274893435330665381888000000000000000000000000000000000000000000000000000000000000000000
 
-1213578645230699141722323489026610394112577119328197878612768516217598801285921600504792420194451456000000000000000000000000000000000000000000000000000000000000000000
 
264785836462261293201923448028424246373660303623127478655516091612475863657312115257499831228170240000000000000000000000000000000000000000000000000000000000000000000
 
-11520559873035318191716851879396919198929798373506793862153845468396407131453120084892543958539829248000000000000000000000000000000000000000000000000000000000000000000
 
2440215982488085946965012208312304223453348020134880515864359109478696148903167344095679775925862400000000000000000000000000000000000000000000000000000000000000000000
 
-371454941610670801952552876626262402635300652813945267468165826017152731361028601479616546251735040000000000000000000000000000000000000000000000000000000000000000000
 
-5950489820261360874747544712123066743522208335054164218463638293085734583898306328383284001720238080000000000000000000000000000000000000000000000000000000000000000000
 
-249599929741945304113183117643024435210563599037062859515346985922048310307506845820065994921476096000000000000000000000000000000000000000000000000000000000000000000
 
24198154171824816473907868668637042855746324661907617626644345813267456166009380382900664248374919168000000000000000000000000000000000000000000000000000000000000000000
 
6348967307679264574426200621780989417249076288372542777480227295714878366367836221875574938460487680000000000000000000000000000000000000000000000000000000000000000000
 
1643009721656448931307017506110754363122285088767323365689985339877611164496601932630716109054541824000000000000000000000000000000000000000000000000000000000000000000
 
161197427491423178205824833252906325671922924806051719844675735818764392854785996868512840826224640000000000000000000000000000000000000000000000000000000000000000000
 
-139093432417348428017066244077758635529619112374452654581693444285087670088745107665807066666106880000000000000000000000000000000000000000000000000000000000000000000
 
-2656617223954902343233901945525930653467058595713876769568876666569820540734191252662847995055911731200000000000000000000000000000000000000000000000000000000000000000
 
321099495590086575132958852884332285629848553021620481360019242440632383107785758119571611728216064000000000000000000000000000000000000000000000000000000000000000000
 
-3729541624054859207231952971728945452705274333463268263685463601181790417629928939856091267388460236800000000000000000000000000000000000000000000000000000000000000000
 
591420609584353764960880237443413061915235469889606735064500642326867597044893823809435765309859430400000000000000000000000000000000000000000000000000000000000000000
 
-836774588157038543080653609333525955800098275621978533051461005805606485772126123677584962091378278400000000000000000000000000000000000000000000000000000000000000000
 
11851928995658182268133193155786565106104538976936057985184856666091106606833806919503169416052762214400000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-8023911948438456816691480738304283334023178818615082147037666819101726047410155274893435330665381888000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
247659091150075326047828704934962686807824727701605380614207077397140110259756914085194268409856000000000000000000000000000000000000000000000000000000000000000000000
 
-2427157290461398283444646978053220788225154238656395757225537032435197602571843201009584840388902912000000000000000000000000000000000000000000000000000000000000000000
 
529571672924522586403846896056848492747320607246254957311032183224951727314624230514999662456340480000000000000000000000000000000000000000000000000000000000000000000
 
1030616099244734066640738456119011604209939708831658716805309520512363879324225654895218074916487168000000000000000000000000000000000000000000000000000000000000000000
 
4880431964976171893930024416624608446906696040269761031728718218957392297806334688191359551851724800000000000000000000000000000000000000000000000000000000000000000000
 
-742909883221341603905105753252524805270601305627890534936331652034305462722057202959233092503470080000000000000000000000000000000000000000000000000000000000000000000
 
-11900979640522721749495089424246133487044416670108328436927276586171469167796612656766568003440476160000000000000000000000000000000000000000000000000000000000000000000
 
31596447934269936658539556717931084465671588076386202869119973304562807569025607407933609332818575360000000000000000000000000000000000000000000000000000000000000000000
 
48396308343649632947815737337274085711492649323815235253288691626534912332018760765801328496749838336000000000000000000000000000000000000000000000000000000000000000000
 
12697934615358529148852401243561978834498152576745085554960454591429756732735672443751149876920975360000000000000000000000000000000000000000000000000000000000000000000
 
3286019443312897862614035012221508726244570177534646731379970679755222328993203865261432218109083648000000000000000000000000000000000000000000000000000000000000000000
 
322394854982846356411649666505812651343845849612103439689351471637528785709571993737025681652449280000000000000000000000000000000000000000000000000000000000000000000
 
-278186864834696856034132488155517271059238224748905309163386888570175340177490215331614133332213760000000000000000000000000000000000000000000000000000000000000000000
 
-5313234447909804686467803891051861306934117191427753539137753333139641081468382505325695990111823462400000000000000000000000000000000000000000000000000000000000000000
 
642198991180173150265917705768664571259697106043240962720038484881264766215571516239143223456432128000000000000000000000000000000000000000000000000000000000000000000
 
-7459083248109718414463905943457890905410548666926536527370927202363580835259857879712182534776920473600000000000000000000000000000000000000000000000000000000000000000
 
1182841219168707529921760474886826123830470939779213470129001284653735194089787647618871530619718860800000000000000000000000000000000000000000000000000000000000000000
 
-1673549176314077086161307218667051911600196551243957066102922011611212971544252247355169924182756556800000000000000000000000000000000000000000000000000000000000000000
 
23703857991316364536266386311573130212209077953872115970369713332182213213667613839006338832105524428800000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
247659091150075326047828704934962686807824727701605380614207077397140110259756914085194268409856000000000000000000000000000000000000000000000000000000000000000000000
 
-2427157290461398283444646978053220788225154238656395757225537032435197602571843201009584840388902912000000000000000000000000000000000000000000000000000000000000000000
 
529571672924522586403846896056848492747320607246254957311032183224951727314624230514999662456340480000000000000000000000000000000000000000000000000000000000000000000
 
1030616099244734066640738456119011604209939708831658716805309520512363879324225654895218074916487168000000000000000000000000000000000000000000000000000000000000000000
 
4880431964976171893930024416624608446906696040269761031728718218957392297806334688191359551851724800000000000000000000000000000000000000000000000000000000000000000000
 
-742909883221341603905105753252524805270601305627890534936331652034305462722057202959233092503470080000000000000000000000000000000000000000000000000000000000000000000
 
-11900979640522721749495089424246133487044416670108328436927276586171469167796612656766568003440476160000000000000000000000000000000000000000000000000000000000000000000
 
31596447934269936658539556717931084465671588076386202869119973304562807569025607407933609332818575360000000000000000000000000000000000000000000000000000000000000000000
 
48396308343649632947815737337274085711492649323815235253288691626534912332018760765801328496749838336000000000000000000000000000000000000000000000000000000000000000000
 
12697934615358529148852401243561978834498152576745085554960454591429756732735672443751149876920975360000000000000000000000000000000000000000000000000000000000000000000
 
3286019443312897862614035012221508726244570177534646731379970679755222328993203865261432218109083648000000000000000000000000000000000000000000000000000000000000000000
 
322394854982846356411649666505812651343845849612103439689351471637528785709571993737025681652449280000000000000000000000000000000000000000000000000000000000000000000
 
-278186864834696856034132488155517271059238224748905309163386888570175340177490215331614133332213760000000000000000000000000000000000000000000000000000000000000000000
 
-5313234447909804686467803891051861306934117191427753539137753333139641081468382505325695990111823462400000000000000000000000000000000000000000000000000000000000000000
 
642198991180173150265917705768664571259697106043240962720038484881264766215571516239143223456432128000000000000000000000000000000000000000000000000000000000000000000
 
-7459083248109718414463905943457890905410548666926536527370927202363580835259857879712182534776920473600000000000000000000000000000000000000000000000000000000000000000
 
1182841219168707529921760474886826123830470939779213470129001284653735194089787647618871530619718860800000000000000000000000000000000000000000000000000000000000000000
 
-1673549176314077086161307218667051911600196551243957066102922011611212971544252247355169924182756556800000000000000000000000000000000000000000000000000000000000000000
 
23703857991316364536266386311573130212209077953872115970369713332182213213667613839006338832105524428800000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-2427157290461398283444646978053220788225154238656395757225537032435197602571843201009584840388902912000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (
95101091001628925202366222695025671734204695437416466155855517720501802339746655008714599069384704000000000000000000000000000000000000000000000000000000000000000000000
 
203355522403016673179077208085829821214971113182561903607436358358381463288815704517759870383234744320000000000000000000000000000000000000000000000000000000000000000000
 
-1965997405273732609590164052223108838462374933311680563352684996272510058083192992817763720715011358720000000000000000000000000000000000000000000000000000000000000000000
 
-2553239525800621032795202511184962801676945551776163897775788638532017357464286837746881840304585965568000000000000000000000000000000000000000000000000000000000000000000
 
1874085874550850007269129375983849643612171279463588236183827796079638642357632520265482067911062323200000000000000000000000000000000000000000000000000000000000000000000
 
-285277395156995175899560609248969525223910901361109965415551354381173297685269965936345507521332510720000000000000000000000000000000000000000000000000000000000000000000
 
-4569976181960725151806114338910515259025056001321598119780074209089844160433899260198362113321142845440000000000000000000000000000000000000000000000000000000000000000000
 
8201041196212190457698861675239318757893139954708940775036699756407097990339447259010978542372310220800000000000000000000000000000000000000000000000000000000000000000000
 
18584182403961459051961243137513248913213177340345050337262857584589406335495204134067710142751937921024000000000000000000000000000000000000000000000000000000000000000000
 
4876006892297675193159322077527799872447290589470112853104814563109026585370498218400441552737654538240000000000000000000000000000000000000000000000000000000000000000000
 
1261831466232152779243789444693059350877914948173304344849908741026005374333390284260389971753888120832000000000000000000000000000000000000000000000000000000000000000000
 
123799624313413000862073471938232058116036806251047720840710965108811053712475645595017861754540523520000000000000000000000000000000000000000000000000000000000000000000
 
-106823756096523592717106875451718632086747478303579638718740565210947330628156242687339827199570083840000000000000000000000000000000000000000000000000000000000000000000
 
-816994753604820264747534617225091464597223265225433897387226615578282583587649908736236500646933141913600000000000000000000000000000000000000000000000000000000000000000
 
-432999628716005029662388754839734625339319498103186282338655590887449658493336634046852757501622878208000000000000000000000000000000000000000000000000000000000000000000
 
-4043886410438371436908238313621695410755075648086798364522047043471121075589701221500136325783344277094400000000000000000000000000000000000000000000000000000000000000000
 
454211028160783691489956022356541231550900840875217972529536493307034314530478456685646667757972042547200000000000000000000000000000000000000000000000000000000000000000
 
-1594088541565473728196243587365010483038735937230986650215932569173303241281155397780142508318628459315200000000000000000000000000000000000000000000000000000000000000000
 
6743084582337004850418095480976351395333436014312875856598747924030957804348532122797117646670507750195200000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (
95101091001628925202366222695025671734204695437416466155855517720501802339746655008714599069384704000000000000000000000000000000000000000000000000000000000000000000000
 
203355522403016673179077208085829821214971113182561903607436358358381463288815704517759870383234744320000000000000000000000000000000000000000000000000000000000000000000
 
-1965997405273732609590164052223108838462374933311680563352684996272510058083192992817763720715011358720000000000000000000000000000000000000000000000000000000000000000000
 
-2553239525800621032795202511184962801676945551776163897775788638532017357464286837746881840304585965568000000000000000000000000000000000000000000000000000000000000000000
 
1874085874550850007269129375983849643612171279463588236183827796079638642357632520265482067911062323200000000000000000000000000000000000000000000000000000000000000000000
 
-285277395156995175899560609248969525223910901361109965415551354381173297685269965936345507521332510720000000000000000000000000000000000000000000000000000000000000000000
 
-4569976181960725151806114338910515259025056001321598119780074209089844160433899260198362113321142845440000000000000000000000000000000000000000000000000000000000000000000
 
8201041196212190457698861675239318757893139954708940775036699756407097990339447259010978542372310220800000000000000000000000000000000000000000000000000000000000000000000
 
18584182403961459051961243137513248913213177340345050337262857584589406335495204134067710142751937921024000000000000000000000000000000000000000000000000000000000000000000
 
4876006892297675193159322077527799872447290589470112853104814563109026585370498218400441552737654538240000000000000000000000000000000000000000000000000000000000000000000
 
1261831466232152779243789444693059350877914948173304344849908741026005374333390284260389971753888120832000000000000000000000000000000000000000000000000000000000000000000
 
123799624313413000862073471938232058116036806251047720840710965108811053712475645595017861754540523520000000000000000000000000000000000000000000000000000000000000000000
 
-106823756096523592717106875451718632086747478303579638718740565210947330628156242687339827199570083840000000000000000000000000000000000000000000000000000000000000000000
 
-816994753604820264747534617225091464597223265225433897387226615578282583587649908736236500646933141913600000000000000000000000000000000000000000000000000000000000000000
 
-432999628716005029662388754839734625339319498103186282338655590887449658493336634046852757501622878208000000000000000000000000000000000000000000000000000000000000000000
 
-4043886410438371436908238313621695410755075648086798364522047043471121075589701221500136325783344277094400000000000000000000000000000000000000000000000000000000000000000
 
454211028160783691489956022356541231550900840875217972529536493307034314530478456685646667757972042547200000000000000000000000000000000000000000000000000000000000000000
 
-1594088541565473728196243587365010483038735937230986650215932569173303241281155397780142508318628459315200000000000000000000000000000000000000000000000000000000000000000
 
6743084582337004850418095480976351395333436014312875856598747924030957804348532122797117646670507750195200000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
1874085874550850007269129375983849643612171279463588236183827796079638642357632520265482067911062323200000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (
149784218327565557193726800744665432981372395313930934195472440409790338685100981638725493534280908800000000000000000000000000000000000000000000000000000000000000000000000
 
320284947784751260257046602735181968413579503262534998181712264414450804679884734615471795853594722304000000000000000000000000000000000000000000000000000000000000000000000
 
-3096445913306128860104508382251396420578240519965896887280478869129203341481028963687977860126142889984000000000000000000000000000000000000000000000000000000000000000000000
 
-4021352253135978126652443955116316412641189244047458138996867105687927338006251769451338898479722895769600000000000000000000000000000000000000000000000000000000000000000000
 
-787116067311357003053034337913216850317111937374707059197207674353448229790205658511502468522646175744000000000000000000000000000000000000000000000000000000000000000000000
 
-449311897372267402041807959567127002227659669643748195529493383150347943854300196349744174346098704384000000000000000000000000000000000000000000000000000000000000000000000
 
-7197712486588142114094630083784061532964463202081517038653616879316504552683391334812420328480799981568000000000000000000000000000000000000000000000000000000000000000000000
 
16065104153279627983087844490154794444950143178165409957471632813754972253945452066988301078326973300736000000000000000000000000000000000000000000000000000000000000000000000
 
29270087286239298006838957941583367038310754311043454281189000695728314978404946511156643474834302225612800000000000000000000000000000000000000000000000000000000000000000000
 
7679710855368838429225932272106284799104482678415427743640082936896716871958534693980695445561805897728000000000000000000000000000000000000000000000000000000000000000000000
 
1987384559315640627308968375391568477632716043372954343138606267115958464575089697710114205512373790310400000000000000000000000000000000000000000000000000000000000000000000
 
194984408293625476357765718302715491532757969845400160324119770046377409597149141812153132263401324544000000000000000000000000000000000000000000000000000000000000000000000
 
-168247415852024658529443328836456845536627278328137930982016390207242045739346082232560227839322882048000000000000000000000000000000000000000000000000000000000000000000000
 
-2905976932539526323257894802979565148821542628186598624447709135348602856147543103768948995194077545758720000000000000000000000000000000000000000000000000000000000000000000
 
217586804556700081770919811599665794024414004630003958684854786470493336204658411103638299532253881958400000000000000000000000000000000000000000000000000000000000000000000
 
-5424581815666806609466834138458310051558709820887058953085574884242877818305532633648911750881591825530880000000000000000000000000000000000000000000000000000000000000000000
 
-244149598416800889625113505292178577836762870706888870192099854634195939501604281096033317051657942466560000000000000000000000000000000000000000000000000000000000000000000
 
-2038419812578806920077263047351961400595741938713979738571769191835883667143696356396822969488252117975040000000000000000000000000000000000000000000000000000000000000000000
 
12509436778728039446735782793529473888411230372242076416216326398797034293345431673833066217960400528343040000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (
149784218327565557193726800744665432981372395313930934195472440409790338685100981638725493534280908800000000000000000000000000000000000000000000000000000000000000000000000
 
320284947784751260257046602735181968413579503262534998181712264414450804679884734615471795853594722304000000000000000000000000000000000000000000000000000000000000000000000
 
-3096445913306128860104508382251396420578240519965896887280478869129203341481028963687977860126142889984000000000000000000000000000000000000000000000000000000000000000000000
 
-4021352253135978126652443955116316412641189244047458138996867105687927338006251769451338898479722895769600000000000000000000000000000000000000000000000000000000000000000000
 
-787116067311357003053034337913216850317111937374707059197207674353448229790205658511502468522646175744000000000000000000000000000000000000000000000000000000000000000000000
 
-449311897372267402041807959567127002227659669643748195529493383150347943854300196349744174346098704384000000000000000000000000000000000000000000000000000000000000000000000
 
-7197712486588142114094630083784061532964463202081517038653616879316504552683391334812420328480799981568000000000000000000000000000000000000000000000000000000000000000000000
 
16065104153279627983087844490154794444950143178165409957471632813754972253945452066988301078326973300736000000000000000000000000000000000000000000000000000000000000000000000
 
29270087286239298006838957941583367038310754311043454281189000695728314978404946511156643474834302225612800000000000000000000000000000000000000000000000000000000000000000000
 
7679710855368838429225932272106284799104482678415427743640082936896716871958534693980695445561805897728000000000000000000000000000000000000000000000000000000000000000000000
 
1987384559315640627308968375391568477632716043372954343138606267115958464575089697710114205512373790310400000000000000000000000000000000000000000000000000000000000000000000
 
194984408293625476357765718302715491532757969845400160324119770046377409597149141812153132263401324544000000000000000000000000000000000000000000000000000000000000000000000
 
-168247415852024658529443328836456845536627278328137930982016390207242045739346082232560227839322882048000000000000000000000000000000000000000000000000000000000000000000000
 
-2905976932539526323257894802979565148821542628186598624447709135348602856147543103768948995194077545758720000000000000000000000000000000000000000000000000000000000000000000
 
217586804556700081770919811599665794024414004630003958684854786470493336204658411103638299532253881958400000000000000000000000000000000000000000000000000000000000000000000
 
-5424581815666806609466834138458310051558709820887058953085574884242877818305532633648911750881591825530880000000000000000000000000000000000000000000000000000000000000000000
 
-244149598416800889625113505292178577836762870706888870192099854634195939501604281096033317051657942466560000000000000000000000000000000000000000000000000000000000000000000
 
-2038419812578806920077263047351961400595741938713979738571769191835883667143696356396822969488252117975040000000000000000000000000000000000000000000000000000000000000000000
 
12509436778728039446735782793529473888411230372242076416216326398797034293345431673833066217960400528343040000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-787116067311357003053034337913216850317111937374707059197207674353448229790205658511502468522646175744000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
31454685848788767010682628156379740926088203015925496181049212486055971123871206144132353642198990848000000000000000000000000000000000000000000000000000000000000000000000000
 
67259839034797764653979786574388213366851695685132349618159575527034668982775794269249077129254891683840000000000000000000000000000000000000000000000000000000000000000000000
 
-650253641794287060621946760272793248321430509192838346328900562517132701711016082374475350626490006896640000000000000000000000000000000000000000000000000000000000000000000000
 
-844483973158555406597013230574426446654649741249966209189342092194464740981312871584781168680741808111616000000000000000000000000000000000000000000000000000000000000000000000
 
-94355498448176154428779671509096670467808530625187121061193610461573068209403041233446276612680727920640000000000000000000000000000000000000000000000000000000000000000000000
 
-1511519622183509843959872317594652921922537272437118578117259544656465956063512180310608268980967996129280000000000000000000000000000000000000000000000000000000000000000000000
 
2712494375647181993883898499085404679173156040019982161343388444431647660304772180917881152889641605529600000000000000000000000000000000000000000000000000000000000000000000000
 
4907010524094865301627652085519190538795807103953961780814088058996265183545464855187278741792035740581888000000000000000000000000000000000000000000000000000000000000000000000
 
1612739279627456070137445777142319807811941362467239826164417416748310543111292285735946043567979238522880000000000000000000000000000000000000000000000000000000000000000000000
 
417350757456284531734883358832229380302870369108320412059107316094351277560768836519123983157598495965184000000000000000000000000000000000000000000000000000000000000000000000
 
40946725741661350035130800843570253221879173667534033668065151709739256015401319780552157775314278154240000000000000000000000000000000000000000000000000000000000000000000000
 
-35331957328925178291183099055655937562691728448908965506223441943520829605262677268837647846257805230080000000000000000000000000000000000000000000000000000000000000000000000
 
-270221014754794302565247074647199001915531594973312261560825203102516964521615207314510222588973136687923200000000000000000000000000000000000000000000000000000000000000000000
 
-143214627197818663560835080663242227330979923997628862883510336686023974546671091710996549543661766967296000000000000000000000000000000000000000000000000000000000000000000000
 
-1337515430252491352757399822230375757107241270604708559065667059628073295751293679011170089752841119648972800000000000000000000000000000000000000000000000000000000000000000000
 
150230297564179205960302954394426012335460453119478344414144195161301599530955749548777635360949253072486400000000000000000000000000000000000000000000000000000000000000000000
 
-527244785122780435600907566520977217265061911239148834558919697254070047053742147815782134626386362918502400000000000000000000000000000000000000000000000000000000000000000000
 
2230275225607964354275785080332928224006533961733983689570035875873239293788276999615146661636270438377062400000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
31454685848788767010682628156379740926088203015925496181049212486055971123871206144132353642198990848000000000000000000000000000000000000000000000000000000000000000000000000
 
67259839034797764653979786574388213366851695685132349618159575527034668982775794269249077129254891683840000000000000000000000000000000000000000000000000000000000000000000000
 
-650253641794287060621946760272793248321430509192838346328900562517132701711016082374475350626490006896640000000000000000000000000000000000000000000000000000000000000000000000
 
-844483973158555406597013230574426446654649741249966209189342092194464740981312871584781168680741808111616000000000000000000000000000000000000000000000000000000000000000000000
 
-94355498448176154428779671509096670467808530625187121061193610461573068209403041233446276612680727920640000000000000000000000000000000000000000000000000000000000000000000000
 
-1511519622183509843959872317594652921922537272437118578117259544656465956063512180310608268980967996129280000000000000000000000000000000000000000000000000000000000000000000000
 
2712494375647181993883898499085404679173156040019982161343388444431647660304772180917881152889641605529600000000000000000000000000000000000000000000000000000000000000000000000
 
4907010524094865301627652085519190538795807103953961780814088058996265183545464855187278741792035740581888000000000000000000000000000000000000000000000000000000000000000000000
 
1612739279627456070137445777142319807811941362467239826164417416748310543111292285735946043567979238522880000000000000000000000000000000000000000000000000000000000000000000000
 
417350757456284531734883358832229380302870369108320412059107316094351277560768836519123983157598495965184000000000000000000000000000000000000000000000000000000000000000000000
 
40946725741661350035130800843570253221879173667534033668065151709739256015401319780552157775314278154240000000000000000000000000000000000000000000000000000000000000000000000
 
-35331957328925178291183099055655937562691728448908965506223441943520829605262677268837647846257805230080000000000000000000000000000000000000000000000000000000000000000000000
 
-270221014754794302565247074647199001915531594973312261560825203102516964521615207314510222588973136687923200000000000000000000000000000000000000000000000000000000000000000000
 
-143214627197818663560835080663242227330979923997628862883510336686023974546671091710996549543661766967296000000000000000000000000000000000000000000000000000000000000000000000
 
-1337515430252491352757399822230375757107241270604708559065667059628073295751293679011170089752841119648972800000000000000000000000000000000000000000000000000000000000000000000
 
150230297564179205960302954394426012335460453119478344414144195161301599530955749548777635360949253072486400000000000000000000000000000000000000000000000000000000000000000000
 
-527244785122780435600907566520977217265061911239148834558919697254070047053742147815782134626386362918502400000000000000000000000000000000000000000000000000000000000000000000
 
2230275225607964354275785080332928224006533961733983689570035875873239293788276999615146661636270438377062400000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
67259839034797764653979786574388213366851695685132349618159575527034668982775794269249077129254891683840000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
125818743395155068042730512625518963704352812063701984724196849944223884495484824576529414568795963392000000000000000000000000000000000000000000000000000000000000000000000000
 
-2601014567177148242487787041091172993285722036771353385315602250068530806844064329497901402505960027586560000000000000000000000000000000000000000000000000000000000000000000000
 
-3377935892634221626388052922297705786618598964999864836757368368777858963925251486339124674722967232446464000000000000000000000000000000000000000000000000000000000000000000000
 
-605338551313179881885818079169493920301665261166191146563436179743312020844982148423241694163294025154560000000000000000000000000000000000000000000000000000000000000000000000
 
-377421993792704617715118686036386681871234122500748484244774441846292272837612164933785106450722911682560000000000000000000000000000000000000000000000000000000000000000000000
 
-6046078488734039375839489270378611687690149089748474312469038178625863824254048721242433075923871984517120000000000000000000000000000000000000000000000000000000000000000000000
 
10849977502588727975535593996341618716692624160079928645373553777726590641219088723671524611558566422118400000000000000000000000000000000000000000000000000000000000000000000000
 
19628042096379461206510608342076762155183228415815847123256352235985060734181859420749114967168142962327552000000000000000000000000000000000000000000000000000000000000000000000
 
6450957118509824280549783108569279231247765449868959304657669666993242172445169142943784174271916954091520000000000000000000000000000000000000000000000000000000000000000000000
 
1669403029825138126939533435328917521211481476433281648236429264377405110243075346076495932630393983860736000000000000000000000000000000000000000000000000000000000000000000000
 
163786902966645400140523203374281012887516694670136134672260606838957024061605279122208631101257112616960000000000000000000000000000000000000000000000000000000000000000000000
 
-141327829315700713164732396222623750250766913795635862024893767774083318421050709075350591385031220920320000000000000000000000000000000000000000000000000000000000000000000000
 
-1080884059019177210260988298588796007662126379893249046243300812410067858086460829258040890355892546751692800000000000000000000000000000000000000000000000000000000000000000000
 
-572858508791274654243340322652968909323919695990515451534041346744095898186684366843986198174647067869184000000000000000000000000000000000000000000000000000000000000000000000
 
-5350061721009965411029599288921503028428965082418834236262668238512293183005174716044680359011364478595891200000000000000000000000000000000000000000000000000000000000000000000
 
600921190256716823841211817577704049341841812477913377656576780645206398123822998195110541443797012289945600000000000000000000000000000000000000000000000000000000000000000000
 
-2108979140491121742403630266083908869060247644956595338235678789016280188214968591263128538505545451674009600000000000000000000000000000000000000000000000000000000000000000000
 
8921100902431857417103140321331712896026135846935934758280143503492957175153107998460586646545081753508249600000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
125818743395155068042730512625518963704352812063701984724196849944223884495484824576529414568795963392000000000000000000000000000000000000000000000000000000000000000000000000
 
-2601014567177148242487787041091172993285722036771353385315602250068530806844064329497901402505960027586560000000000000000000000000000000000000000000000000000000000000000000000
 
-3377935892634221626388052922297705786618598964999864836757368368777858963925251486339124674722967232446464000000000000000000000000000000000000000000000000000000000000000000000
 
-605338551313179881885818079169493920301665261166191146563436179743312020844982148423241694163294025154560000000000000000000000000000000000000000000000000000000000000000000000
 
-377421993792704617715118686036386681871234122500748484244774441846292272837612164933785106450722911682560000000000000000000000000000000000000000000000000000000000000000000000
 
-6046078488734039375839489270378611687690149089748474312469038178625863824254048721242433075923871984517120000000000000000000000000000000000000000000000000000000000000000000000
 
10849977502588727975535593996341618716692624160079928645373553777726590641219088723671524611558566422118400000000000000000000000000000000000000000000000000000000000000000000000
 
19628042096379461206510608342076762155183228415815847123256352235985060734181859420749114967168142962327552000000000000000000000000000000000000000000000000000000000000000000000
 
6450957118509824280549783108569279231247765449868959304657669666993242172445169142943784174271916954091520000000000000000000000000000000000000000000000000000000000000000000000
 
1669403029825138126939533435328917521211481476433281648236429264377405110243075346076495932630393983860736000000000000000000000000000000000000000000000000000000000000000000000
 
163786902966645400140523203374281012887516694670136134672260606838957024061605279122208631101257112616960000000000000000000000000000000000000000000000000000000000000000000000
 
-141327829315700713164732396222623750250766913795635862024893767774083318421050709075350591385031220920320000000000000000000000000000000000000000000000000000000000000000000000
 
-1080884059019177210260988298588796007662126379893249046243300812410067858086460829258040890355892546751692800000000000000000000000000000000000000000000000000000000000000000000
 
-572858508791274654243340322652968909323919695990515451534041346744095898186684366843986198174647067869184000000000000000000000000000000000000000000000000000000000000000000000
 
-5350061721009965411029599288921503028428965082418834236262668238512293183005174716044680359011364478595891200000000000000000000000000000000000000000000000000000000000000000000
 
600921190256716823841211817577704049341841812477913377656576780645206398123822998195110541443797012289945600000000000000000000000000000000000000000000000000000000000000000000
 
-2108979140491121742403630266083908869060247644956595338235678789016280188214968591263128538505545451674009600000000000000000000000000000000000000000000000000000000000000000000
 
8921100902431857417103140321331712896026135846935934758280143503492957175153107998460586646545081753508249600000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-2601014567177148242487787041091172993285722036771353385315602250068530806844064329497901402505960027586560000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
9058949524451164899076596909037365386713402468586542900142173195984119683674907369510117848953309364224000000000000000000000000000000000000000000000000000000000000000000000000
 
-24726160626783504730965698953776285200538474391196583880019933546249257627716703338593258769552998418874368000000000000000000000000000000000000000000000000000000000000000000000
 
229522153859051613965438737614369602033280915057026342905570831315677269217788039910806245283368633085460480000000000000000000000000000000000000000000000000000000000000000000000
 
-27174383553074732475488545394619841094728856820053890865623759812933043644308075875232527664452049641144320000000000000000000000000000000000000000000000000000000000000000000000
 
-435317651188850835060443227467260041513690734461890150497770748861062195346291507929455181466518782885232640000000000000000000000000000000000000000000000000000000000000000000000
 
781198380186388414238562767736596547601868939525754862466895871996314526167774388104349772032216782392524800000000000000000000000000000000000000000000000000000000000000000000000
 
1413219030939321206868763800629526875173192445938740992874457360990924372861093878293936277636106293287583744000000000000000000000000000000000000000000000000000000000000000000000
 
464468912532707348199584383816988104649839112390565069935352216023513436416052178291952460547578020694589440000000000000000000000000000000000000000000000000000000000000000000000
 
120197018147409945139646407343682061527226666303196278673022907035173167937501424917507707149388366837972992000000000000000000000000000000000000000000000000000000000000000000000
 
11792657013598468810117670642948232927901202016249801696402763692404905732435580096799021439290512108421120000000000000000000000000000000000000000000000000000000000000000000000
 
-10175603710730451347860732528028910018055217793285782065792351279733998926315651053425242579722247906263040000000000000000000000000000000000000000000000000000000000000000000000
 
-77823652249380759138791157498393312551673099352313931329517658493524885782225179706578944105624263366121881600000000000000000000000000000000000000000000000000000000000000000000
 
-41245812632971775105520503231013761471322218111317112510450976965574904669441274412767006268574588886581248000000000000000000000000000000000000000000000000000000000000000000000
 
-385204443912717509594131148802348218046885485934156065010912113172885109176372579555216985848818242458904166400000000000000000000000000000000000000000000000000000000000000000000
 
43266325698483611316567250865594691552612610498409763191273528206454860664915255870047958983953384884876083200000000000000000000000000000000000000000000000000000000000000000000
 
14618434183976722066156991471793632997948379916491752307229671195213798086542378516920434987982169245011148800000000000000000000000000000000000000000000000000000000000000000000
 
642319264975093734031426103135883328513881780979387302596170332251492916611023775889162238551245886252593971200000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
9058949524451164899076596909037365386713402468586542900142173195984119683674907369510117848953309364224000000000000000000000000000000000000000000000000000000000000000000000000
 
-24726160626783504730965698953776285200538474391196583880019933546249257627716703338593258769552998418874368000000000000000000000000000000000000000000000000000000000000000000000
 
229522153859051613965438737614369602033280915057026342905570831315677269217788039910806245283368633085460480000000000000000000000000000000000000000000000000000000000000000000000
 
-27174383553074732475488545394619841094728856820053890865623759812933043644308075875232527664452049641144320000000000000000000000000000000000000000000000000000000000000000000000
 
-435317651188850835060443227467260041513690734461890150497770748861062195346291507929455181466518782885232640000000000000000000000000000000000000000000000000000000000000000000000
 
781198380186388414238562767736596547601868939525754862466895871996314526167774388104349772032216782392524800000000000000000000000000000000000000000000000000000000000000000000000
 
1413219030939321206868763800629526875173192445938740992874457360990924372861093878293936277636106293287583744000000000000000000000000000000000000000000000000000000000000000000000
 
464468912532707348199584383816988104649839112390565069935352216023513436416052178291952460547578020694589440000000000000000000000000000000000000000000000000000000000000000000000
 
120197018147409945139646407343682061527226666303196278673022907035173167937501424917507707149388366837972992000000000000000000000000000000000000000000000000000000000000000000000
 
11792657013598468810117670642948232927901202016249801696402763692404905732435580096799021439290512108421120000000000000000000000000000000000000000000000000000000000000000000000
 
-10175603710730451347860732528028910018055217793285782065792351279733998926315651053425242579722247906263040000000000000000000000000000000000000000000000000000000000000000000000
 
-77823652249380759138791157498393312551673099352313931329517658493524885782225179706578944105624263366121881600000000000000000000000000000000000000000000000000000000000000000000
 
-41245812632971775105520503231013761471322218111317112510450976965574904669441274412767006268574588886581248000000000000000000000000000000000000000000000000000000000000000000000
 
-385204443912717509594131148802348218046885485934156065010912113172885109176372579555216985848818242458904166400000000000000000000000000000000000000000000000000000000000000000000
 
43266325698483611316567250865594691552612610498409763191273528206454860664915255870047958983953384884876083200000000000000000000000000000000000000000000000000000000000000000000
 
14618434183976722066156991471793632997948379916491752307229671195213798086542378516920434987982169245011148800000000000000000000000000000000000000000000000000000000000000000000
 
642319264975093734031426103135883328513881780979387302596170332251492916611023775889162238551245886252593971200000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-24726160626783504730965698953776285200538474391196583880019933546249257627716703338593258769552998418874368000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
108707394293413978788919162908448384640560829623038514801706078351809436204098888434121414187439712370688000000000000000000000000000000000000000000000000000000000000000000000000
 
3125158255710371938549750335679079502407448096552264873067148978981866095029207029008573824943718573308641280000000000000000000000000000000000000000000000000000000000000000000000
 
445070891282103085157382581167973133609692539041538509840358803832486637298900660094678657851953971539738624000000000000000000000000000000000000000000000000000000000000000000000
 
-326092602636896789705862544735438093136746281840646690387485117755196523731696910502790331973424595693731840000000000000000000000000000000000000000000000000000000000000000000000
 
-5223811814266210020725318729607120498164288813542681805973248986332746344155498095153462177598225394622791680000000000000000000000000000000000000000000000000000000000000000000000
 
9374380562236660970862753212839158571222427274309058349602750463955774314013292657252197264386601388710297600000000000000000000000000000000000000000000000000000000000000000000000
 
16958628371271854482425165607554322502078309351264891914493488331891092474333126539527235331633275519451004928000000000000000000000000000000000000000000000000000000000000000000000
 
5573626950392488178395012605803857255798069348686780839224226592282161236992626139503429526570936248335073280000000000000000000000000000000000000000000000000000000000000000000000
 
1442364217768919341675756888124184738326719995638355344076274884422078015250017099010092485792660402055675904000000000000000000000000000000000000000000000000000000000000000000000
 
141511884163181625721412047715378795134814424194997620356833164308858868789226961161588257271486145301053440000000000000000000000000000000000000000000000000000000000000000000000
 
-122107244528765416174328790336346920216662613519429384789508215356807987115787812641102910956666974875156480000000000000000000000000000000000000000000000000000000000000000000000
 
-933883826992569109665493889980719750620077192227767175954211901922298629386702156478947329267491160393462579200000000000000000000000000000000000000000000000000000000000000000000
 
-494949751595661301266246038772165137655866617335805350125411723586898856033295292953204075222895066638974976000000000000000000000000000000000000000000000000000000000000000000000
 
-4622453326952610115129573785628178616562625831209872780130945358074621310116470954662603830185818909506849996800000000000000000000000000000000000000000000000000000000000000000000
 
519195908381803335798807010387136298631351325980917158295282338477458327978983070440575507807440618618512998400000000000000000000000000000000000000000000000000000000000000000000
 
-170745038567248401439635887691344396832158082478851146633523015304924029749525304537260402917955946924107366400000000000000000000000000000000000000000000000000000000000000000000
 
7707831179701124808377113237630599942166581371752647631154043987017914999332285310669946862614950635031127654400000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
108707394293413978788919162908448384640560829623038514801706078351809436204098888434121414187439712370688000000000000000000000000000000000000000000000000000000000000000000000000
 
3125158255710371938549750335679079502407448096552264873067148978981866095029207029008573824943718573308641280000000000000000000000000000000000000000000000000000000000000000000000
 
445070891282103085157382581167973133609692539041538509840358803832486637298900660094678657851953971539738624000000000000000000000000000000000000000000000000000000000000000000000
 
-326092602636896789705862544735438093136746281840646690387485117755196523731696910502790331973424595693731840000000000000000000000000000000000000000000000000000000000000000000000
 
-5223811814266210020725318729607120498164288813542681805973248986332746344155498095153462177598225394622791680000000000000000000000000000000000000000000000000000000000000000000000
 
9374380562236660970862753212839158571222427274309058349602750463955774314013292657252197264386601388710297600000000000000000000000000000000000000000000000000000000000000000000000
 
16958628371271854482425165607554322502078309351264891914493488331891092474333126539527235331633275519451004928000000000000000000000000000000000000000000000000000000000000000000000
 
5573626950392488178395012605803857255798069348686780839224226592282161236992626139503429526570936248335073280000000000000000000000000000000000000000000000000000000000000000000000
 
1442364217768919341675756888124184738326719995638355344076274884422078015250017099010092485792660402055675904000000000000000000000000000000000000000000000000000000000000000000000
 
141511884163181625721412047715378795134814424194997620356833164308858868789226961161588257271486145301053440000000000000000000000000000000000000000000000000000000000000000000000
 
-122107244528765416174328790336346920216662613519429384789508215356807987115787812641102910956666974875156480000000000000000000000000000000000000000000000000000000000000000000000
 
-933883826992569109665493889980719750620077192227767175954211901922298629386702156478947329267491160393462579200000000000000000000000000000000000000000000000000000000000000000000
 
-494949751595661301266246038772165137655866617335805350125411723586898856033295292953204075222895066638974976000000000000000000000000000000000000000000000000000000000000000000000
 
-4622453326952610115129573785628178616562625831209872780130945358074621310116470954662603830185818909506849996800000000000000000000000000000000000000000000000000000000000000000000
 
519195908381803335798807010387136298631351325980917158295282338477458327978983070440575507807440618618512998400000000000000000000000000000000000000000000000000000000000000000000
 
-170745038567248401439635887691344396832158082478851146633523015304924029749525304537260402917955946924107366400000000000000000000000000000000000000000000000000000000000000000000
 
7707831179701124808377113237630599942166581371752647631154043987017914999332285310669946862614950635031127654400000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
3125158255710371938549750335679079502407448096552264873067148978981866095029207029008573824943718573308641280000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
171214146012127016592547681580806205808883306656285660812687073404099862021455749283741227345217546983833600000000000000000000000000000000000000000000000000000000000000000000000000
 
-611579813629043855068017575645655705575862451561528093689637455136217306166498412534482120359534295614541004800000000000000000000000000000000000000000000000000000000000000000000000
 
-513595849153112443786733507958314996690375393899018537360289060464434524877422634041894772858143738217627648000000000000000000000000000000000000000000000000000000000000000000000000
 
-8227503607469280782642376999131214784608754881329723844407867153474075492044909499866702929717204996530896896000000000000000000000000000000000000000000000000000000000000000000000000
 
20014915255116165885872416874162528313719835759244571887377142265419879584220003743906614717314344390377236070400000000000000000000000000000000000000000000000000000000000000000000000
 
26709839684753170809819635831898057940773337228242204765327244122728470647074674299755395647322408943135332761600000000000000000000000000000000000000000000000000000000000000000000000
 
8778462446868168880972144854141075177881959224181679821778156882844403948263386169717901504349224591127740416000000000000000000000000000000000000000000000000000000000000000000000000
 
2271723642986047963139317098795590962864583993130409666920132942964772874018776930940895665123440133237689548800000000000000000000000000000000000000000000000000000000000000000000000
 
222881217557011060511223975151721602337332718107121252062012233786452718343032463829501505202590678849159168000000000000000000000000000000000000000000000000000000000000000000000000
 
-192318910132805530474567844779746399341243616293101281043475439186972579707365804909737084756750485428371456000000000000000000000000000000000000000000000000000000000000000000000000
 
-4171003760447057702630137166746358297306656733179890152457900463367952647389290769517749828347671424958369628160000000000000000000000000000000000000000000000000000000000000000000000
 
720530103977811981009542650059798069347585164041193712624708045261930027361579287522819017496925185231762227200000000000000000000000000000000000000000000000000000000000000000000000
 
-5705284229072333474300004543182125251872781843493208132680395853560668051538721410973279824771030621525733539840000000000000000000000000000000000000000000000000000000000000000000000
 
-782347471222370178654351130507949034888235087014815090695310594136718574088055662908483373574464935209866362880000000000000000000000000000000000000000000000000000000000000000000000
 
518616444695597496247110561477260609596027940426980192065122793598174909091857816663975469290036464068308500480000000000000000000000000000000000000000000000000000000000000000000000
 
15289993629785326487252101687632707047339073341835103011119305450366937147737790049545808724161815572069136465920000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
171214146012127016592547681580806205808883306656285660812687073404099862021455749283741227345217546983833600000000000000000000000000000000000000000000000000000000000000000000000000
 
-611579813629043855068017575645655705575862451561528093689637455136217306166498412534482120359534295614541004800000000000000000000000000000000000000000000000000000000000000000000000
 
-513595849153112443786733507958314996690375393899018537360289060464434524877422634041894772858143738217627648000000000000000000000000000000000000000000000000000000000000000000000000
 
-8227503607469280782642376999131214784608754881329723844407867153474075492044909499866702929717204996530896896000000000000000000000000000000000000000000000000000000000000000000000000
 
20014915255116165885872416874162528313719835759244571887377142265419879584220003743906614717314344390377236070400000000000000000000000000000000000000000000000000000000000000000000000
 
26709839684753170809819635831898057940773337228242204765327244122728470647074674299755395647322408943135332761600000000000000000000000000000000000000000000000000000000000000000000000
 
8778462446868168880972144854141075177881959224181679821778156882844403948263386169717901504349224591127740416000000000000000000000000000000000000000000000000000000000000000000000000
 
2271723642986047963139317098795590962864583993130409666920132942964772874018776930940895665123440133237689548800000000000000000000000000000000000000000000000000000000000000000000000
 
222881217557011060511223975151721602337332718107121252062012233786452718343032463829501505202590678849159168000000000000000000000000000000000000000000000000000000000000000000000000
 
-192318910132805530474567844779746399341243616293101281043475439186972579707365804909737084756750485428371456000000000000000000000000000000000000000000000000000000000000000000000000
 
-4171003760447057702630137166746358297306656733179890152457900463367952647389290769517749828347671424958369628160000000000000000000000000000000000000000000000000000000000000000000000
 
720530103977811981009542650059798069347585164041193712624708045261930027361579287522819017496925185231762227200000000000000000000000000000000000000000000000000000000000000000000000
 
-5705284229072333474300004543182125251872781843493208132680395853560668051538721410973279824771030621525733539840000000000000000000000000000000000000000000000000000000000000000000000
 
-782347471222370178654351130507949034888235087014815090695310594136718574088055662908483373574464935209866362880000000000000000000000000000000000000000000000000000000000000000000000
 
518616444695597496247110561477260609596027940426980192065122793598174909091857816663975469290036464068308500480000000000000000000000000000000000000000000000000000000000000000000000
 
15289993629785326487252101687632707047339073341835103011119305450366937147737790049545808724161815572069136465920000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-611579813629043855068017575645655705575862451561528093689637455136217306166498412534482120359534295614541004800000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
35954970662546673484435013131969303219865494397819988770664285414860971024505707349585657742495684866605056000000000000000000000000000000000000000000000000000000000000000000000000000
 
-107855128322153613195214036671246149304978832718793892845660702697531250224258753148797902300210185025701806080000000000000000000000000000000000000000000000000000000000000000000000000
 
-1727775757568548964354899169817555104767838525079242007325652102229555853329430994972007615240613049271488348160000000000000000000000000000000000000000000000000000000000000000000000000
 
3689405160125997997776072780031780153197441050129676497649904413423752175506342119691424109534003513663005130752000000000000000000000000000000000000000000000000000000000000000000000000
 
4645828127332421798329995843056684431280417456721456253157542273933436578673446603206823746371439362465517797376000000000000000000000000000000000000000000000000000000000000000000000000
 
1843477113842315465004150419369625787355211437078152762573412945397324829135311095640759315913337164136825487360000000000000000000000000000000000000000000000000000000000000000000000000
 
477061965027070072259256590747074102201562638557386030053227918022602303543943155497588089675922427979914805248000000000000000000000000000000000000000000000000000000000000000000000000
 
46805055686972322707357034781861536490839870802495462933022569095155070852036817404195316092544042558323425280000000000000000000000000000000000000000000000000000000000000000000000000
 
-40386971127889161399659247403746743861661159421551269019129842229264241738546819031044787798917601939958005760000000000000000000000000000000000000000000000000000000000000000000000000
 
-611708310206135172162945212337811977625625334893196795542235716688424179687823747383831187957692183535775907840000000000000000000000000000000000000000000000000000000000000000000000000
 
4532166564369990795679738357600225224785896073883937165675700272313152265972031371516284788066057951180226560000000000000000000000000000000000000000000000000000000000000000000000000
 
-1352227801139709081080141383130951540698401524927078787472671767942067051977089096263078257532519073015268376576000000000000000000000000000000000000000000000000000000000000000000000000
 
-7728536667662510620001238041381436699108580673359977061468036253839270179868095601954085638596856716749438976000000000000000000000000000000000000000000000000000000000000000000000000
 
31850396868815948473323003378872109112607198592913300528781467308453350332311341520090101385606336206912618496000000000000000000000000000000000000000000000000000000000000000000000000
 
2902662436185880459368660496277458004330970726198361473115476867188403278717020710487240843412775985144789991424000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
35954970662546673484435013131969303219865494397819988770664285414860971024505707349585657742495684866605056000000000000000000000000000000000000000000000000000000000000000000000000000
 
-107855128322153613195214036671246149304978832718793892845660702697531250224258753148797902300210185025701806080000000000000000000000000000000000000000000000000000000000000000000000000
 
-1727775757568548964354899169817555104767838525079242007325652102229555853329430994972007615240613049271488348160000000000000000000000000000000000000000000000000000000000000000000000000
 
3689405160125997997776072780031780153197441050129676497649904413423752175506342119691424109534003513663005130752000000000000000000000000000000000000000000000000000000000000000000000000
 
4645828127332421798329995843056684431280417456721456253157542273933436578673446603206823746371439362465517797376000000000000000000000000000000000000000000000000000000000000000000000000
 
1843477113842315465004150419369625787355211437078152762573412945397324829135311095640759315913337164136825487360000000000000000000000000000000000000000000000000000000000000000000000000
 
477061965027070072259256590747074102201562638557386030053227918022602303543943155497588089675922427979914805248000000000000000000000000000000000000000000000000000000000000000000000000
 
46805055686972322707357034781861536490839870802495462933022569095155070852036817404195316092544042558323425280000000000000000000000000000000000000000000000000000000000000000000000000
 
-40386971127889161399659247403746743861661159421551269019129842229264241738546819031044787798917601939958005760000000000000000000000000000000000000000000000000000000000000000000000000
 
-611708310206135172162945212337811977625625334893196795542235716688424179687823747383831187957692183535775907840000000000000000000000000000000000000000000000000000000000000000000000000
 
4532166564369990795679738357600225224785896073883937165675700272313152265972031371516284788066057951180226560000000000000000000000000000000000000000000000000000000000000000000000000
 
-1352227801139709081080141383130951540698401524927078787472671767942067051977089096263078257532519073015268376576000000000000000000000000000000000000000000000000000000000000000000000000
 
-7728536667662510620001238041381436699108580673359977061468036253839270179868095601954085638596856716749438976000000000000000000000000000000000000000000000000000000000000000000000000
 
31850396868815948473323003378872109112607198592913300528781467308453350332311341520090101385606336206912618496000000000000000000000000000000000000000000000000000000000000000000000000
 
2902662436185880459368660496277458004330970726198361473115476867188403278717020710487240843412775985144789991424000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-1727775757568548964354899169817555104767838525079242007325652102229555853329430994972007615240613049271488348160000000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
143819882650186693937740052527877212879461977591279955082657141659443884098022829398342630969982739466420224000000000000000000000000000000000000000000000000000000000000000000000000000
 
-431420513288614452780856146684984597219915330875175571382642810790125000897035012595191609200840740102807224320000000000000000000000000000000000000000000000000000000000000000000000000
 
14757620640503991991104291120127120612789764200518705990599617653695008702025368478765696438136014054652020523008000000000000000000000000000000000000000000000000000000000000000000000000
 
18583312509329687193319983372226737725121669826885825012630169095733746314693786412827294985485757449862071189504000000000000000000000000000000000000000000000000000000000000000000000000
 
22923890273486202539210694205836499092331392474025789116224520701655301996506123337311105800818866099990697082880000000000000000000000000000000000000000000000000000000000000000000000000
 
1908247860108280289037026362988296408806250554229544120212911672090409214175772621990352358703689711919659220992000000000000000000000000000000000000000000000000000000000000000000000000
 
187220222747889290829428139127446145963359483209981851732090276380620283408147269616781264370176170233293701120000000000000000000000000000000000000000000000000000000000000000000000000
 
-161547884511556645598636989614986975446644637686205076076519368917056966954187276124179151195670407759832023040000000000000000000000000000000000000000000000000000000000000000000000000
 
-2446833240824540688651780849351247910502501339572787182168942866753696718751294989535324751830768734143103631360000000000000000000000000000000000000000000000000000000000000000000000000
 
18128666257479963182718953430400900899143584295535748662702801089252609063888125486065139152264231804720906240000000000000000000000000000000000000000000000000000000000000000000000000
 
-5408911204558836324320565532523806162793606099708315149890687071768268207908356385052313030130076292061073506304000000000000000000000000000000000000000000000000000000000000000000000000
 
-30914146670650042480004952165525746796434322693439908245872145015357080719472382407816342554387426866997755904000000000000000000000000000000000000000000000000000000000000000000000000
 
127401587475263793893292013515488436450428794371653202115125869233813401329245366080360405542425344827650473984000000000000000000000000000000000000000000000000000000000000000000000000
 
11610649744743521837474641985109832017323882904793445892461907468753613114868082841948963373651103940579159965696000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
143819882650186693937740052527877212879461977591279955082657141659443884098022829398342630969982739466420224000000000000000000000000000000000000000000000000000000000000000000000000000
 
-431420513288614452780856146684984597219915330875175571382642810790125000897035012595191609200840740102807224320000000000000000000000000000000000000000000000000000000000000000000000000
 
14757620640503991991104291120127120612789764200518705990599617653695008702025368478765696438136014054652020523008000000000000000000000000000000000000000000000000000000000000000000000000
 
18583312509329687193319983372226737725121669826885825012630169095733746314693786412827294985485757449862071189504000000000000000000000000000000000000000000000000000000000000000000000000
 
22923890273486202539210694205836499092331392474025789116224520701655301996506123337311105800818866099990697082880000000000000000000000000000000000000000000000000000000000000000000000000
 
1908247860108280289037026362988296408806250554229544120212911672090409214175772621990352358703689711919659220992000000000000000000000000000000000000000000000000000000000000000000000000
 
187220222747889290829428139127446145963359483209981851732090276380620283408147269616781264370176170233293701120000000000000000000000000000000000000000000000000000000000000000000000000
 
-161547884511556645598636989614986975446644637686205076076519368917056966954187276124179151195670407759832023040000000000000000000000000000000000000000000000000000000000000000000000000
 
-2446833240824540688651780849351247910502501339572787182168942866753696718751294989535324751830768734143103631360000000000000000000000000000000000000000000000000000000000000000000000000
 
18128666257479963182718953430400900899143584295535748662702801089252609063888125486065139152264231804720906240000000000000000000000000000000000000000000000000000000000000000000000000
 
-5408911204558836324320565532523806162793606099708315149890687071768268207908356385052313030130076292061073506304000000000000000000000000000000000000000000000000000000000000000000000000
 
-30914146670650042480004952165525746796434322693439908245872145015357080719472382407816342554387426866997755904000000000000000000000000000000000000000000000000000000000000000000000000
 
127401587475263793893292013515488436450428794371653202115125869233813401329245366080360405542425344827650473984000000000000000000000000000000000000000000000000000000000000000000000000
 
11610649744743521837474641985109832017323882904793445892461907468753613114868082841948963373651103940579159965696000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
14757620640503991991104291120127120612789764200518705990599617653695008702025368478765696438136014054652020523008000000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
10355031550813441963517283782007159327321262386572156765951314199479959655057643716680669429838757241582256128000000000000000000000000000000000000000000000000000000000000000000000000000
 
-31062276956780240600221642561318890999833903823012641139550282376889000064586520906853795862460533287402120151040000000000000000000000000000000000000000000000000000000000000000000000000
 
98358366869402150666278348709646984734420034692208097699004291982449003687821669507246738151549355799299401711616000000000000000000000000000000000000000000000000000000000000000000000000
 
100969932438087423757219415206880270304935017075392687355205636881205830035777190016001491654676883460868035051520000000000000000000000000000000000000000000000000000000000000000000000000
 
137393845927796180810665898135157341434050039904527176655329640390509463420655628783305369826665659258215463911424000000000000000000000000000000000000000000000000000000000000000000000000
 
13479856037848028939718826017176122509361882791118693324710499899404660405386603412408251034652684256797146480640000000000000000000000000000000000000000000000000000000000000000000000000
 
-11631447684832078483101863252279062232158413913406765477509394562028101620701483880940898886088269358707905658880000000000000000000000000000000000000000000000000000000000000000000000000
 
-176171993339366929582928221153289849556180096449240677116163886406266163750093239246543382131815348858303461457920000000000000000000000000000000000000000000000000000000000000000000000000
 
1305263970538557349155764646988864864738338069278573903714601678426187852599945034996690018963024689939905249280000000000000000000000000000000000000000000000000000000000000000000000000
 
-389441606728236215351080718341714043721139639178998690792129469167315310969401659723766538169365493028397292453888000000000000000000000000000000000000000000000000000000000000000000000000
 
-2225818560286803058560356555917853769343271233927673393702794441105709811802011533362776663915894734423838425088000000000000000000000000000000000000000000000000000000000000000000000000
 
9172914298218993160317024973115167424430873194759030552289062584834564895705666357785949199054624827590834126848000000000000000000000000000000000000000000000000000000000000000000000000
 
-108520939370721915132500408760227813971225339688069079141118192086220412659121618020679209137825415776029795942400000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
10355031550813441963517283782007159327321262386572156765951314199479959655057643716680669429838757241582256128000000000000000000000000000000000000000000000000000000000000000000000000000
 
-31062276956780240600221642561318890999833903823012641139550282376889000064586520906853795862460533287402120151040000000000000000000000000000000000000000000000000000000000000000000000000
 
98358366869402150666278348709646984734420034692208097699004291982449003687821669507246738151549355799299401711616000000000000000000000000000000000000000000000000000000000000000000000000
 
100969932438087423757219415206880270304935017075392687355205636881205830035777190016001491654676883460868035051520000000000000000000000000000000000000000000000000000000000000000000000000
 
137393845927796180810665898135157341434050039904527176655329640390509463420655628783305369826665659258215463911424000000000000000000000000000000000000000000000000000000000000000000000000
 
13479856037848028939718826017176122509361882791118693324710499899404660405386603412408251034652684256797146480640000000000000000000000000000000000000000000000000000000000000000000000000
 
-11631447684832078483101863252279062232158413913406765477509394562028101620701483880940898886088269358707905658880000000000000000000000000000000000000000000000000000000000000000000000000
 
-176171993339366929582928221153289849556180096449240677116163886406266163750093239246543382131815348858303461457920000000000000000000000000000000000000000000000000000000000000000000000000
 
1305263970538557349155764646988864864738338069278573903714601678426187852599945034996690018963024689939905249280000000000000000000000000000000000000000000000000000000000000000000000000
 
-389441606728236215351080718341714043721139639178998690792129469167315310969401659723766538169365493028397292453888000000000000000000000000000000000000000000000000000000000000000000000000
 
-2225818560286803058560356555917853769343271233927673393702794441105709811802011533362776663915894734423838425088000000000000000000000000000000000000000000000000000000000000000000000000
 
9172914298218993160317024973115167424430873194759030552289062584834564895705666357785949199054624827590834126848000000000000000000000000000000000000000000000000000000000000000000000000
 
-108520939370721915132500408760227813971225339688069079141118192086220412659121618020679209137825415776029795942400000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
98358366869402150666278348709646984734420034692208097699004291982449003687821669507246738151549355799299401711616000000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
124260378609761303562207405384085911927855148638865881191415770393759515860691724600168033158065086898987073536000000000000000000000000000000000000000000000000000000000000000000000000000
 
-372747323481362887202659710735826691998006845876151693674603388522668000775038250882245550349526399448825441812480000000000000000000000000000000000000000000000000000000000000000000000000
 
-263736313783983174907542248162141527357080315478409217222596737162265094887998762416683172417117735459074605056000000000000000000000000000000000000000000000000000000000000000000000000000
 
-121724452515684542265019499151757628010960145605419638718121570997968505332922505730776848807900493288803663872000000000000000000000000000000000000000000000000000000000000000000000000000
 
161758272454176347276625912206113470112342593493424319896525998792855924864639240948899012415832211081565757767680000000000000000000000000000000000000000000000000000000000000000000000000
 
-139577372217984941797222359027348746785900966960881185730112734744337219448417806571290786633059232304494867906560000000000000000000000000000000000000000000000000000000000000000000000000
 
-2114063920072403154995138653839478194674161157390888125393966636875193965001118870958520585581784186299641537495040000000000000000000000000000000000000000000000000000000000000000000000000
 
15663167646462688189869175763866378376860056831342886844575220141114254231199340419960280227556296279278862991360000000000000000000000000000000000000000000000000000000000000000000000000
 
-4673299280738834584212968620100568524653675670147984289505553630007783731632819916685198458032385916340767509446656000000000000000000000000000000000000000000000000000000000000000000000000
 
-26709822723441636702724278671014245232119254807132080724433533293268517741624138400353319966990736813086061101056000000000000000000000000000000000000000000000000000000000000000000000000
 
110074971578627917923804299677382009093170478337108366627468751018014778748467996293431390388655497931090009522176000000000000000000000000000000000000000000000000000000000000000000000000
 
74765863722967127737891976812324018627176409434084418092641782719641099720043956853303824467785991877834072653824000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
124260378609761303562207405384085911927855148638865881191415770393759515860691724600168033158065086898987073536000000000000000000000000000000000000000000000000000000000000000000000000000
 
-372747323481362887202659710735826691998006845876151693674603388522668000775038250882245550349526399448825441812480000000000000000000000000000000000000000000000000000000000000000000000000
 
-263736313783983174907542248162141527357080315478409217222596737162265094887998762416683172417117735459074605056000000000000000000000000000000000000000000000000000000000000000000000000000
 
-121724452515684542265019499151757628010960145605419638718121570997968505332922505730776848807900493288803663872000000000000000000000000000000000000000000000000000000000000000000000000000
 
161758272454176347276625912206113470112342593493424319896525998792855924864639240948899012415832211081565757767680000000000000000000000000000000000000000000000000000000000000000000000000
 
-139577372217984941797222359027348746785900966960881185730112734744337219448417806571290786633059232304494867906560000000000000000000000000000000000000000000000000000000000000000000000000
 
-2114063920072403154995138653839478194674161157390888125393966636875193965001118870958520585581784186299641537495040000000000000000000000000000000000000000000000000000000000000000000000000
 
15663167646462688189869175763866378376860056831342886844575220141114254231199340419960280227556296279278862991360000000000000000000000000000000000000000000000000000000000000000000000000
 
-4673299280738834584212968620100568524653675670147984289505553630007783731632819916685198458032385916340767509446656000000000000000000000000000000000000000000000000000000000000000000000000
 
-26709822723441636702724278671014245232119254807132080724433533293268517741624138400353319966990736813086061101056000000000000000000000000000000000000000000000000000000000000000000000000
 
110074971578627917923804299677382009093170478337108366627468751018014778748467996293431390388655497931090009522176000000000000000000000000000000000000000000000000000000000000000000000000
 
74765863722967127737891976812324018627176409434084418092641782719641099720043956853303824467785991877834072653824000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-2114063920072403154995138653839478194674161157390888125393966636875193965001118870958520585581784186299641537495040000000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (
497041514439045214248829621536343647711420594555463524765663081575038063442766898400672132632260347595948294144000000000000000000000000000000000000000000000000000000000000000000000000000
 
-1490989293925451548810638842943306767992027383504606774698413554090672003100153003528982201398105597795301767249920000000000000000000000000000000000000000000000000000000000000000000000000
 
-1054945255135932699630168992648566109428321261913636868890386948649060379551995049666732689668470941836298420224000000000000000000000000000000000000000000000000000000000000000000000000000
 
-486897810062738169060077996607030512043840582421678554872486283991874021331690022923107395231601973155214655488000000000000000000000000000000000000000000000000000000000000000000000000000
 
647033089816705389106503648824453880449370373973697279586103995171423699458556963795596049663328844326263031070720000000000000000000000000000000000000000000000000000000000000000000000000
 
-558309488871939767188889436109394987143603867843524742920450938977348877793671226285163146532236929217979471626240000000000000000000000000000000000000000000000000000000000000000000000000
 
62652670585850752759476703055465513507440227325371547378300880564457016924797361679841120910225185117115451965440000000000000000000000000000000000000000000000000000000000000000000000000
 
333378157696290058104373404153029653452747735926055970523485211845610758478790171885891438106514011333703799668736000000000000000000000000000000000000000000000000000000000000000000000000
 
-106839290893766546810897114684056980928477019228528322897734133173074070966496553601413279867962947252344244404224000000000000000000000000000000000000000000000000000000000000000000000000
 
440299886314511671695217198709528036372681913348433466509875004072059114993871985173725561554621991724360038088704000000000000000000000000000000000000000000000000000000000000000000000000
 
299063454891868510951567907249296074508705637736337672370567130878564398880175827413215297871143967511336290615296000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
497041514439045214248829621536343647711420594555463524765663081575038063442766898400672132632260347595948294144000000000000000000000000000000000000000000000000000000000000000000000000000
 
-1490989293925451548810638842943306767992027383504606774698413554090672003100153003528982201398105597795301767249920000000000000000000000000000000000000000000000000000000000000000000000000
 
-1054945255135932699630168992648566109428321261913636868890386948649060379551995049666732689668470941836298420224000000000000000000000000000000000000000000000000000000000000000000000000000
 
-486897810062738169060077996607030512043840582421678554872486283991874021331690022923107395231601973155214655488000000000000000000000000000000000000000000000000000000000000000000000000000
 
647033089816705389106503648824453880449370373973697279586103995171423699458556963795596049663328844326263031070720000000000000000000000000000000000000000000000000000000000000000000000000
 
-558309488871939767188889436109394987143603867843524742920450938977348877793671226285163146532236929217979471626240000000000000000000000000000000000000000000000000000000000000000000000000
 
62652670585850752759476703055465513507440227325371547378300880564457016924797361679841120910225185117115451965440000000000000000000000000000000000000000000000000000000000000000000000000
 
333378157696290058104373404153029653452747735926055970523485211845610758478790171885891438106514011333703799668736000000000000000000000000000000000000000000000000000000000000000000000000
 
-106839290893766546810897114684056980928477019228528322897734133173074070966496553601413279867962947252344244404224000000000000000000000000000000000000000000000000000000000000000000000000
 
440299886314511671695217198709528036372681913348433466509875004072059114993871985173725561554621991724360038088704000000000000000000000000000000000000000000000000000000000000000000000000
 
299063454891868510951567907249296074508705637736337672370567130878564398880175827413215297871143967511336290615296000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
62652670585850752759476703055465513507440227325371547378300880564457016924797361679841120910225185117115451965440000000000000000000000000000000000000000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)
) (
5964498173268542570985955458436123772537047134665562297187956978900456761313202780808065591587124171151379529728000000000000000000000000000000000000000000000000000000000000000000000000000
 
-17891871527105418585727666115319681215904328602055281296380962649088064037201836042347786416777267173543621206999040000000000000000000000000000000000000000000000000000000000000000000000000
 
-12659343061631192395562027911782793313139855142963642426684643383788724554623940596000792276021651302035581042688000000000000000000000000000000000000000000000000000000000000000000000000000
 
-5842773720752858028720935959284366144526086989060142658469835407902488255980280275077288742779223677862575865856000000000000000000000000000000000000000000000000000000000000000000000000000
 
7764397077800464669278043785893446565392444487684367355033247942057084393502683565547152595959946131915156372848640000000000000000000000000000000000000000000000000000000000000000000000000
 
-6699713866463277206266673233312739845723246414122296915045411267728186533524054715421957758386843150615753659514880000000000000000000000000000000000000000000000000000000000000000000000000
 
3060747833567719405860330304004373138821369421232098435607309333680473847873521637433080443624790359247713816543232000000000000000000000000000000000000000000000000000000000000000000000000
 
-2409819561270512111401346031207063014275648322599027727582225448237115156244311153454099534799608699136209068228608000000000000000000000000000000000000000000000000000000000000000000000000
 
5283598635774140060342606384514336436472182960181201598118500048864709379926463822084706738655463900692320457064448000000000000000000000000000000000000000000000000000000000000000000000000
 
3588761458702422131418814886991552894104467652836052068446805570542772786562109928958583574453727610136035487383552000000000000000000000000000000000000000000000000000000000000000000000000
 
877137388201910538632673842776517189104163182555201663296212327902398236947163063517775692743152591639616327516160000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (5512500 
-71820000 -135174375 -58471875 -17955000 1382400 -768000 -806400 -787968 437760 
1278848 -466944 -328320 182400 -403200 -262656 255360 43208640 -14554800 
22579200 17322496 -6096720 -43092000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -58471875
Arg4: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (4134375 1874250 -55296 30720 32256 -32768 -23040 12800 -18432 17920 
1068480 -593600 -680400 602112 176960 -1250550) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4134375
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (22790742187500 
-296930812500000 -558861556640625 35358208593750 5715360000000 -3175200000000 
-3333960000000 -6491016000000 3606120000000 7173306000000 -3846528000000 
-2704590000000 1502550000000 -1666980000000 -2163672000000 2103570000000 
241116750000000 -94883906250000 53566616250000 106824312000000 -14858943750000 
-251280490781250) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0
 0 1 0 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (22790742187500 
-296930812500000 -558861556640625 35358208593750 5715360000000 -3175200000000 
-3333960000000 -6491016000000 3606120000000 7173306000000 -3846528000000 
-2704590000000 1502550000000 -1666980000000 -2163672000000 2103570000000 
241116750000000 -94883906250000 53566616250000 106824312000000 -14858943750000 
-251280490781250) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 35358208593750
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1929375
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (43971888208007812500 
-572890886367187500000 -1078253515843505859375 11027072700000000000 
-6126151500000000000 -6432459075000000000 -10446238523700000000 
5803465846500000000 12628200738825000000 -6190363569600000000 
-14663053010812500000 8146140561562500000 2798201744296875000 
-9591977952900000000 2494328220562500000 479193751179281250000 
-190838370870000000000 93994308233437500000 215560922002650000000 
-27520039982531250000 -415815404696015625000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (43971888208007812500 -572890886367187500000 
-1078253515843505859375 11027072700000000000 -6126151500000000000 
-6432459075000000000 -10446238523700000000 5803465846500000000 
12628200738825000000 -6190363569600000000 -14663053010812500000 
8146140561562500000 2798201744296875000 -9591977952900000000 2494328220562500000
 479193751179281250000 -190838370870000000000 93994308233437500000 
215560922002650000000 -27520039982531250000 -415815404696015625000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -6432459075000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (
21106506339843750000000 -274987625456250000000000 -517561687604882812500000 
5292994896000000000000 -2940552720000000000000 3322272469824000000000 
8343308247120000000000 32228779871736000000000 1968754056192000000000 
-3564737544690000000000 -103706993250000000000 281781089887500000000 
-1825327096992000000000 -1504355265630000000000 230013000566055000000000 
-99070503003675000000000 73773873131175000000000 112268846575872000000000 
-13209619191615000000000 -199591394254087500000000 -4631370534000000000000 
-22333497908400000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (21106506339843750000000 
-274987625456250000000000 -517561687604882812500000 5292994896000000000000 
-2940552720000000000000 3322272469824000000000 8343308247120000000000 
32228779871736000000000 1968754056192000000000 -3564737544690000000000 
-103706993250000000000 281781089887500000000 -1825327096992000000000 
-1504355265630000000000 230013000566055000000000 -99070503003675000000000 
73773873131175000000000 112268846575872000000000 -13209619191615000000000 
-199591394254087500000000 -4631370534000000000000 -22333497908400000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 32228779871736000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (
42213012679687500000000 -549975250912500000000000 -1035123375209765625000000 
10585989792000000000000 -5881105440000000000000 6644544939648000000000 
16686616494240000000000 3937508112384000000000 -7129475089380000000000 
-96893753601708000000000 563562179775000000000 -3650654193984000000000 
-3008710531260000000000 460026001132110000000000 -128915119486944000000000 
-198141006007350000000000 147547746262350000000000 224537693151744000000000 
-26419238383230000000000 -399182788508175000000000 -9262741068000000000000 
-44666995816800000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (42213012679687500000000 
-549975250912500000000000 -1035123375209765625000000 10585989792000000000000 
-5881105440000000000000 6644544939648000000000 16686616494240000000000 
3937508112384000000000 -7129475089380000000000 -96893753601708000000000 
563562179775000000000 -3650654193984000000000 -3008710531260000000000 
460026001132110000000000 -128915119486944000000000 -198141006007350000000000 
147547746262350000000000 224537693151744000000000 -26419238383230000000000 
-399182788508175000000000 -9262741068000000000000 -44666995816800000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3937508112384000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
16209796869000000000000000 -211190496350400000000000000 
-397487376080550000000000000 4065020080128000000000000 
-2258344488960000000000000 2551505256824832000000000 6407660733788160000000000 
-2737718434321920000000000 3189381571031040000000000 -32423129026509312000000000
 216407877033600000000000 -1401851210489856000000000 -1155344844003840000000000 
176649984434730240000000000 -43124642740924416000000000 
-76086146306822400000000000 56658334564742400000000000 
86222474170269696000000000 -10144987539160320000000000 
-153286190787139200000000000 -1984504088641536000000000 
-2454390298644480000000000 -15238497451032576000000000 1543503180054528000000000
 3827257885237248000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
16209796869000000000000000 -211190496350400000000000000 
-397487376080550000000000000 4065020080128000000000000 
-2258344488960000000000000 2551505256824832000000000 6407660733788160000000000 
-2737718434321920000000000 3189381571031040000000000 -32423129026509312000000000
 216407877033600000000000 -1401851210489856000000000 -1155344844003840000000000 
176649984434730240000000000 -43124642740924416000000000 
-76086146306822400000000000 56658334564742400000000000 
86222474170269696000000000 -10144987539160320000000000 
-153286190787139200000000000 -1984504088641536000000000 
-2454390298644480000000000 -15238497451032576000000000 1543503180054528000000000
 3827257885237248000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 216407877033600000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
25530430068675000000000000000 -332625031751880000000000000000 
-626042617326866250000000000000 6402406626201600000000000000 
-3556892570112000000000000000 4018620779499110400000000000 
10092065655716352000000000000 -4311906534057024000000000000 
5023275974373888000000000000 -51066428216752166400000000000 
-2298806964875635200000000000 -1819668129306048000000000000 
278223725484700128000000000000 -67557747083539507200000000000 
-119835680433245280000000000000 89236876939469280000000000000 
135800396818174771200000000000 -15978355374177504000000000000 
-241425750489744240000000000000 -3312570345367449600000000000 
-3761788939388928000000000000 -23891563915351372800000000000 
-110800833041203200000000000 2485552293598348800000000000 
6246070309298534400000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (25530430068675000000000000000 
-332625031751880000000000000000 -626042617326866250000000000000 
6402406626201600000000000000 -3556892570112000000000000000 
4018620779499110400000000000 10092065655716352000000000000 
-4311906534057024000000000000 5023275974373888000000000000 
-51066428216752166400000000000 -2298806964875635200000000000 
-1819668129306048000000000000 278223725484700128000000000000 
-67557747083539507200000000000 -119835680433245280000000000000 
89236876939469280000000000000 135800396818174771200000000000 
-15978355374177504000000000000 -241425750489744240000000000000 
-3312570345367449600000000000 -3761788939388928000000000000 
-23891563915351372800000000000 -110800833041203200000000000 
2485552293598348800000000000 6246070309298534400000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -2298806964875635200000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (5361390314421750000000000000000 
-69851256667894800000000000000000 -131468949638641912500000000000000 
1344505391502336000000000000000 -746947439723520000000000000000 
843910363694813184000000000000 2119333787700433920000000000000 
-905500372151975040000000000000 1054887954618516480000000000000 
-10723949925517954944000000000000 -382130307154270080000000000000 
58426982351787026880000000000000 -16118124738038830080000000000000 
-28786113860660634240000000000000 18739744157288548800000000000000 
28518083331816701952000000000000 -3355454628577275840000000000000 
-50699407602846290400000000000000 297444836299109990400000000000 
-1341689348841827328000000000000 -5596527777372448358400000000000 
565226408069509939200000000000 232316304081323212800000000000 
153076054655372083200000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (5361390314421750000000000000000 
-69851256667894800000000000000000 -131468949638641912500000000000000 
1344505391502336000000000000000 -746947439723520000000000000000 
843910363694813184000000000000 2119333787700433920000000000000 
-905500372151975040000000000000 1054887954618516480000000000000 
-10723949925517954944000000000000 -382130307154270080000000000000 
58426982351787026880000000000000 -16118124738038830080000000000000 
-28786113860660634240000000000000 18739744157288548800000000000000 
28518083331816701952000000000000 -3355454628577275840000000000000 
-50699407602846290400000000000000 297444836299109990400000000000 
-1341689348841827328000000000000 -5596527777372448358400000000000 
565226408069509939200000000000 232316304081323212800000000000 
153076054655372083200000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1344505391502336000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (21445561257687000000000000000000 
-279405026671579200000000000000000 -525875798554567650000000000000000 
-2987789758894080000000000000000 -12100548523521024000000000000000 
3375641454779252736000000000000 8477335150801735680000000000000 
-3622001488607900160000000000000 4219551818474065920000000000000 
-42895799702071819776000000000000 -1528521228617080320000000000000 
233707929407148107520000000000000 -64472498952155320320000000000000 
-115144455442642536960000000000000 74958976629154195200000000000000 
114072333327266807808000000000000 -13421818514309103360000000000000 
-202797630411385161600000000000000 1189779345196439961600000000000 
-5366757395367309312000000000000 -22386111109489793433600000000000 
2260905632278039756800000000000 929265216325292851200000000000 
612304218621488332800000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 1 0 0 0 0 2) (3 0 0 0 1 0 0 0 2) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (21445561257687000000000000000000 
-279405026671579200000000000000000 -525875798554567650000000000000000 
-2987789758894080000000000000000 -12100548523521024000000000000000 
3375641454779252736000000000000 8477335150801735680000000000000 
-3622001488607900160000000000000 4219551818474065920000000000000 
-42895799702071819776000000000000 -1528521228617080320000000000000 
233707929407148107520000000000000 -64472498952155320320000000000000 
-115144455442642536960000000000000 74958976629154195200000000000000 
114072333327266807808000000000000 -13421818514309103360000000000000 
-202797630411385161600000000000000 1189779345196439961600000000000 
-5366757395367309312000000000000 -22386111109489793433600000000000 
2260905632278039756800000000000 929265216325292851200000000000 
612304218621488332800000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -279405026671579200000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1544080410553464000000000000000000 
-14393035255516218000000000000000000 29337527800515816000000000000000000 
-215120862640373760000000000000000 -871239493693513728000000000000000 
243046184744106196992000000000000 610368130857724968960000000000000 
-260784107179768811520000000000000 303807730930132746240000000000000 
-3088497578549171023872000000000000 -110053528460429783040000000000000 
16826970917314663741440000000000000 -4642019924555183063040000000000000 
-8290400791870262661120000000000000 5397046317299102054400000000000000 
8213207999563210162176000000000000 -966370933030255441920000000000000 
3280492317361337164800000000000000 85664112854143677235200000000000 
-386406532466446270464000000000000 -1611799999883265127219200000000000 
162785205524018862489600000000000 66907095575421085286400000000000 
44085903740747159961600000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 0 1 0 0 0 2) (3 0 0 0 0 1 0 0 2) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (1544080410553464000000000000000000 
-14393035255516218000000000000000000 29337527800515816000000000000000000 
-215120862640373760000000000000000 -871239493693513728000000000000000 
243046184744106196992000000000000 610368130857724968960000000000000 
-260784107179768811520000000000000 303807730930132746240000000000000 
-3088497578549171023872000000000000 -110053528460429783040000000000000 
16826970917314663741440000000000000 -4642019924555183063040000000000000 
-8290400791870262661120000000000000 5397046317299102054400000000000000 
8213207999563210162176000000000000 -966370933030255441920000000000000 
3280492317361337164800000000000000 85664112854143677235200000000000 
-386406532466446270464000000000000 -1611799999883265127219200000000000 
162785205524018862489600000000000 66907095575421085286400000000000 
44085903740747159961600000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -14393035255516218000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (2 0 0 0 0 0 0 0 2)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2)
 (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (18528964926641568000000000000000000 
567945862438933062000000000000000000 259074634599291924000000000000000000 
-2581450351684485120000000000000000 -10454873924322164736000000000000000 
2916554216929274363904000000000000 7324417570292699627520000000000000 
-3129409286157225738240000000000000 3645692771161592954880000000000000 
-37061970942590052286464000000000000 -1320642341525157396480000000000000 
201923651007775964897280000000000000 -55704239094662196756480000000000000 
-99484809502443151933440000000000000 64764555807589224652800000000000000 
98558495994758521946112000000000000 -11596451196363065303040000000000000 
-162136585768891006022400000000000000 1027969354249724126822400000000000 
-4636878389597355245568000000000000 -19341599998599181526630400000000000 
1953422466288226349875200000000000 802885146905053023436800000000000 
529030844888965919539200000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 0 0 1
 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (18528964926641568000000000000000000 
567945862438933062000000000000000000 259074634599291924000000000000000000 
-2581450351684485120000000000000000 -10454873924322164736000000000000000 
2916554216929274363904000000000000 7324417570292699627520000000000000 
-3129409286157225738240000000000000 3645692771161592954880000000000000 
-37061970942590052286464000000000000 -1320642341525157396480000000000000 
201923651007775964897280000000000000 -55704239094662196756480000000000000 
-99484809502443151933440000000000000 64764555807589224652800000000000000 
98558495994758521946112000000000000 -11596451196363065303040000000000000 
-162136585768891006022400000000000000 1027969354249724126822400000000000 
-4636878389597355245568000000000000 -19341599998599181526630400000000000 
1953422466288226349875200000000000 802885146905053023436800000000000 
529030844888965919539200000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 567945862438933062000000000000000000
Arg4: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (4134375 1874250 -55296 30720 32256 -32768 -23040 12800 -18432 17920 
1068480 -593600 -680400 602112 176960 -1250550) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4134375
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (3 0 0 0 0 0 1 0 2) (2 0 0 0 1 1 0 0 0)
 (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
76605689368583732700000000000000000000000 
6639159745277256834000000000000000000000 
-10672683797745543168000000000000000000000 
-43224369380869449830400000000000000000000 
43463263250040211294617600000000000000000 
12834591998054856357888000000000000000000 
-18319661738830224847872000000000000000000 
18610450020398958575616000000000000000000 
147321153136737586944000000000000000000 
15072661050771210872832000000000000000000 
-160497793154989090615449600000000000000000 
10468378136474414198784000000000000000000 
-15637620535648753082112000000000000000000 
227989299536522556786432000000000000000000 
-230302213506994019715072000000000000000000 
-74174845342912740671616000000000000000000 
654191325220451756058720000000000000000000 
65510762753498900344012800000000000000000 
-148447777732157142763776000000000000000000 
39911251484748987660240000000000000000000 
4250010798976203186831360000000000000000 
-19170594091991565593395200000000000000000 
-79965427494208491124162560000000000000000 
8076181009060385815265280000000000000000 
3319428279235578593771520000000000000000 
2187211899337818473594880000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (3 0 0 0 0 0 1 0 2) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
76605689368583732700000000000000000000000 
6639159745277256834000000000000000000000 
-10672683797745543168000000000000000000000 
-43224369380869449830400000000000000000000 
43463263250040211294617600000000000000000 
12834591998054856357888000000000000000000 
-18319661738830224847872000000000000000000 
18610450020398958575616000000000000000000 
147321153136737586944000000000000000000 
15072661050771210872832000000000000000000 
-160497793154989090615449600000000000000000 
10468378136474414198784000000000000000000 
-15637620535648753082112000000000000000000 
227989299536522556786432000000000000000000 
-230302213506994019715072000000000000000000 
-74174845342912740671616000000000000000000 
654191325220451756058720000000000000000000 
65510762753498900344012800000000000000000 
-148447777732157142763776000000000000000000 
39911251484748987660240000000000000000000 
4250010798976203186831360000000000000000 
-19170594091991565593395200000000000000000 
-79965427494208491124162560000000000000000 
8076181009060385815265280000000000000000 
3319428279235578593771520000000000000000 
2187211899337818473594880000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 6639159745277256834000000000000000000000
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1929375
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
147801101925511239278062500000000000000000000000 
-20591609302275307349760000000000000000000000000 
-83396017674214994766528000000000000000000000000 
84246997446400862060064000000000000000000000000 
24546038762161238822438400000000000000000000000 
-35573034650145707212077888000000000000000000000 
36137685993798813675761664000000000000000000000 
-1489214601325267763688000000000000000000000000 
29080815414831704977770240000000000000000000000 
-308675178362207931792017472000000000000000000000 
1129321072671661387463400000000000000000000000 
19180201567527922711700736000000000000000000000 
-30464550548098378820136000000000000000000000000 
442503571954899701893626000000000000000000000000 
-444339333185056586787767040000000000000000000000 
-144570379545494210085412320000000000000000000000 
1260423666428608744687516500000000000000000000000 
128170510996364814855024000000000000000000000000 
-286195791253454082017892000000000000000000000000 
89959593139315248984264000000000000000000000000 
8199864585274712023592755200000000000000000000 
-36987264976236226866756864000000000000000000000 
-154283296671638507562681139200000000000000000000 
15581981734355881882327449600000000000000000000 
6404421936250144449357926400000000000000000000 
4219951958284903517492121600000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
147801101925511239278062500000000000000000000000 
-20591609302275307349760000000000000000000000000 
-83396017674214994766528000000000000000000000000 
84246997446400862060064000000000000000000000000 
24546038762161238822438400000000000000000000000 
-35573034650145707212077888000000000000000000000 
36137685993798813675761664000000000000000000000 
-1489214601325267763688000000000000000000000000 
29080815414831704977770240000000000000000000000 
-308675178362207931792017472000000000000000000000 
1129321072671661387463400000000000000000000000 
19180201567527922711700736000000000000000000000 
-30464550548098378820136000000000000000000000000 
442503571954899701893626000000000000000000000000 
-444339333185056586787767040000000000000000000000 
-144570379545494210085412320000000000000000000000 
1260423666428608744687516500000000000000000000000 
128170510996364814855024000000000000000000000000 
-286195791253454082017892000000000000000000000000 
89959593139315248984264000000000000000000000000 
8199864585274712023592755200000000000000000000 
-36987264976236226866756864000000000000000000000 
-154283296671638507562681139200000000000000000000 
15581981734355881882327449600000000000000000000 
6404421936250144449357926400000000000000000000 
4219951958284903517492121600000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -83396017674214994766528000000000000000000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 1 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)
 (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
70944528924245394853470000000000000000000000000000 
-9883972465092147527884800000000000000000000000000 
148519797680055047006251008000000000000000000000000 
83836257876359150113050624000000000000000000000000 
322179943266636659248438517760000000000000000000000 
81394230850820546545059102720000000000000000000000 
44319026535439968647354880000000000000000000000000 
13958791399119218389329715200000000000000000000000 
-200203200642569963994481858560000000000000000000000 
-13218268801363076670494688000000000000000000000000 
45233576387674280640756449280000000000000000000000 
-49649311686257519635607040000000000000000000000000 
212401714538351856908940480000000000000000000000000 
-213282879928827161658128179200000000000000000000000 
-166216558701600829764936921600000000000000000000000 
976532618624359999134890160000000000000000000000000 
175607597456581223971021824000000000000000000000000 
-137373979801657959368588160000000000000000000000000 
43180604706871319512446720000000000000000000000000 
3935935000931861771324522496000000000000000000000 
-77799019914028185127943454720000000000000000000000 
-363606955767260945459472162816000000000000000000000 
7479351232490823303517175808000000000000000000000 
3074122529400069335691804672000000000000000000000 
2025576939976753688396218368000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0
 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
70944528924245394853470000000000000000000000000000 
-9883972465092147527884800000000000000000000000000 
148519797680055047006251008000000000000000000000000 
83836257876359150113050624000000000000000000000000 
322179943266636659248438517760000000000000000000000 
81394230850820546545059102720000000000000000000000 
44319026535439968647354880000000000000000000000000 
13958791399119218389329715200000000000000000000000 
-200203200642569963994481858560000000000000000000000 
-13218268801363076670494688000000000000000000000000 
45233576387674280640756449280000000000000000000000 
-49649311686257519635607040000000000000000000000000 
212401714538351856908940480000000000000000000000000 
-213282879928827161658128179200000000000000000000000 
-166216558701600829764936921600000000000000000000000 
976532618624359999134890160000000000000000000000000 
175607597456581223971021824000000000000000000000000 
-137373979801657959368588160000000000000000000000000 
43180604706871319512446720000000000000000000000000 
3935935000931861771324522496000000000000000000000 
-77799019914028185127943454720000000000000000000000 
-363606955767260945459472162816000000000000000000000 
7479351232490823303517175808000000000000000000000 
3074122529400069335691804672000000000000000000000 
2025576939976753688396218368000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 322179943266636659248438517760000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (141889057848490789706940000000000000000000000000000 
-19767944930184295055769600000000000000000000000000 
297039595360110094012502016000000000000000000000000 
167672515752718300226101248000000000000000000000000 
162788461701641093090118205440000000000000000000000 
88638053070879937294709760000000000000000000000000 
27917582798238436778659430400000000000000000000000 
-1366946231085049905734279270400000000000000000000000 
-26436537602726153340989376000000000000000000000000 
90467152775348561281512898560000000000000000000000 
-99298623372515039271214080000000000000000000000000 
424803429076703713817880960000000000000000000000000 
-1715285532924200960310010429440000000000000000000000 
-332433117403201659529873843200000000000000000000000 
1953065237248719998269780320000000000000000000000000 
351215194913162447942043648000000000000000000000000 
-274747959603315918737176320000000000000000000000000 
86361209413742639024893440000000000000000000000000 
7871870001863723542649044992000000000000000000000 
-155598039828056370255886909440000000000000000000000 
-727213911534521890918944325632000000000000000000000 
14958702464981646607034351616000000000000000000000 
6148245058800138671383609344000000000000000000000 
4051153879953507376792436736000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (141889057848490789706940000000000000000000000000000 
-19767944930184295055769600000000000000000000000000 
297039595360110094012502016000000000000000000000000 
167672515752718300226101248000000000000000000000000 
162788461701641093090118205440000000000000000000000 
88638053070879937294709760000000000000000000000000 
27917582798238436778659430400000000000000000000000 
-1366946231085049905734279270400000000000000000000000 
-26436537602726153340989376000000000000000000000000 
90467152775348561281512898560000000000000000000000 
-99298623372515039271214080000000000000000000000000 
424803429076703713817880960000000000000000000000000 
-1715285532924200960310010429440000000000000000000000 
-332433117403201659529873843200000000000000000000000 
1953065237248719998269780320000000000000000000000000 
351215194913162447942043648000000000000000000000000 
-274747959603315918737176320000000000000000000000000 
86361209413742639024893440000000000000000000000000 
7871870001863723542649044992000000000000000000000 
-155598039828056370255886909440000000000000000000000 
-727213911534521890918944325632000000000000000000000 
14958702464981646607034351616000000000000000000000 
6148245058800138671383609344000000000000000000000 
4051153879953507376792436736000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 162788461701641093090118205440000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (
54485398213820463247464960000000000000000000000000000 
-7590890853190769301415526400000000000000000000000000 
114063204618282276100800774144000000000000000000000000 
64386246049043827286822879232000000000000000000000000 
34037012379217895921168547840000000000000000000000000 
142579005772852845126000967680000000000000000000000000 
-327119371769165235697469620224000000000000000000000000 
-10151630439446842882939920384000000000000000000000000 
34739386665733847532100953047040000000000000000000000 
-38130671375045775080146206720000000000000000000000000 
163124516765454226106066288640000000000000000000000000 
-394952336686234597953052512092160000000000000000000000 
-127654317082829437259471555788800000000000000000000000 
749977051103508479335595642880000000000000000000000000 
134866634846654380009744760832000000000000000000000000 
-105503216487673312795075706880000000000000000000000000 
33162704414877173385559080960000000000000000000000000 
-79022586616911441077042342264832000000000000000000000 
-14168878017514140113027475701760000000000000000000000 
-200134949642258834871077173198848000000000000000000000 
5744141746552952297101191020544000000000000000000000 
66174003089622561741137642520576000000000000000000000 
159786027863897289316283191394304000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (54485398213820463247464960000000000000000000000000000 
-7590890853190769301415526400000000000000000000000000 
114063204618282276100800774144000000000000000000000000 
64386246049043827286822879232000000000000000000000000 
34037012379217895921168547840000000000000000000000000 
142579005772852845126000967680000000000000000000000000 
-327119371769165235697469620224000000000000000000000000 
-10151630439446842882939920384000000000000000000000000 
34739386665733847532100953047040000000000000000000000 
-38130671375045775080146206720000000000000000000000000 
163124516765454226106066288640000000000000000000000000 
-394952336686234597953052512092160000000000000000000000 
-127654317082829437259471555788800000000000000000000000 
749977051103508479335595642880000000000000000000000000 
134866634846654380009744760832000000000000000000000000 
-105503216487673312795075706880000000000000000000000000 
33162704414877173385559080960000000000000000000000000 
-79022586616911441077042342264832000000000000000000000 
-14168878017514140113027475701760000000000000000000000 
-200134949642258834871077173198848000000000000000000000 
5744141746552952297101191020544000000000000000000000 
66174003089622561741137642520576000000000000000000000 
159786027863897289316283191394304000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -10151630439446842882939920384000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
85814502186767229614757312000000000000000000000000000000 
-11955653093775461649729454080000000000000000000000000000 
179649547273794584858761219276800000000000000000000000000 
101408337527244027976746034790400000000000000000000000000 
53608294497268186075840462848000000000000000000000000000 
224561934092243231073451524096000000000000000000000000000 
-515213010536435246223514651852800000000000000000000000000 
58978218783098483873893767610368000000000000000000000000 
-60055807415697095751230275584000000000000000000000000000 
256921113905590406117054404608000000000000000000000000000 
-639104669419090187819396772790272000000000000000000000000 
-201055549405456363683667700367360000000000000000000000000 
1181213855488025854953563137536000000000000000000000000000 
212414949883480648515347998310400000000000000000000000000 
-166167565968085467652244238336000000000000000000000000000 
52231259453431548082255552512000000000000000000000000000 
-115689565221953447445481597855334400000000000000000000000 
-27188765488519255261829436014592000000000000000000000000 
-320328967428038873734948267661721600000000000000000000000 
14244658035817683423999615093964800000000000000000000000 
101665843995414930335790927033139200000000000000000000000 
241430150402675813047142586698956800000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
85814502186767229614757312000000000000000000000000000000 
-11955653093775461649729454080000000000000000000000000000 
179649547273794584858761219276800000000000000000000000000 
101408337527244027976746034790400000000000000000000000000 
53608294497268186075840462848000000000000000000000000000 
224561934092243231073451524096000000000000000000000000000 
-515213010536435246223514651852800000000000000000000000000 
58978218783098483873893767610368000000000000000000000000 
-60055807415697095751230275584000000000000000000000000000 
256921113905590406117054404608000000000000000000000000000 
-639104669419090187819396772790272000000000000000000000000 
-201055549405456363683667700367360000000000000000000000000 
1181213855488025854953563137536000000000000000000000000000 
212414949883480648515347998310400000000000000000000000000 
-166167565968085467652244238336000000000000000000000000000 
52231259453431548082255552512000000000000000000000000000 
-115689565221953447445481597855334400000000000000000000000 
-27188765488519255261829436014592000000000000000000000000 
-320328967428038873734948267661721600000000000000000000000 
14244658035817683423999615093964800000000000000000000000 
101665843995414930335790927033139200000000000000000000000 
241430150402675813047142586698956800000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 58978218783098483873893767610368000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
18021045459221118219099035520000000000000000000000000000000 
-2510687149692846946443185356800000000000000000000000000000 
37726404927496862820339856048128000000000000000000000000000 
21295750880721245875116667305984000000000000000000000000000 
11257741844426319075926497198080000000000000000000000000000 
47158006159371078525424820060160000000000000000000000000000 
-108194732212651401706938076889088000000000000000000000000000 
-12611719557296390107758357872640000000000000000000000000000 
53953433920173985284581424967680000000000000000000000000000 
-84670276800206212988002557493248000000000000000000000000000 
50669029208234275727812466909184000000000000000000000000000 
248054909652485429540248258882560000000000000000000000000000 
44607139475530936188223079645184000000000000000000000000000 
-34895188853297948206971290050560000000000000000000000000000 
10968564485220625097273666027520000000000000000000000000000 
-49773399210908768997073243157299200000000000000000000000000 
8445131755354592524750322663424000000000000000000000000000 
-52406572026547345548117906771148800000000000000000000000000 
-12107045820951498352676885338521600000000000000000000000000 
28781082805707544338626709395865600000000000000000000000000 
80425353851243556612342402082406400000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
18021045459221118219099035520000000000000000000000000000000 
-2510687149692846946443185356800000000000000000000000000000 
37726404927496862820339856048128000000000000000000000000000 
21295750880721245875116667305984000000000000000000000000000 
11257741844426319075926497198080000000000000000000000000000 
47158006159371078525424820060160000000000000000000000000000 
-108194732212651401706938076889088000000000000000000000000000 
-12611719557296390107758357872640000000000000000000000000000 
53953433920173985284581424967680000000000000000000000000000 
-84670276800206212988002557493248000000000000000000000000000 
50669029208234275727812466909184000000000000000000000000000 
248054909652485429540248258882560000000000000000000000000000 
44607139475530936188223079645184000000000000000000000000000 
-34895188853297948206971290050560000000000000000000000000000 
10968564485220625097273666027520000000000000000000000000000 
-49773399210908768997073243157299200000000000000000000000000 
8445131755354592524750322663424000000000000000000000000000 
-52406572026547345548117906771148800000000000000000000000000 
-12107045820951498352676885338521600000000000000000000000000 
28781082805707544338626709395865600000000000000000000000000 
80425353851243556612342402082406400000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 37726404927496862820339856048128000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
72084181836884472876396142080000000000000000000000000000000 
-10042748598771387785772741427200000000000000000000000000000 
85183003522884983500466669223936000000000000000000000000000 
-339537644347471765383058704433152000000000000000000000000000 
45030967377705276303705988792320000000000000000000000000000 
188632024637484314101699280240640000000000000000000000000000 
-432778928850605606827752307556352000000000000000000000000000 
-50446878229185560431033431490560000000000000000000000000000 
215813735680695941138325699870720000000000000000000000000000 
-338681107200824851952010229972992000000000000000000000000000 
202676116832937102911249867636736000000000000000000000000000 
992219638609941718160993035530240000000000000000000000000000 
178428557902123744752892318580736000000000000000000000000000 
-139580755413191792827885160202240000000000000000000000000000 
43874257940882500389094664110080000000000000000000000000000 
-199093596843635075988292972629196800000000000000000000000000 
33780527021418370099001290653696000000000000000000000000000 
-209626288106189382192471627084595200000000000000000000000000 
-48428183283805993410707541354086400000000000000000000000000 
115124331222830177354506837583462400000000000000000000000000 
321701415404974226449369608329625600000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
72084181836884472876396142080000000000000000000000000000000 
-10042748598771387785772741427200000000000000000000000000000 
85183003522884983500466669223936000000000000000000000000000 
-339537644347471765383058704433152000000000000000000000000000 
45030967377705276303705988792320000000000000000000000000000 
188632024637484314101699280240640000000000000000000000000000 
-432778928850605606827752307556352000000000000000000000000000 
-50446878229185560431033431490560000000000000000000000000000 
215813735680695941138325699870720000000000000000000000000000 
-338681107200824851952010229972992000000000000000000000000000 
202676116832937102911249867636736000000000000000000000000000 
992219638609941718160993035530240000000000000000000000000000 
178428557902123744752892318580736000000000000000000000000000 
-139580755413191792827885160202240000000000000000000000000000 
43874257940882500389094664110080000000000000000000000000000 
-199093596843635075988292972629196800000000000000000000000000 
33780527021418370099001290653696000000000000000000000000000 
-209626288106189382192471627084595200000000000000000000000000 
-48428183283805993410707541354086400000000000000000000000000 
115124331222830177354506837583462400000000000000000000000000 
321701415404974226449369608329625600000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 188632024637484314101699280240640000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
5190061092255682047100522229760000000000000000000000000000000 
-723077899111539920575637382758400000000000000000000000000000 
6133176253647718812033600184123392000000000000000000000000000 
-24446710393017967107580226719186944000000000000000000000000000 
3242229651194779893866831193047040000000000000000000000000000 
-47005172946792286076140905684271104000000000000000000000000000 
-19806362586935852980678424425267200000000000000000000000000000 
-3632175232501360351034407067320320000000000000000000000000000 
15538588969010107761959450390691840000000000000000000000000000 
-24385039718459389340544736558055424000000000000000000000000000 
14592680411971471409609990469844992000000000000000000000000000 
71439813979915803707591498558177280000000000000000000000000000 
12846856168952909622208246937812992000000000000000000000000000 
-10049814389749809083607731534561280000000000000000000000000000 
3158946571743540028014815815925760000000000000000000000000000 
-14334738972741725471157094029302169600000000000000000000000000 
2432197945542122647128092927066112000000000000000000000000000 
-15093092743645635517857957150090854400000000000000000000000000 
-3486829196434031525570942977494220800000000000000000000000000 
-3783497728755223332984261629391667200000000000000000000000000 
23162501909158144304354611799733043200000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 1 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
5190061092255682047100522229760000000000000000000000000000000 
-723077899111539920575637382758400000000000000000000000000000 
6133176253647718812033600184123392000000000000000000000000000 
-24446710393017967107580226719186944000000000000000000000000000 
3242229651194779893866831193047040000000000000000000000000000 
-47005172946792286076140905684271104000000000000000000000000000 
-19806362586935852980678424425267200000000000000000000000000000 
-3632175232501360351034407067320320000000000000000000000000000 
15538588969010107761959450390691840000000000000000000000000000 
-24385039718459389340544736558055424000000000000000000000000000 
14592680411971471409609990469844992000000000000000000000000000 
71439813979915803707591498558177280000000000000000000000000000 
12846856168952909622208246937812992000000000000000000000000000 
-10049814389749809083607731534561280000000000000000000000000000 
3158946571743540028014815815925760000000000000000000000000000 
-14334738972741725471157094029302169600000000000000000000000000 
2432197945542122647128092927066112000000000000000000000000000 
-15093092743645635517857957150090854400000000000000000000000000 
-3486829196434031525570942977494220800000000000000000000000000 
-3783497728755223332984261629391667200000000000000000000000000 
23162501909158144304354611799733043200000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -723077899111539920575637382758400000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
62280733107068184565206266757120000000000000000000000000000000 
10846168486673098808634560741376000000000000000000000000000000 
73598115043772625744403202209480704000000000000000000000000000 
-280345122532207886720601247740592128000000000000000000000000000 
38906755814337358726401974316564480000000000000000000000000000 
-564062075361507432913690868211253248000000000000000000000000000 
-237676351043230235768141093103206400000000000000000000000000000 
-43586102790016324212412884807843840000000000000000000000000000 
186463067628121293143513404688302080000000000000000000000000000 
-292620476621512672086536838696665088000000000000000000000000000 
175112164943657656915319885638139904000000000000000000000000000 
857277767758989644491097982698127360000000000000000000000000000 
154162274027434915466498963253755904000000000000000000000000000 
-120597772676997709003292778414735360000000000000000000000000000 
37907358860922480336177789791109120000000000000000000000000000 
-172016867672900705653885128351626035200000000000000000000000000 
29186375346505471765537115124793344000000000000000000000000000 
-191240203511309185102354409159707852800000000000000000000000000 
-41841950357208378306851315729930649600000000000000000000000000 
-45401972745062679995811139552700006400000000000000000000000000 
277950022909897731652255341596796518400000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
62280733107068184565206266757120000000000000000000000000000000 
10846168486673098808634560741376000000000000000000000000000000 
73598115043772625744403202209480704000000000000000000000000000 
-280345122532207886720601247740592128000000000000000000000000000 
38906755814337358726401974316564480000000000000000000000000000 
-564062075361507432913690868211253248000000000000000000000000000 
-237676351043230235768141093103206400000000000000000000000000000 
-43586102790016324212412884807843840000000000000000000000000000 
186463067628121293143513404688302080000000000000000000000000000 
-292620476621512672086536838696665088000000000000000000000000000 
175112164943657656915319885638139904000000000000000000000000000 
857277767758989644491097982698127360000000000000000000000000000 
154162274027434915466498963253755904000000000000000000000000000 
-120597772676997709003292778414735360000000000000000000000000000 
37907358860922480336177789791109120000000000000000000000000000 
-172016867672900705653885128351626035200000000000000000000000000 
29186375346505471765537115124793344000000000000000000000000000 
-191240203511309185102354409159707852800000000000000000000000000 
-41841950357208378306851315729930649600000000000000000000000000 
-45401972745062679995811139552700006400000000000000000000000000 
277950022909897731652255341596796518400000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 10846168486673098808634560741376000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (29894751891392728591299008043417600000000000000000000000000000000 
-14056634358728336055990390720823296000000000000000000000000000000 
25956005648525302986653276580001873920000000000000000000000000000 
-178687872219245951579413992011401789440000000000000000000000000000 
-8329857397764939885031342649376768000000000000000000000000000000 
12818311808078458832010284871607910400000000000000000000000000000 
-263981787037839554141983650838782935040000000000000000000000000000 
-112295030700449451865283022167212032000000000000000000000000000000 
-4685544786242778685330130240274432000000000000000000000000000000 
-16365938574805134122331669196387123200000000000000000000000000000 
89502272461498220708886434250384998400000000000000000000000000000 
-140457828778326082601537682574399242240000000000000000000000000000 
96646240785983143036178270127044689920000000000000000000000000000 
363173647916186374163260063592271052800000000000000000000000000000 
59160333043399960253707423267600465920000000000000000000000000000 
-57886930884958900321580533639072972800000000000000000000000000000 
18195532253242790561365339099732377600000000000000000000000000000 
-82568096482992338713864861608780496896000000000000000000000000000 
21818701476727257589674698993691525120000000000000000000000000000 
-54137400699699409785550921502602297344000000000000000000000000000 
-20084136171460021587288631550366711808000000000000000000000000000 
-21792946917630086397989346985296003072000000000000000000000000000 
133416010996750911193082563966462328832000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
29894751891392728591299008043417600000000000000000000000000000000 
-14056634358728336055990390720823296000000000000000000000000000000 
25956005648525302986653276580001873920000000000000000000000000000 
-178687872219245951579413992011401789440000000000000000000000000000 
-8329857397764939885031342649376768000000000000000000000000000000 
12818311808078458832010284871607910400000000000000000000000000000 
-263981787037839554141983650838782935040000000000000000000000000000 
-112295030700449451865283022167212032000000000000000000000000000000 
-4685544786242778685330130240274432000000000000000000000000000000 
-16365938574805134122331669196387123200000000000000000000000000000 
89502272461498220708886434250384998400000000000000000000000000000 
-140457828778326082601537682574399242240000000000000000000000000000 
96646240785983143036178270127044689920000000000000000000000000000 
363173647916186374163260063592271052800000000000000000000000000000 
59160333043399960253707423267600465920000000000000000000000000000 
-57886930884958900321580533639072972800000000000000000000000000000 
18195532253242790561365339099732377600000000000000000000000000000 
-82568096482992338713864861608780496896000000000000000000000000000 
21818701476727257589674698993691525120000000000000000000000000000 
-54137400699699409785550921502602297344000000000000000000000000000 
-20084136171460021587288631550366711808000000000000000000000000000 
-21792946917630086397989346985296003072000000000000000000000000000 
133416010996750911193082563966462328832000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -178687872219245951579413992011401789440000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
59789503782785457182598016086835200000000000000000000000000000000 
-28113268717456672111980781441646592000000000000000000000000000000 
51912011297050605973306553160003747840000000000000000000000000000 
-16659714795529879770062685298753536000000000000000000000000000000 
25636623616156917664020569743215820800000000000000000000000000000 
8100042582058746454274674356639498240000000000000000000000000000 
-224590061400898903730566044334424064000000000000000000000000000000 
-9371089572485557370660260480548864000000000000000000000000000000 
-32731877149610268244663338392774246400000000000000000000000000000 
179004544922996441417772868500769996800000000000000000000000000000 
433835831320331641114580602896808673280000000000000000000000000000 
193292481571966286072356540254089379840000000000000000000000000000 
726347295832372748326520127184542105600000000000000000000000000000 
118320666086799920507414846535200931840000000000000000000000000000 
-115773861769917800643161067278145945600000000000000000000000000000 
36391064506485581122730678199464755200000000000000000000000000000 
-165136192965984677427729723217560993792000000000000000000000000000 
43637402953454515179349397987383050240000000000000000000000000000 
-108274801399398819571101843005204594688000000000000000000000000000 
-40168272342920043174577263100733423616000000000000000000000000000 
-43585893835260172795978693970592006144000000000000000000000000000 
266832021993501822386165127932924657664000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
59789503782785457182598016086835200000000000000000000000000000000 
-28113268717456672111980781441646592000000000000000000000000000000 
51912011297050605973306553160003747840000000000000000000000000000 
-16659714795529879770062685298753536000000000000000000000000000000 
25636623616156917664020569743215820800000000000000000000000000000 
8100042582058746454274674356639498240000000000000000000000000000 
-224590061400898903730566044334424064000000000000000000000000000000 
-9371089572485557370660260480548864000000000000000000000000000000 
-32731877149610268244663338392774246400000000000000000000000000000 
179004544922996441417772868500769996800000000000000000000000000000 
433835831320331641114580602896808673280000000000000000000000000000 
193292481571966286072356540254089379840000000000000000000000000000 
726347295832372748326520127184542105600000000000000000000000000000 
118320666086799920507414846535200931840000000000000000000000000000 
-115773861769917800643161067278145945600000000000000000000000000000 
36391064506485581122730678199464755200000000000000000000000000000 
-165136192965984677427729723217560993792000000000000000000000000000 
43637402953454515179349397987383050240000000000000000000000000000 
-108274801399398819571101843005204594688000000000000000000000000000 
-40168272342920043174577263100733423616000000000000000000000000000 
-43585893835260172795978693970592006144000000000000000000000000000 
266832021993501822386165127932924657664000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -16659714795529879770062685298753536000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0
 0 0 1)) (22959169452589615558117638177344716800000000000000000000000000000000 
-10795495187503362091000620073592291328000000000000000000000000000000 
19934212338067432693749716413441439170560000000000000000000000000000 
9844463468604256382983898781394875187200000000000000000000000000000 
-13494368984379202613750775091990364160000000000000000000000000000000 
-17131137125058245282184687685035978915840000000000000000000000000000 
-86242583577945179032537361024418840576000000000000000000000000000000 
-3598498395834454030333540024530763776000000000000000000000000000000 
-12569040825450343005950721942825310617600000000000000000000000000000 
68737745250430633504424781504295678771200000000000000000000000000000 
139604221258248944960497401328393802219520000000000000000000000000000 
74224312923635053851784911457570321858560000000000000000000000000000 
278917361599631135357383728838864168550400000000000000000000000000000 
45435135777331169474847301069517157826560000000000000000000000000000 
-44457162919648435446973849834808043110400000000000000000000000000000 
13974168770490463151128580428594465996800000000000000000000000000000 
-55015801841991056728136620324971639472128000000000000000000000000000 
12092042591378167493252616943504101212160000000000000000000000000000 
-49674145127996668283553572769192782856192000000000000000000000000000 
-15424616579681296579037669030681634668544000000000000000000000000000 
-23267591432587619223520391121818716471296000000000000000000000000000 
86270253664249656659786479015854631550976000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
22959169452589615558117638177344716800000000000000000000000000000000 
-10795495187503362091000620073592291328000000000000000000000000000000 
19934212338067432693749716413441439170560000000000000000000000000000 
9844463468604256382983898781394875187200000000000000000000000000000 
-13494368984379202613750775091990364160000000000000000000000000000000 
-17131137125058245282184687685035978915840000000000000000000000000000 
-86242583577945179032537361024418840576000000000000000000000000000000 
-3598498395834454030333540024530763776000000000000000000000000000000 
-12569040825450343005950721942825310617600000000000000000000000000000 
68737745250430633504424781504295678771200000000000000000000000000000 
139604221258248944960497401328393802219520000000000000000000000000000 
74224312923635053851784911457570321858560000000000000000000000000000 
278917361599631135357383728838864168550400000000000000000000000000000 
45435135777331169474847301069517157826560000000000000000000000000000 
-44457162919648435446973849834808043110400000000000000000000000000000 
13974168770490463151128580428594465996800000000000000000000000000000 
-55015801841991056728136620324971639472128000000000000000000000000000 
12092042591378167493252616943504101212160000000000000000000000000000 
-49674145127996668283553572769192782856192000000000000000000000000000 
-15424616579681296579037669030681634668544000000000000000000000000000 
-23267591432587619223520391121818716471296000000000000000000000000000 
86270253664249656659786479015854631550976000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -86242583577945179032537361024418840576000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
36160691887828644504035280129317928960000000000000000000000000000000000 
-17002904920317795293325976615907858841600000000000000000000000000000000 
31396384432456206492655803351170266693632000000000000000000000000000000 
15505029963051703803199640580696928419840000000000000000000000000000000 
-21253631150397244116657470769884823552000000000000000000000000000000000 
-26981540971966736319440883103931666792448000000000000000000000000000000 
30554250129297710095890366091619960094720000000000000000000000000000000 
-19796239300084290234372387059949864222720000000000000000000000000000000 
108261948769428247769469030869265694064640000000000000000000000000000000 
74989108070794187538120640571196586328064000000000000000000000000000000 
116903292854725209816561235545673256927232000000000000000000000000000000 
439294844519419038187879372921211065466880000000000000000000000000000000 
71560338849296591922884499184489523576832000000000000000000000000000000 
-70020031598446285828983813489822667898880000000000000000000000000000000 
22009315813522479463027514175036283944960000000000000000000000000000000 
-12136295689791279662702897086732453910937600000000000000000000000000000 
-22351473035993072133745061605702084067328000000000000000000000000000000 
-121703040699879122778995707067785728648806400000000000000000000000000000 
19862431678909889552674800121178871771955200000000000000000000000000000 
-58379587567967685393244030995018026267443200000000000000000000000000000 
48943125274624468774366044537356853392179200000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
36160691887828644504035280129317928960000000000000000000000000000000000 
-17002904920317795293325976615907858841600000000000000000000000000000000 
31396384432456206492655803351170266693632000000000000000000000000000000 
15505029963051703803199640580696928419840000000000000000000000000000000 
-21253631150397244116657470769884823552000000000000000000000000000000000 
-26981540971966736319440883103931666792448000000000000000000000000000000 
30554250129297710095890366091619960094720000000000000000000000000000000 
-19796239300084290234372387059949864222720000000000000000000000000000000 
108261948769428247769469030869265694064640000000000000000000000000000000 
74989108070794187538120640571196586328064000000000000000000000000000000 
116903292854725209816561235545673256927232000000000000000000000000000000 
439294844519419038187879372921211065466880000000000000000000000000000000 
71560338849296591922884499184489523576832000000000000000000000000000000 
-70020031598446285828983813489822667898880000000000000000000000000000000 
22009315813522479463027514175036283944960000000000000000000000000000000 
-12136295689791279662702897086732453910937600000000000000000000000000000 
-22351473035993072133745061605702084067328000000000000000000000000000000 
-121703040699879122778995707067785728648806400000000000000000000000000000 
19862431678909889552674800121178871771955200000000000000000000000000000 
-58379587567967685393244030995018026267443200000000000000000000000000000 
48943125274624468774366044537356853392179200000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 30554250129297710095890366091619960094720000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
7593745296444015345847408827156765081600000000000000000000000000000000000 
-3570610033266737011598455089340650356736000000000000000000000000000000000 
6593240730815803363457718703745756005662720000000000000000000000000000000 
3256056292240857798671924521946354968166400000000000000000000000000000000 
-4463262541583421264498068861675812945920000000000000000000000000000000000 
-5666123604113014627082585451825650026414080000000000000000000000000000000 
-4157210253017700949218201282589471486771200000000000000000000000000000000 
22735009241579932031588496482545795753574400000000000000000000000000000000 
41413282803476855863553242036912049608458240000000000000000000000000000000 
72672635453136187462505186058892821103902720000000000000000000000000000000 
92251917349077998019454668313454323748044800000000000000000000000000000000 
15027671158352284303805744828742799951134720000000000000000000000000000000 
-14704206635673720024086600832862760258764800000000000000000000000000000000 
4621956320839720687235777976757619628441600000000000000000000000000000000 
-15748058150712779490592246539793638082215936000000000000000000000000000000 
2639210693472905274927224924791352768593920000000000000000000000000000000 
-17857967514391592839424726229146773072379904000000000000000000000000000000 
-3650777380529136978486225694007146712137728000000000000000000000000000000 
-8409877872981702460499060381409670544228352000000000000000000000000000000 
25677398372837184330945613863021399100096512000000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
7593745296444015345847408827156765081600000000000000000000000000000000000 
-3570610033266737011598455089340650356736000000000000000000000000000000000 
6593240730815803363457718703745756005662720000000000000000000000000000000 
3256056292240857798671924521946354968166400000000000000000000000000000000 
-4463262541583421264498068861675812945920000000000000000000000000000000000 
-5666123604113014627082585451825650026414080000000000000000000000000000000 
-4157210253017700949218201282589471486771200000000000000000000000000000000 
22735009241579932031588496482545795753574400000000000000000000000000000000 
41413282803476855863553242036912049608458240000000000000000000000000000000 
72672635453136187462505186058892821103902720000000000000000000000000000000 
92251917349077998019454668313454323748044800000000000000000000000000000000 
15027671158352284303805744828742799951134720000000000000000000000000000000 
-14704206635673720024086600832862760258764800000000000000000000000000000000 
4621956320839720687235777976757619628441600000000000000000000000000000000 
-15748058150712779490592246539793638082215936000000000000000000000000000000 
2639210693472905274927224924791352768593920000000000000000000000000000000 
-17857967514391592839424726229146773072379904000000000000000000000000000000 
-3650777380529136978486225694007146712137728000000000000000000000000000000 
-8409877872981702460499060381409670544228352000000000000000000000000000000 
25677398372837184330945613863021399100096512000000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3570610033266737011598455089340650356736000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
30374981185776061383389635308627060326400000000000000000000000000000000000 
26372962923263213453830874814983024022650880000000000000000000000000000000 
32135490299400633104386095804065853210624000000000000000000000000000000000 
13024225168963431194687698087785419872665600000000000000000000000000000000 
-17853050166333685057992275446703251783680000000000000000000000000000000000 
-22664494416452058508330341807302600105656320000000000000000000000000000000 
-16628841012070803796872805130357885947084800000000000000000000000000000000 
90940036966319728126353985930183183014297600000000000000000000000000000000 
165653131213907423454212968147648198433832960000000000000000000000000000000 
290690541812544749850020744235571284415610880000000000000000000000000000000 
369007669396311992077818673253817294992179200000000000000000000000000000000 
60110684633409137215222979314971199804538880000000000000000000000000000000 
-58816826542694880096346403331451041035059200000000000000000000000000000000 
18487825283358882748943111907030478513766400000000000000000000000000000000 
-62992232602851117962368986159174552328863744000000000000000000000000000000 
10556842773891621099708899699165411074375680000000000000000000000000000000 
-71431870057566371357698904916587092289519616000000000000000000000000000000 
-14603109522116547913944902776028586848550912000000000000000000000000000000 
-33639511491926809841996241525638682176913408000000000000000000000000000000 
102709593491348737323782455452085596400386048000000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
30374981185776061383389635308627060326400000000000000000000000000000000000 
26372962923263213453830874814983024022650880000000000000000000000000000000 
32135490299400633104386095804065853210624000000000000000000000000000000000 
13024225168963431194687698087785419872665600000000000000000000000000000000 
-17853050166333685057992275446703251783680000000000000000000000000000000000 
-22664494416452058508330341807302600105656320000000000000000000000000000000 
-16628841012070803796872805130357885947084800000000000000000000000000000000 
90940036966319728126353985930183183014297600000000000000000000000000000000 
165653131213907423454212968147648198433832960000000000000000000000000000000 
290690541812544749850020744235571284415610880000000000000000000000000000000 
369007669396311992077818673253817294992179200000000000000000000000000000000 
60110684633409137215222979314971199804538880000000000000000000000000000000 
-58816826542694880096346403331451041035059200000000000000000000000000000000 
18487825283358882748943111907030478513766400000000000000000000000000000000 
-62992232602851117962368986159174552328863744000000000000000000000000000000 
10556842773891621099708899699165411074375680000000000000000000000000000000 
-71431870057566371357698904916587092289519616000000000000000000000000000000 
-14603109522116547913944902776028586848550912000000000000000000000000000000 
-33639511491926809841996241525638682176913408000000000000000000000000000000 
102709593491348737323782455452085596400386048000000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-17853050166333685057992275446703251783680000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
2186998645375876419604053742221148343500800000000000000000000000000000000000 
1898853330474951368675822986678777729630863360000000000000000000000000000000 
2313755301556845583515798897892741431164928000000000000000000000000000000000 
937744212165367046017514262320550230831923200000000000000000000000000000000 
-132187384012518667728433472602714057778135040000000000000000000000000000000 
1874570267465036931089188921903841437286400000000000000000000000000000000000 
-1197276552869097873374841969385767788190105600000000000000000000000000000000 
6547682661575020425097486986973189177029427200000000000000000000000000000000 
11927025447401334488703333706630670287235973120000000000000000000000000000000 
20929719010503221989201493584961132477923983360000000000000000000000000000000 
26568552196534463429602944474274845239436902400000000000000000000000000000000 
4327969293605457879496054510677926385926799360000000000000000000000000000000 
-4234811511074031366936941039864474954524262400000000000000000000000000000000 
1331123420401839557923904057306194452991180800000000000000000000000000000000 
-4535440747405280493290567003460567767678189568000000000000000000000000000000 
760092679720196719179040778339909597355048960000000000000000000000000000000 
-5143094644144778737754321153994270644845412352000000000000000000000000000000 
-1051423885592391449804032999874058253095665664000000000000000000000000000000 
-1279449616773374464912223761256977002582245376000000000000000000000000000000 
7395090731377109087312336792550162940827795456000000000000000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
2186998645375876419604053742221148343500800000000000000000000000000000000000 
1898853330474951368675822986678777729630863360000000000000000000000000000000 
2313755301556845583515798897892741431164928000000000000000000000000000000000 
937744212165367046017514262320550230831923200000000000000000000000000000000 
-132187384012518667728433472602714057778135040000000000000000000000000000000 
1874570267465036931089188921903841437286400000000000000000000000000000000000 
-1197276552869097873374841969385767788190105600000000000000000000000000000000 
6547682661575020425097486986973189177029427200000000000000000000000000000000 
11927025447401334488703333706630670287235973120000000000000000000000000000000 
20929719010503221989201493584961132477923983360000000000000000000000000000000 
26568552196534463429602944474274845239436902400000000000000000000000000000000 
4327969293605457879496054510677926385926799360000000000000000000000000000000 
-4234811511074031366936941039864474954524262400000000000000000000000000000000 
1331123420401839557923904057306194452991180800000000000000000000000000000000 
-4535440747405280493290567003460567767678189568000000000000000000000000000000 
760092679720196719179040778339909597355048960000000000000000000000000000000 
-5143094644144778737754321153994270644845412352000000000000000000000000000000 
-1051423885592391449804032999874058253095665664000000000000000000000000000000 
-1279449616773374464912223761256977002582245376000000000000000000000000000000 
7395090731377109087312336792550162940827795456000000000000000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
1898853330474951368675822986678777729630863360000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
26243983744510517035248644906653780122009600000000000000000000000000000000000 
-717736338442123527947758025468768770483814400000000000000000000000000000000 
-34179359948549124636164813760217999133355540480000000000000000000000000000000 
11252930545984404552210171147846602769983078400000000000000000000000000000000 
-1586248608150224012741201671232568693337620480000000000000000000000000000000 
22494843209580443173070267062846097247436800000000000000000000000000000000000 
-14367318634429174480498103632629213458281267200000000000000000000000000000000 
78572191938900245101169843843678270124353126400000000000000000000000000000000 
143124305368816013864440004479568043446831677440000000000000000000000000000000 
251156628126038663870417923019533589735087800320000000000000000000000000000000 
318822626358413561155235333691298142873242828800000000000000000000000000000000 
51935631523265494553952654128135116631121592320000000000000000000000000000000 
-50817738132888376403243292478373699454291148800000000000000000000000000000000 
15973481044822074695086848687674333435894169600000000000000000000000000000000 
-54425288968863365919486804041526813212138274816000000000000000000000000000000 
9121112156642360630148489340078915168260587520000000000000000000000000000000 
-61717135729737344853051853847931247738144948224000000000000000000000000000000 
13966859999540621763813125815014189177684099072000000000000000000000000000000 
-15353395401280493578946685135083724030986944512000000000000000000000000000000 
88741088776525309047748041510601955289933545472000000000000000000000000000000) 4
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
26243983744510517035248644906653780122009600000000000000000000000000000000000 
-717736338442123527947758025468768770483814400000000000000000000000000000000 
-34179359948549124636164813760217999133355540480000000000000000000000000000000 
11252930545984404552210171147846602769983078400000000000000000000000000000000 
-1586248608150224012741201671232568693337620480000000000000000000000000000000 
22494843209580443173070267062846097247436800000000000000000000000000000000000 
-14367318634429174480498103632629213458281267200000000000000000000000000000000 
78572191938900245101169843843678270124353126400000000000000000000000000000000 
143124305368816013864440004479568043446831677440000000000000000000000000000000 
251156628126038663870417923019533589735087800320000000000000000000000000000000 
318822626358413561155235333691298142873242828800000000000000000000000000000000 
51935631523265494553952654128135116631121592320000000000000000000000000000000 
-50817738132888376403243292478373699454291148800000000000000000000000000000000 
15973481044822074695086848687674333435894169600000000000000000000000000000000 
-54425288968863365919486804041526813212138274816000000000000000000000000000000 
9121112156642360630148489340078915168260587520000000000000000000000000000000 
-61717135729737344853051853847931247738144948224000000000000000000000000000000 
13966859999540621763813125815014189177684099072000000000000000000000000000000 
-15353395401280493578946685135083724030986944512000000000000000000000000000000 
88741088776525309047748041510601955289933545472000000000000000000000000000000) 4
)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-717736338442123527947758025468768770483814400000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
52487967489021034070497289813307560244019200000000000000000000000000000000000 
-68358719897098249272329627520435998266711080960000000000000000000000000000000 
22505861091968809104420342295693205539966156800000000000000000000000000000000 
-1019288200974077441639129266058831075223797760000000000000000000000000000000 
44989686419160886346140534125692194494873600000000000000000000000000000000000 
-28734637268858348960996207265258426916562534400000000000000000000000000000000 
157144383877800490202339687687356540248706252800000000000000000000000000000000 
289119556091400521840671041061011161975598612480000000000000000000000000000000 
502313256252077327740835846039067179470175600640000000000000000000000000000000 
637645252716827122310470667382596285746485657600000000000000000000000000000000 
103871263046530989107905308256270233262243184640000000000000000000000000000000 
-101635476265776752806486584956747398908582297600000000000000000000000000000000 
31946962089644149390173697375348666871788339200000000000000000000000000000000 
-108850577937726731838973608083053626424276549632000000000000000000000000000000 
18242224313284721260296978680157830336521175040000000000000000000000000000000 
-123434271459474689706103707695862495476289896448000000000000000000000000000000 
27933719999081243527626251630028378355368198144000000000000000000000000000000 
-30706790802560987157893370270167448061973889024000000000000000000000000000000 
177482177553050618095496083021203910579867090944000000000000000000000000000000) 
4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
52487967489021034070497289813307560244019200000000000000000000000000000000000 
-68358719897098249272329627520435998266711080960000000000000000000000000000000 
22505861091968809104420342295693205539966156800000000000000000000000000000000 
-1019288200974077441639129266058831075223797760000000000000000000000000000000 
44989686419160886346140534125692194494873600000000000000000000000000000000000 
-28734637268858348960996207265258426916562534400000000000000000000000000000000 
157144383877800490202339687687356540248706252800000000000000000000000000000000 
289119556091400521840671041061011161975598612480000000000000000000000000000000 
502313256252077327740835846039067179470175600640000000000000000000000000000000 
637645252716827122310470667382596285746485657600000000000000000000000000000000 
103871263046530989107905308256270233262243184640000000000000000000000000000000 
-101635476265776752806486584956747398908582297600000000000000000000000000000000 
31946962089644149390173697375348666871788339200000000000000000000000000000000 
-108850577937726731838973608083053626424276549632000000000000000000000000000000 
18242224313284721260296978680157830336521175040000000000000000000000000000000 
-123434271459474689706103707695862495476289896448000000000000000000000000000000 
27933719999081243527626251630028378355368198144000000000000000000000000000000 
-30706790802560987157893370270167448061973889024000000000000000000000000000000 
177482177553050618095496083021203910579867090944000000000000000000000000000000) 
4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-68358719897098249272329627520435998266711080960000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (
20155379515784077083070959288310103133703372800000000000000000000000000000000000
 8642250659316022696097411441546190927347004211200000000000000000000000000000000
 
-55370563116649581910586998291553158596035975577600000000000000000000000000000000
 
-83447251344148418603469923075496329026939901706240000000000000000000000000000000
 
17276039584957780356917965104265802686031462400000000000000000000000000000000000
 
-11034100711241606001022543589859235935960013209600000000000000000000000000000000
 
60343443409075388237698440071944911455503201075200000000000000000000000000000000
 280783305798636565643683184321969006557916037120000000000000000000000000000000 
192888290400797693852480964879001796916547430645760000000000000000000000000000000
 
244855777043261614967220736274916973726650492518400000000000000000000000000000000
 
39886565009867899817435638370407769572701382901760000000000000000000000000000000
 
-39028022886058273077690848623391001180895602278400000000000000000000000000000000
 
12267633442423353365826699792133888078766722252800000000000000000000000000000000
 
-7345827099949547392911733233592849420499810254848000000000000000000000000000000
 
-12135427434886176832298255892541472665454971453440000000000000000000000000000000
 
-80621098110428029993496022730143093420516905582592000000000000000000000000000000
 
10726548479647197514608480625930897288461388087296000000000000000000000000000000
 
-38588025867845932783384268171755211376348717121536000000000000000000000000000000
 1708480440391939055966097930278511347425792229376000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (
20155379515784077083070959288310103133703372800000000000000000000000000000000000
 8642250659316022696097411441546190927347004211200000000000000000000000000000000
 
-55370563116649581910586998291553158596035975577600000000000000000000000000000000
 
-83447251344148418603469923075496329026939901706240000000000000000000000000000000
 
17276039584957780356917965104265802686031462400000000000000000000000000000000000
 
-11034100711241606001022543589859235935960013209600000000000000000000000000000000
 
60343443409075388237698440071944911455503201075200000000000000000000000000000000
 280783305798636565643683184321969006557916037120000000000000000000000000000000 
192888290400797693852480964879001796916547430645760000000000000000000000000000000
 
244855777043261614967220736274916973726650492518400000000000000000000000000000000
 
39886565009867899817435638370407769572701382901760000000000000000000000000000000
 
-39028022886058273077690848623391001180895602278400000000000000000000000000000000
 
12267633442423353365826699792133888078766722252800000000000000000000000000000000
 
-7345827099949547392911733233592849420499810254848000000000000000000000000000000
 
-12135427434886176832298255892541472665454971453440000000000000000000000000000000
 
-80621098110428029993496022730143093420516905582592000000000000000000000000000000
 
10726548479647197514608480625930897288461388087296000000000000000000000000000000
 
-38588025867845932783384268171755211376348717121536000000000000000000000000000000
 1708480440391939055966097930278511347425792229376000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
17276039584957780356917965104265802686031462400000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (
31744722737359921405836760879088412435582812160000000000000000000000000000000000000
 
13611544788422735746353423020435250710571531632640000000000000000000000000000000000
 
-87208636908723091509174522309196224788756661534720000000000000000000000000000000000
 
-131429420867033759300465128843906718217430345187328000000000000000000000000000000000
 
-7255936625682267749905545343791637128133214208000000000000000000000000000000000000
 
-17378708620205529451610506154028296599137020805120000000000000000000000000000000000
 
95040923369293736474375043113313235542417541693440000000000000000000000000000000000
 
29465980209361923590510982390473649697861574590464000000000000000000000000000000000
 
303799057381256367817657519684427830143562203267072000000000000000000000000000000000
 
385647848843137043573372659632994233619474525716480000000000000000000000000000000000
 
62821339890541942212461130433392237077004678070272000000000000000000000000000000000
 
-61469136045541780097363086581840826859910573588480000000000000000000000000000000000
 
19321522671816781551177052172610873724057587548160000000000000000000000000000000000
 
-26496175883824059372213101692994391358018384664985600000000000000000000000000000000
 
-10820799209165993939549129780705234158796478087168000000000000000000000000000000000
 
-118271105573105425939869581387425407583554269242982400000000000000000000000000000000
 
8048981587945952542766358852457072254078577488691200000000000000000000000000000000
 
-56422578766447983483886895164239475640869300941619200000000000000000000000000000000
 
20105104595254746612919913065288584479715336860467200000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (
31744722737359921405836760879088412435582812160000000000000000000000000000000000000
 
13611544788422735746353423020435250710571531632640000000000000000000000000000000000
 
-87208636908723091509174522309196224788756661534720000000000000000000000000000000000
 
-131429420867033759300465128843906718217430345187328000000000000000000000000000000000
 
-7255936625682267749905545343791637128133214208000000000000000000000000000000000000
 
-17378708620205529451610506154028296599137020805120000000000000000000000000000000000
 
95040923369293736474375043113313235542417541693440000000000000000000000000000000000
 
29465980209361923590510982390473649697861574590464000000000000000000000000000000000
 
303799057381256367817657519684427830143562203267072000000000000000000000000000000000
 
385647848843137043573372659632994233619474525716480000000000000000000000000000000000
 
62821339890541942212461130433392237077004678070272000000000000000000000000000000000
 
-61469136045541780097363086581840826859910573588480000000000000000000000000000000000
 
19321522671816781551177052172610873724057587548160000000000000000000000000000000000
 
-26496175883824059372213101692994391358018384664985600000000000000000000000000000000
 
-10820799209165993939549129780705234158796478087168000000000000000000000000000000000
 
-118271105573105425939869581387425407583554269242982400000000000000000000000000000000
 
8048981587945952542766358852457072254078577488691200000000000000000000000000000000
 
-56422578766447983483886895164239475640869300941619200000000000000000000000000000000
 
20105104595254746612919913065288584479715336860467200000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-7255936625682267749905545343791637128133214208000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
6666391774845583495225719784608566611472390553600000000000000000000000000000000000000
 
2858424405568774506734218834291402649220021642854400000000000000000000000000000000000
 
-18313813750831849216926649684931207205638898922291200000000000000000000000000000000000
 
-27600178382077089453097677057220410825660372489338880000000000000000000000000000000000
 
-3649528810243161184838206292345942285818774369075200000000000000000000000000000000000
 
19958593907551684659618759053795779463907683755622400000000000000000000000000000000000
 
92869078392899044086648213214491248919030729277440000000000000000000000000000000000
 
52369701864614265535606845217258015853338250308485120000000000000000000000000000000000
 
80986048257058779150408258522928789060089650400460800000000000000000000000000000000000
 
13192481377013807864616837391012369786170982394757120000000000000000000000000000000000
 
-12908518569563773820446248182186573640581220453580800000000000000000000000000000000000
 
4057519761081524125747180956248283482052093385113600000000000000000000000000000000000
 
-2429632313308312800205555767010834945830312241790976000000000000000000000000000000000
 
-4013792624088602987282648136458092084099231808225280000000000000000000000000000000000
 
-26665428200024070920348809517994828148835966521442304000000000000000000000000000000000
 
3547805909643310577956754967026644278158604109873152000000000000000000000000000000000
 
-12762989555790042268104346697808036162727338187948032000000000000000000000000000000000
 
565079905659633842760786890439617628161080779866112000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
6666391774845583495225719784608566611472390553600000000000000000000000000000000000000
 
2858424405568774506734218834291402649220021642854400000000000000000000000000000000000
 
-18313813750831849216926649684931207205638898922291200000000000000000000000000000000000
 
-27600178382077089453097677057220410825660372489338880000000000000000000000000000000000
 
-3649528810243161184838206292345942285818774369075200000000000000000000000000000000000
 
19958593907551684659618759053795779463907683755622400000000000000000000000000000000000
 
92869078392899044086648213214491248919030729277440000000000000000000000000000000000
 
52369701864614265535606845217258015853338250308485120000000000000000000000000000000000
 
80986048257058779150408258522928789060089650400460800000000000000000000000000000000000
 
13192481377013807864616837391012369786170982394757120000000000000000000000000000000000
 
-12908518569563773820446248182186573640581220453580800000000000000000000000000000000000
 
4057519761081524125747180956248283482052093385113600000000000000000000000000000000000
 
-2429632313308312800205555767010834945830312241790976000000000000000000000000000000000
 
-4013792624088602987282648136458092084099231808225280000000000000000000000000000000000
 
-26665428200024070920348809517994828148835966521442304000000000000000000000000000000000
 
3547805909643310577956754967026644278158604109873152000000000000000000000000000000000
 
-12762989555790042268104346697808036162727338187948032000000000000000000000000000000000
 
565079905659633842760786890439617628161080779866112000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
2858424405568774506734218834291402649220021642854400000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
26665567099382333980902879138434266445889562214400000000000000000000000000000000000000
 
-73255255003327396867706598739724828822555595689164800000000000000000000000000000000000
 
-110400713528308357812390708228881643302641489957355520000000000000000000000000000000000
 
-25725819650118970560607969508622623842980194785689600000000000000000000000000000000000
 
-14598115240972644739352825169383769143275097476300800000000000000000000000000000000000
 
79834375630206738638475036215183117855630735022489600000000000000000000000000000000000
 
371476313571596176346592852857964995676122917109760000000000000000000000000000000000
 
209478807458457062142427380869032063413353001233940480000000000000000000000000000000000
 
323944193028235116601633034091715156240358601601843200000000000000000000000000000000000
 
52769925508055231458467349564049479144683929579028480000000000000000000000000000000000
 
-51634074278255095281784992728746294562324881814323200000000000000000000000000000000000
 
16230079044326096502988723824993133928208373540454400000000000000000000000000000000000
 
-9718529253233251200822223068043339783321248967163904000000000000000000000000000000000
 
-16055170496354411949130592545832368336396927232901120000000000000000000000000000000000
 
-106661712800096283681395238071979312595343866085769216000000000000000000000000000000000
 
14191223638573242311827019868106577112634416439492608000000000000000000000000000000000
 
-51051958223160169072417386791232144650909352751792128000000000000000000000000000000000
 
2260319622638535371043147561758470512644323119464448000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
26665567099382333980902879138434266445889562214400000000000000000000000000000000000000
 
-73255255003327396867706598739724828822555595689164800000000000000000000000000000000000
 
-110400713528308357812390708228881643302641489957355520000000000000000000000000000000000
 
-25725819650118970560607969508622623842980194785689600000000000000000000000000000000000
 
-14598115240972644739352825169383769143275097476300800000000000000000000000000000000000
 
79834375630206738638475036215183117855630735022489600000000000000000000000000000000000
 
371476313571596176346592852857964995676122917109760000000000000000000000000000000000
 
209478807458457062142427380869032063413353001233940480000000000000000000000000000000000
 
323944193028235116601633034091715156240358601601843200000000000000000000000000000000000
 
52769925508055231458467349564049479144683929579028480000000000000000000000000000000000
 
-51634074278255095281784992728746294562324881814323200000000000000000000000000000000000
 
16230079044326096502988723824993133928208373540454400000000000000000000000000000000000
 
-9718529253233251200822223068043339783321248967163904000000000000000000000000000000000
 
-16055170496354411949130592545832368336396927232901120000000000000000000000000000000000
 
-106661712800096283681395238071979312595343866085769216000000000000000000000000000000000
 
14191223638573242311827019868106577112634416439492608000000000000000000000000000000000
 
-51051958223160169072417386791232144650909352751792128000000000000000000000000000000000
 
2260319622638535371043147561758470512644323119464448000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-73255255003327396867706598739724828822555595689164800000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1919920831155528046625007297967267184104048479436800000000000000000000000000000000000000
 
-1795409953758700425604776698342592696695517239039754240000000000000000000000000000000000
 
5839542760540810790745419063050278109673763522792652800000000000000000000000000000000000
 
-1051064297350030421233403412195631378315807018293657600000000000000000000000000000000000
 
5748075045374885181970202607493184485605412921619251200000000000000000000000000000000000
 
26746294577154924696954685405773479688680850031902720000000000000000000000000000000000
 
15082474137008908474254771422570308565761416088843714560000000000000000000000000000000000
 
23323981898032928395317578454603491249305819315332710400000000000000000000000000000000000
 
3799434636579976665009649168611562498417242929690050560000000000000000000000000000000000
 
-3717653348034366860288519476469733208487391490631270400000000000000000000000000000000000
 
1168565691191478948215188115399505642831002894912716800000000000000000000000000000000000
 
-699734106232794086459200060899120464399129925635801088000000000000000000000000000000000
 
-1155972275737517660337402663299930520220578760768880640000000000000000000000000000000000
 
-7679643321606932425060457141182510506864758358175383552000000000000000000000000000000000
 
1021768101977273446451545430503673552109677983643467776000000000000000000000000000000000
 
1012595328145421226319170470373674629778084725977513984000000000000000000000000000000000
 
162743012829974546715106624446609876910391264601440256000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1919920831155528046625007297967267184104048479436800000000000000000000000000000000000000
 
-1795409953758700425604776698342592696695517239039754240000000000000000000000000000000000
 
5839542760540810790745419063050278109673763522792652800000000000000000000000000000000000
 
-1051064297350030421233403412195631378315807018293657600000000000000000000000000000000000
 
5748075045374885181970202607493184485605412921619251200000000000000000000000000000000000
 
26746294577154924696954685405773479688680850031902720000000000000000000000000000000000
 
15082474137008908474254771422570308565761416088843714560000000000000000000000000000000000
 
23323981898032928395317578454603491249305819315332710400000000000000000000000000000000000
 
3799434636579976665009649168611562498417242929690050560000000000000000000000000000000000
 
-3717653348034366860288519476469733208487391490631270400000000000000000000000000000000000
 
1168565691191478948215188115399505642831002894912716800000000000000000000000000000000000
 
-699734106232794086459200060899120464399129925635801088000000000000000000000000000000000
 
-1155972275737517660337402663299930520220578760768880640000000000000000000000000000000000
 
-7679643321606932425060457141182510506864758358175383552000000000000000000000000000000000
 
1021768101977273446451545430503673552109677983643467776000000000000000000000000000000000
 
1012595328145421226319170470373674629778084725977513984000000000000000000000000000000000
 
162743012829974546715106624446609876910391264601440256000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-1795409953758700425604776698342592696695517239039754240000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
23039049973866336559500087575607206209248581753241600000000000000000000000000000000000000
 
97005662432870235873016679231742227766517920859108147200000000000000000000000000000000000
 
32317379167656607660885980570166668540519310302715576320000000000000000000000000000000000
 
-12612771568200365054800840946347576539789684219523891200000000000000000000000000000000000
 
68976900544498622183642431289918213827264955059431014400000000000000000000000000000000000
 
320955534925859096363456224869281756264170200382832640000000000000000000000000000000000
 
180989689644106901691057257070843702789136993066124574720000000000000000000000000000000000
 
279887782776395140743810941455241894991669831783992524800000000000000000000000000000000000
 
45593215638959719980115790023338749981006915156280606720000000000000000000000000000000000
 
-44611840176412402323462233717636798501848697887575244800000000000000000000000000000000000
 
14022788294297747378582257384794067713972034738952601600000000000000000000000000000000000
 
-8396809274793529037510400730789445572789559107629613056000000000000000000000000000000000
 
-13871667308850211924048831959599166242646945129226567680000000000000000000000000000000000
 
-92155719859283189100725485694190126082377100298104602624000000000000000000000000000000000
 
12261217223727281357418545166044082625316135803721613312000000000000000000000000000000000
 
-12984595414876751242636828132312202196400224634826391552000000000000000000000000000000000
 
1952916153959694560581279493359318522924695175217283072000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
23039049973866336559500087575607206209248581753241600000000000000000000000000000000000000
 
97005662432870235873016679231742227766517920859108147200000000000000000000000000000000000
 
32317379167656607660885980570166668540519310302715576320000000000000000000000000000000000
 
-12612771568200365054800840946347576539789684219523891200000000000000000000000000000000000
 
68976900544498622183642431289918213827264955059431014400000000000000000000000000000000000
 
320955534925859096363456224869281756264170200382832640000000000000000000000000000000000
 
180989689644106901691057257070843702789136993066124574720000000000000000000000000000000000
 
279887782776395140743810941455241894991669831783992524800000000000000000000000000000000000
 
45593215638959719980115790023338749981006915156280606720000000000000000000000000000000000
 
-44611840176412402323462233717636798501848697887575244800000000000000000000000000000000000
 
14022788294297747378582257384794067713972034738952601600000000000000000000000000000000000
 
-8396809274793529037510400730789445572789559107629613056000000000000000000000000000000000
 
-13871667308850211924048831959599166242646945129226567680000000000000000000000000000000000
 
-92155719859283189100725485694190126082377100298104602624000000000000000000000000000000000
 
12261217223727281357418545166044082625316135803721613312000000000000000000000000000000000
 
-12984595414876751242636828132312202196400224634826391552000000000000000000000000000000000
 
1952916153959694560581279493359318522924695175217283072000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
97005662432870235873016679231742227766517920859108147200000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
36286503708839480081212637931581349779566516261355520000000000000000000000000000000000000000
 
10157493967253657999228414120680767289380386965951610880000000000000000000000000000000000000
 
-19865115219915574961311324490497433050168752645750128640000000000000000000000000000000000000
 
108638618357585329939236829281621186777942304218603847680000000000000000000000000000000000000
 
163475017854730224343440464663496061413866175108904648704000000000000000000000000000000000000
 
285058761189468370163415179886578831892890764079146205184000000000000000000000000000000000000
 
440823257872822346671502232792005984611879985059788226560000000000000000000000000000000000000
 
71809314631361558968682369286758531220085891371141955584000000000000000000000000000000000000
 
-70263648277849533659453018105277957640411699172931010560000000000000000000000000000000000000
 
22085891563518952121267055381050656649505954713850347520000000000000000000000000000000000000
 
-97037866949799692028365292007218661567415039216786079744000000000000000000000000000000000000
 
24714841956338629438671095694867582495759663433840066560000000000000000000000000000000000000
 
-96254404912204423953642233635551365785418900856524242944000000000000000000000000000000000000
 
-30355482038259092629050331130132590481584261589001830400000000000000000000000000000000000000
 
3994689154652416232847198858007322937832162256643686400000000000000000000000000000000000000
 
100857550674819716692916327867637092262256459126948233216000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
36286503708839480081212637931581349779566516261355520000000000000000000000000000000000000000
 
10157493967253657999228414120680767289380386965951610880000000000000000000000000000000000000
 
-19865115219915574961311324490497433050168752645750128640000000000000000000000000000000000000
 
108638618357585329939236829281621186777942304218603847680000000000000000000000000000000000000
 
163475017854730224343440464663496061413866175108904648704000000000000000000000000000000000000
 
285058761189468370163415179886578831892890764079146205184000000000000000000000000000000000000
 
440823257872822346671502232792005984611879985059788226560000000000000000000000000000000000000
 
71809314631361558968682369286758531220085891371141955584000000000000000000000000000000000000
 
-70263648277849533659453018105277957640411699172931010560000000000000000000000000000000000000
 
22085891563518952121267055381050656649505954713850347520000000000000000000000000000000000000
 
-97037866949799692028365292007218661567415039216786079744000000000000000000000000000000000000
 
24714841956338629438671095694867582495759663433840066560000000000000000000000000000000000000
 
-96254404912204423953642233635551365785418900856524242944000000000000000000000000000000000000
 
-30355482038259092629050331130132590481584261589001830400000000000000000000000000000000000000
 
3994689154652416232847198858007322937832162256643686400000000000000000000000000000000000000
 
100857550674819716692916327867637092262256459126948233216000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
10157493967253657999228414120680767289380386965951610880000000000000000000000000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (
7620165778856290817054653965632083453708968414884659200000000000000000000000000000000000000000
 
-4171674196182270741875378143004460940535438055607527014400000000000000000000000000000000000000
 
22814109855092919287239734149140449223367883885906808012800000000000000000000000000000000000000
 
42862048681986419831474365440706017419991421824269329367040000000000000000000000000000000000000
 
75860392848212869083101940016253763178281169927994490224640000000000000000000000000000000000000
 
92572884153292692801015468886321256768494796862555527577600000000000000000000000000000000000000
 
15079956072585927383423297550219291556218037187939810672640000000000000000000000000000000000000
 
-14755366138348402068485133802108371104486456826315512217600000000000000000000000000000000000000
 
4638037228338979945466081630020637896396250489908572979200000000000000000000000000000000000000
 
-24765989453311515581623386221650010398169485404816172646400000000000000000000000000000000000000
 
7627915362971990101935749484885576473560822192934800588800000000000000000000000000000000000000
 
-17653736551815007214459308705054233458014111664450285076480000000000000000000000000000000000000
 
-8974969683651345899903043552222120427214073996973996769280000000000000000000000000000000000000
 
2118728962350968316800691939387314495406682831605077114880000000000000000000000000000000000000
 
26299462601207984137123549569026896088921571447498740858880000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
7620165778856290817054653965632083453708968414884659200000000000000000000000000000000000000000
 
-4171674196182270741875378143004460940535438055607527014400000000000000000000000000000000000000
 
22814109855092919287239734149140449223367883885906808012800000000000000000000000000000000000000
 
42862048681986419831474365440706017419991421824269329367040000000000000000000000000000000000000
 
75860392848212869083101940016253763178281169927994490224640000000000000000000000000000000000000
 
92572884153292692801015468886321256768494796862555527577600000000000000000000000000000000000000
 
15079956072585927383423297550219291556218037187939810672640000000000000000000000000000000000000
 
-14755366138348402068485133802108371104486456826315512217600000000000000000000000000000000000000
 
4638037228338979945466081630020637896396250489908572979200000000000000000000000000000000000000
 
-24765989453311515581623386221650010398169485404816172646400000000000000000000000000000000000000
 
7627915362971990101935749484885576473560822192934800588800000000000000000000000000000000000000
 
-17653736551815007214459308705054233458014111664450285076480000000000000000000000000000000000000
 
-8974969683651345899903043552222120427214073996973996769280000000000000000000000000000000000000
 
2118728962350968316800691939387314495406682831605077114880000000000000000000000000000000000000
 
26299462601207984137123549569026896088921571447498740858880000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
22814109855092919287239734149140449223367883885906808012800000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
30480663115425163268218615862528333814835873659538636800000000000000000000000000000000000000000
 
-16686696784729082967501512572017843762141752222430108057600000000000000000000000000000000000000
 
171448194727945679325897461762824069679965687297077317468160000000000000000000000000000000000000
 
303441571392851476332407760065015052713124679711977960898560000000000000000000000000000000000000
 
164964547917334497618904268203020984063668232477060838195200000000000000000000000000000000000000
 
60319824290343709533693190200877166224872148751759242690560000000000000000000000000000000000000
 
-59021464553393608273940535208433484417945827305262048870400000000000000000000000000000000000000
 
18552148913355919781864326520082551585585001959634291916800000000000000000000000000000000000000
 
-99063957813246062326493544886600041592677941619264690585600000000000000000000000000000000000000
 
30511661451887960407742997939542305894243288771739202355200000000000000000000000000000000000000
 
-70614946207260028857837234820216933832056446657801140305920000000000000000000000000000000000000
 
-35899878734605383599612174208888481708856295987895987077120000000000000000000000000000000000000
 
8474915849403873267202767757549257981626731326420308459520000000000000000000000000000000000000
 
105197850404831936548494198276107584355686285789994963435520000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
30480663115425163268218615862528333814835873659538636800000000000000000000000000000000000000000
 
-16686696784729082967501512572017843762141752222430108057600000000000000000000000000000000000000
 
171448194727945679325897461762824069679965687297077317468160000000000000000000000000000000000000
 
303441571392851476332407760065015052713124679711977960898560000000000000000000000000000000000000
 
164964547917334497618904268203020984063668232477060838195200000000000000000000000000000000000000
 
60319824290343709533693190200877166224872148751759242690560000000000000000000000000000000000000
 
-59021464553393608273940535208433484417945827305262048870400000000000000000000000000000000000000
 
18552148913355919781864326520082551585585001959634291916800000000000000000000000000000000000000
 
-99063957813246062326493544886600041592677941619264690585600000000000000000000000000000000000000
 
30511661451887960407742997939542305894243288771739202355200000000000000000000000000000000000000
 
-70614946207260028857837234820216933832056446657801140305920000000000000000000000000000000000000
 
-35899878734605383599612174208888481708856295987895987077120000000000000000000000000000000000000
 
8474915849403873267202767757549257981626731326420308459520000000000000000000000000000000000000
 
105197850404831936548494198276107584355686285789994963435520000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
171448194727945679325897461762824069679965687297077317468160000000000000000000000000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
2194607744310611755311740342102040034668182903486781849600000000000000000000000000000000000000000
 
-1201442168500493973660108905185284750874206160014967780147200000000000000000000000000000000000000
 
7446144783137869232557971936603861942227859206307918517370880000000000000000000000000000000000000
 
-6124612996386212500658126174479016463812284427844737984102400000000000000000000000000000000000000
 
4343027348904747086425909694463155968190794710126665473720320000000000000000000000000000000000000
 
-4249545447844339795723718535007210878092099565978867518668800000000000000000000000000000000000000
 
1335754721761626224294231509445943714162120141093669018009600000000000000000000000000000000000000
 
-7132604962553716487507535231835202994672811796587057722163200000000000000000000000000000000000000
 
2196839624535933149357495851647046024385516791565222569574400000000000000000000000000000000000000
 
-5084276126922722077764280907055619235908064159361682102026240000000000000000000000000000000000000
 
-2584791268891587619172076543039970683037653311128511069552640000000000000000000000000000000000000
 
610193941157078875238599278543546574677124655502262209085440000000000000000000000000000000000000
 
-3398439233440624045365855276940994385908391410133310950604800000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
2194607744310611755311740342102040034668182903486781849600000000000000000000000000000000000000000
 
-1201442168500493973660108905185284750874206160014967780147200000000000000000000000000000000000000
 
7446144783137869232557971936603861942227859206307918517370880000000000000000000000000000000000000
 
-6124612996386212500658126174479016463812284427844737984102400000000000000000000000000000000000000
 
4343027348904747086425909694463155968190794710126665473720320000000000000000000000000000000000000
 
-4249545447844339795723718535007210878092099565978867518668800000000000000000000000000000000000000
 
1335754721761626224294231509445943714162120141093669018009600000000000000000000000000000000000000
 
-7132604962553716487507535231835202994672811796587057722163200000000000000000000000000000000000000
 
2196839624535933149357495851647046024385516791565222569574400000000000000000000000000000000000000
 
-5084276126922722077764280907055619235908064159361682102026240000000000000000000000000000000000000
 
-2584791268891587619172076543039970683037653311128511069552640000000000000000000000000000000000000
 
610193941157078875238599278543546574677124655502262209085440000000000000000000000000000000000000
 
-3398439233440624045365855276940994385908391410133310950604800000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
7446144783137869232557971936603861942227859206307918517370880000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
26335292931727341063740884105224480416018194841841382195200000000000000000000000000000000000000000
 
-14417306022005927683921306862223417010490473920179613361766400000000000000000000000000000000000000
 
-185187527703702588496267093142806126699165301228755633569792000000000000000000000000000000000000000
 
-81914277909624681148932578525311643341811929192022547628032000000000000000000000000000000000000000
 
-50994545374132077548684622420086530537105194791746410224025600000000000000000000000000000000000000
 
16029056661139514691530778113351324569945441693124028216115200000000000000000000000000000000000000
 
-85591259550644597850090422782022435936073741559044692665958400000000000000000000000000000000000000
 
26362075494431197792289950219764552292626201498782670834892800000000000000000000000000000000000000
 
-61011313523072664933171370884667430830896769912340185224314880000000000000000000000000000000000000
 
-31017495226699051430064918516479648196451839733542132834631680000000000000000000000000000000000000
 
7322327293884946502863191342522558896125495866027146509025280000000000000000000000000000000000000
 
63464756162642680711421343789162134560289331966711127835934720000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
26335292931727341063740884105224480416018194841841382195200000000000000000000000000000000000000000
 
-14417306022005927683921306862223417010490473920179613361766400000000000000000000000000000000000000
 
-185187527703702588496267093142806126699165301228755633569792000000000000000000000000000000000000000
 
-81914277909624681148932578525311643341811929192022547628032000000000000000000000000000000000000000
 
-50994545374132077548684622420086530537105194791746410224025600000000000000000000000000000000000000
 
16029056661139514691530778113351324569945441693124028216115200000000000000000000000000000000000000
 
-85591259550644597850090422782022435936073741559044692665958400000000000000000000000000000000000000
 
26362075494431197792289950219764552292626201498782670834892800000000000000000000000000000000000000
 
-61011313523072664933171370884667430830896769912340185224314880000000000000000000000000000000000000
 
-31017495226699051430064918516479648196451839733542132834631680000000000000000000000000000000000000
 
7322327293884946502863191342522558896125495866027146509025280000000000000000000000000000000000000
 
63464756162642680711421343789162134560289331966711127835934720000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
-85591259550644597850090422782022435936073741559044692665958400000000000000000000000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (
105341171726909364254963536420897921664072779367365528780800000000000000000000000000000000000000000
 
-57669224088023710735685227448893668041961895680718453447065600000000000000000000000000000000000000
 
-740750110814810353985068372571224506796661204915022534279168000000000000000000000000000000000000000
 
-327657111638498724595730314101246573367247716768090190512128000000000000000000000000000000000000000
 
-203978181496528310194738489680346122148420779166985640896102400000000000000000000000000000000000000
 
64116226644558058766123112453405298279781766772496112864460800000000000000000000000000000000000000
 
105448301977724791169159800879058209170504805995130683339571200000000000000000000000000000000000000
 
526276081863510720918128321499532200101076594382041493096366080000000000000000000000000000000000000
 
-124069980906796205720259674065918592785807358934168531338526720000000000000000000000000000000000000
 
29289309175539786011452765370090235584501983464108586036101120000000000000000000000000000000000000
 
253859024650570722845685375156648538241157327866844511343738880000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
105341171726909364254963536420897921664072779367365528780800000000000000000000000000000000000000000
 
-57669224088023710735685227448893668041961895680718453447065600000000000000000000000000000000000000
 
-740750110814810353985068372571224506796661204915022534279168000000000000000000000000000000000000000
 
-327657111638498724595730314101246573367247716768090190512128000000000000000000000000000000000000000
 
-203978181496528310194738489680346122148420779166985640896102400000000000000000000000000000000000000
 
64116226644558058766123112453405298279781766772496112864460800000000000000000000000000000000000000
 
105448301977724791169159800879058209170504805995130683339571200000000000000000000000000000000000000
 
526276081863510720918128321499532200101076594382041493096366080000000000000000000000000000000000000
 
-124069980906796205720259674065918592785807358934168531338526720000000000000000000000000000000000000
 
29289309175539786011452765370090235584501983464108586036101120000000000000000000000000000000000000
 
253859024650570722845685375156648538241157327866844511343738880000000000000000000000000000000000000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 
105448301977724791169159800879058209170504805995130683339571200000000000000000000000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)
) (
1264094060722912371059562437050775059968873352408386345369600000000000000000000000000000000000000000
 
-692030689056284528828222729386724016503542748168621441364787200000000000000000000000000000000000000
 
-8889001329777724247820820470854694081559934458980270411350016000000000000000000000000000000000000000
 
-3931885339661984695148763769214958880406972601217082286145536000000000000000000000000000000000000000
 
-2447738177958339722336861876164153465781049350003827690753228800000000000000000000000000000000000000
 
769394719734696705193477349440863579357381201269953354373529600000000000000000000000000000000000000
 
4733588452696256783480142844808513263655347042657537667062824960000000000000000000000000000000000000
 
-3386909206480600709687992504614070878498774815122374676174602240000000000000000000000000000000000000
 
351471710106477432137433184441082827014023801569303032433213440000000000000000000000000000000000000
 
3046308295806848674148224501879782458893887934402134136124866560000000000000000000000000000000000000
 
1476276227688147076368237212306814928387067283931829566753996800000000000000000000000000000000000000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (4134375 1874250 -55296 30720 32256 -32768 -23040 12800 -18432 17920 
1068480 -593600 -680400 602112 176960 -1250550) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1874250
Arg4: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1929375
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (7976759765625 3429216000 -1905120000 -2000376000 
2032128000 -545102460000 302834700000 318809925000 -322727328000 -48342420000 
2803026870000 -1557237150000 -1808673300000 1662979248000 402297840000 
1244678400000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (7976759765625 3429216000 -1905120000 -2000376000 2032128000 
-545102460000 302834700000 318809925000 -322727328000 -48342420000 2803026870000
 -1557237150000 -1808673300000 1662979248000 402297840000 1244678400000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -2000376000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (15953519531250 6858432000 -3810240000 4064256000 
-1090204920000 611670528000 637619850000 -645454656000 -96684840000 
5606053740000 8001504000 -3114474300000 -3617346600000 3325958496000 
804595680000 2489356800000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (15953519531250 6858432000 -3810240000 4064256000 -1090204920000 
611670528000 637619850000 -645454656000 -96684840000 5606053740000 8001504000 
-3114474300000 -3617346600000 3325958496000 804595680000 2489356800000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 4064256000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
6126151500000000 2633637888000 -1463132160000 -418638689280000 3292047360000 
239819553792000 244846022400000 -247854587904000 -37126978560000 
2152724636160000 9656672256000 -1195958131200000 -1389061094400000 
1277168062464000 308964741120000 955913011200000 -2048385024000 1137991680000 
1975228416000 1593188352000 3950456832000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (6126151500000000 
2633637888000 -1463132160000 -418638689280000 3292047360000 239819553792000 
244846022400000 -247854587904000 -37126978560000 2152724636160000 9656672256000 
-1195958131200000 -1389061094400000 1277168062464000 308964741120000 
955913011200000 -2048385024000 1137991680000 1975228416000 1593188352000 
3950456832000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 244846022400000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (9648688612500000000 
4147979673600000 -2304433152000000 -659355935616000000 5184974592000000 
377715797222400000 -493206305356800000 -58474991232000000 3390541301952000000 
426550576435200000 -1883634056640000000 -2187771223680000000 2011539698380800000
 486619467264000000 1505562992640000000 -214773169766400000 119318427648000000 
126513380044800000 -125361163468800000 64210469299200000 253026760089600000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (9648688612500000000 
4147979673600000 -2304433152000000 -659355935616000000 5184974592000000 
377715797222400000 -493206305356800000 -58474991232000000 3390541301952000000 
426550576435200000 -1883634056640000000 -2187771223680000000 2011539698380800000
 486619467264000000 1505562992640000000 -214773169766400000 119318427648000000 
126513380044800000 -125361163468800000 64210469299200000 253026760089600000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -493206305356800000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (2026224608625000000000 
871075731456000000 -483930961920000000 -138464746479360000000 
1088844664320000000 79320317416704000000 -12279748158720000000 
712013673409920000000 -324717675448320000000 -1172363082831360000000 
-459431956972800000000 422423336659968000000 102190088125440000000 
316168228454400000000 167962758263193600000 -93312643479552000000 
-97720179140505600000 99934969842892800000 -48659795922124800000 
-195440358281011200000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (2026224608625000000000 871075731456000000 
-483930961920000000 -138464746479360000000 1088844664320000000 
79320317416704000000 -12279748158720000000 712013673409920000000 
-324717675448320000000 -1172363082831360000000 -459431956972800000000 
422423336659968000000 102190088125440000000 316168228454400000000 
167962758263193600000 -93312643479552000000 -97720179140505600000 
99934969842892800000 -48659795922124800000 -195440358281011200000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 871075731456000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (8104898434500000000000 
-1935723847680000000 -7839681583104000000 -553858985917440000000 
4355378657280000000 317281269666816000000 -49118992634880000000 
2848054693639680000000 -1298870701793280000000 -4689452331325440000000 
-1837727827891200000000 1689693346639872000000 408760352501760000000 
1264672913817600000000 671851033052774400000 -373250573918208000000 
-390880716562022400000 399739879371571200000 -194639183688499200000 
-781761433124044800000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (8104898434500000000000 -1935723847680000000 
-7839681583104000000 -553858985917440000000 4355378657280000000 
317281269666816000000 -49118992634880000000 2848054693639680000000 
-1298870701793280000000 -4689452331325440000000 -1837727827891200000000 
1689693346639872000000 408760352501760000000 1264672913817600000000 
671851033052774400000 -373250573918208000000 -390880716562022400000 
399739879371571200000 -194639183688499200000 -781761433124044800000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 4355378657280000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (583552687284000000000000 -139372117032960000000 
-564457073983488000000 -39877846986055680000000 22478399608799232000000 
-457314759014400000000 -3536567469711360000000 205059937942056960000000 
-93518690529116160000000 -337640567855431680000000 -132316403608166400000000 
121657920958070784000000 29430745380126720000000 91056449794867200000000 
48373274379799756800000 -26874041322110976000000 -28143411592465612800000 
28781271314753126400000 -14292765459637862400000 -56286823184931225600000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (583552687284000000000000 -139372117032960000000 
-564457073983488000000 -39877846986055680000000 22478399608799232000000 
-457314759014400000000 -3536567469711360000000 205059937942056960000000 
-93518690529116160000000 -337640567855431680000000 -132316403608166400000000 
121657920958070784000000 29430745380126720000000 91056449794867200000000 
48373274379799756800000 -26874041322110976000000 -28143411592465612800000 
28781271314753126400000 -14292765459637862400000 -56286823184931225600000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -139372117032960000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (7002632247408000000000000 -4682903132307456000000 
2508698106593280000000 -478534163832668160000000 269740795305590784000000 
-5487777108172800000000 -42438809636536320000000 2460719255304683520000000 
-1122224286349393920000000 -4051686814265180160000000 -1587796843297996800000000
 1459895051496849408000000 353168944561520640000000 1092677397538406400000000 
580479292557597081600000 -322488495865331712000000 -337720939109587353600000 
343424046138576076800000 -171513185515654348800000 -675441878219174707200000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (7002632247408000000000000 -4682903132307456000000 
2508698106593280000000 -478534163832668160000000 269740795305590784000000 
-5487777108172800000000 -42438809636536320000000 2460719255304683520000000 
-1122224286349393920000000 -4051686814265180160000000 -1587796843297996800000000
 1459895051496849408000000 353168944561520640000000 1092677397538406400000000 
580479292557597081600000 -322488495865331712000000 -337720939109587353600000 
343424046138576076800000 -171513185515654348800000 -675441878219174707200000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -4682903132307456000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (14005264494816000000000000 5017396213186560000000 
-957068327665336320000000 553530300008103936000000 -10975554216345600000000 
-84877619273072640000000 4921438510609367040000000 -2225716960169558016000000 
-8103373628530360320000000 -3175593686595993600000000 2919790102993698816000000 
706337889123041280000000 2185354795076812800000000 1160958585115194163200000 
-644976991730663424000000 -675441878219174707200000 686848092277152153600000 
-343026371031308697600000 -1350883756438349414400000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
14005264494816000000000000 5017396213186560000000 -957068327665336320000000 
553530300008103936000000 -10975554216345600000000 -84877619273072640000000 
4921438510609367040000000 -2225716960169558016000000 -8103373628530360320000000 
-3175593686595993600000000 2919790102993698816000000 706337889123041280000000 
2185354795076812800000000 1160958585115194163200000 -644976991730663424000000 
-675441878219174707200000 686848092277152153600000 -343026371031308697600000 
-1350883756438349414400000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 5017396213186560000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (5378021566009344000000000000 
-367514237823489146880000000 4064090932681113600000000 
218651771602133581824000000 -4214612819076710400000000 
-32593005800859893760000000 1889832388073996943360000000 
-846547130839748050944000000 -3111695473355658362880000000 
-1219427975652861542400000000 1121199399549580345344000000 
271233749423247851520000000 839176241309496115200000000 
443279328992788532428800000 -246266293884882518016000000 
-256931226676554419404800000 263749667434426426982400000 
-129755307160453408358400000 -513862453353108838809600000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (5378021566009344000000000000 -367514237823489146880000000 
4064090932681113600000000 218651771602133581824000000 -4214612819076710400000000
 -32593005800859893760000000 1889832388073996943360000000 
-846547130839748050944000000 -3111695473355658362880000000 
-1219427975652861542400000000 1121199399549580345344000000 
271233749423247851520000000 839176241309496115200000000 
443279328992788532428800000 -246266293884882518016000000 
-256931226676554419404800000 263749667434426426982400000 
-129755307160453408358400000 -513862453353108838809600000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -4214612819076710400000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (8470383966464716800000000000000 
-578834924571995406336000000000 6400943218972753920000000000 
344376540273360391372800000000 1770137384012218368000000000 
-51333984136354332672000000000 2976486011216545185792000000000 
-1340392280608652053708800000000 -4900920370535161921536000000000 
-1920599061653256929280000000000 1765889054290589043916800000000 
427193155341615366144000000000 1321702580062456381440000000000 
701806368639324216360960000000 -389892427021846786867200000000 
-406790846876387872604160000000 417563607972588898222080000000 
-205426691208121449185280000000 -813581693752775745208320000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (8470383966464716800000000000000 -578834924571995406336000000000 
6400943218972753920000000000 344376540273360391372800000000 
1770137384012218368000000000 -51333984136354332672000000000 
2976486011216545185792000000000 -1340392280608652053708800000000 
-4900920370535161921536000000000 -1920599061653256929280000000000 
1765889054290589043916800000000 427193155341615366144000000000 
1321702580062456381440000000000 701806368639324216360960000000 
-389892427021846786867200000000 -406790846876387872604160000000 
417563607972588898222080000000 -205426691208121449185280000000 
-813581693752775745208320000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1770137384012218368000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1778780632957590528000000000000000 -121555334160119035330560000000000 
1344198075984278323200000000000 72319073457405682188288000000000 
-10780136668634409861120000000000 625062062355474489016320000000000 
-279995463525246667849728000000000 -1026405311432564759592960000000000 
-403325802947183955148800000000000 370836701401023699222528000000000 
89710562621739226890240000000000 277557541813115840102400000000000 
146614638064364807100825600000000 -81452576702424892833792000000000 
-84980003223270374218137600000000 87235202503936540724428800000000 
-42916567843319964814540800000000 -169960006446540748436275200000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1778780632957590528000000000000000 -121555334160119035330560000000000 
1344198075984278323200000000000 72319073457405682188288000000000 
-10780136668634409861120000000000 625062062355474489016320000000000 
-279995463525246667849728000000000 -1026405311432564759592960000000000 
-403325802947183955148800000000000 370836701401023699222528000000000 
89710562621739226890240000000000 277557541813115840102400000000000 
146614638064364807100825600000000 -81452576702424892833792000000000 
-84980003223270374218137600000000 87235202503936540724428800000000 
-42916567843319964814540800000000 -169960006446540748436275200000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -121555334160119035330560000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
7115122531830362112000000000000000 5376792303937113292800000000000 
289276293829622728753152000000000 1093998007441071317975040000000000 
-43120546674537639444480000000000 2500248249421897956065280000000000 
-1119981854100986671398912000000000 -4105621245730259038371840000000000 
-1613303211788735820595200000000000 1483346805604094796890112000000000 
358842250486956907560960000000000 1110230167252463360409600000000000 
586458552257459228403302400000000 -325810306809699571335168000000000 
-339920012893081496872550400000000 348940810015746162897715200000000 
-171666271373279859258163200000000 -679840025786162993745100800000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
7115122531830362112000000000000000 5376792303937113292800000000000 
289276293829622728753152000000000 1093998007441071317975040000000000 
-43120546674537639444480000000000 2500248249421897956065280000000000 
-1119981854100986671398912000000000 -4105621245730259038371840000000000 
-1613303211788735820595200000000000 1483346805604094796890112000000000 
358842250486956907560960000000000 1110230167252463360409600000000000 
586458552257459228403302400000000 -325810306809699571335168000000000 
-339920012893081496872550400000000 348940810015746162897715200000000 
-171666271373279859258163200000000 -679840025786162993745100800000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 5376792303937113292800000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
512288822291786072064000000000000000 20376242602202118953631744000000000 
78203293343843737998458880000000000 -3104679360566710040002560000000000 
180017873958376652836700160000000000 -80638693495271040340721664000000000 
-295604729692578650762772480000000000 -116157831248788979082854400000000000 
106800970003494825376088064000000000 25836642035060897344389120000000000 
79936572042177361949491200000000000 42225015762537064445037772800000000 
-23458342090298369136132096000000000 -24474240928301867774823628800000000 
25123738321133723728635494400000000 -12704086246328125117326950400000000 
-48948481856603735549647257600000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (512288822291786072064000000000000000 
20376242602202118953631744000000000 78203293343843737998458880000000000 
-3104679360566710040002560000000000 180017873958376652836700160000000000 
-80638693495271040340721664000000000 -295604729692578650762772480000000000 
-116157831248788979082854400000000000 106800970003494825376088064000000000 
25836642035060897344389120000000000 79936572042177361949491200000000000 
42225015762537064445037772800000000 -23458342090298369136132096000000000 
-24474240928301867774823628800000000 25123738321133723728635494400000000 
-12704086246328125117326950400000000 -48948481856603735549647257600000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 20376242602202118953631744000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
6147465867501432864768000000000000000 632795881093093071677030400000000000 
-366772366839638141165371392000000000 -37256152326800520480030720000000000 
2160214487500519834040401920000000000 -967664321943252484088659968000000000 
-3547256756310943809153269760000000000 -1393893974985467748994252800000000000 
1281611640041937904513056768000000000 310039704420730768132669440000000000 
959238864506128343393894400000000000 506700189150444773340453273600000000 
-281500105083580429633585152000000000 -293690891139622413297883545600000000 
301484859853604684743625932800000000 132818361474892163942921011200000000 
-587381782279244826595767091200000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (6147465867501432864768000000000000000 
632795881093093071677030400000000000 -366772366839638141165371392000000000 
-37256152326800520480030720000000000 2160214487500519834040401920000000000 
-967664321943252484088659968000000000 -3547256756310943809153269760000000000 
-1393893974985467748994252800000000000 1281611640041937904513056768000000000 
310039704420730768132669440000000000 959238864506128343393894400000000000 
506700189150444773340453273600000000 -281500105083580429633585152000000000 
-293690891139622413297883545600000000 301484859853604684743625932800000000 
132818361474892163942921011200000000 -587381782279244826595767091200000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 632795881093093071677030400000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (9682258741314756762009600000000000000000 
-843440747831529162439812710400000000000 -58678439914710819756048384000000000000
 3402337817813318738613633024000000000000 
-460974226824226302022228377600000000000 
-5586929391189736499416399872000000000000 
-2195383010602111704665948160000000000000 
2018538333066052199608064409600000000000 488312534462650959808954368000000000000
 1510801211597152140845383680000000000000 
251317156647518104082259640320000000000 -139620642581954502267922022400000000000
 -143634029473986392818943262720000000000 
150847163149763725772571279360000000000 368653481358414612272712253440000000000 
-287268058947972785637886525440000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (9682258741314756762009600000000000000000 
-843440747831529162439812710400000000000 -58678439914710819756048384000000000000
 3402337817813318738613633024000000000000 
-460974226824226302022228377600000000000 
-5586929391189736499416399872000000000000 
-2195383010602111704665948160000000000000 
2018538333066052199608064409600000000000 488312534462650959808954368000000000000
 1510801211597152140845383680000000000000 
251317156647518104082259640320000000000 -139620642581954502267922022400000000000
 -143634029473986392818943262720000000000 
150847163149763725772571279360000000000 368653481358414612272712253440000000000 
-287268058947972785637886525440000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -843440747831529162439812710400000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (2033274335676098920022016000000000000000000 
-12322472382089272148770160640000000000000 
714490941740796935108862935040000000000000 
-805294815811572019874110636032000000000000 
-2501674349984503095720148992000000000000000 
-461030432226443457979849113600000000000000 
423893049943870961917693526016000000000000 
102545632237156701559880417280000000000000 
317268254435401949577530572800000000000000 
417143005959199400031273615360000000000000 
-231746114421777444461818675200000000000000 
-242710214643082491426810888192000000000000 
247598735706321847996832022528000000000000 
-28856303141505605890146828288000000000000 
-485420429286164982853621776384000000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
2033274335676098920022016000000000000000000 
-12322472382089272148770160640000000000000 
714490941740796935108862935040000000000000 
-805294815811572019874110636032000000000000 
-2501674349984503095720148992000000000000000 
-461030432226443457979849113600000000000000 
423893049943870961917693526016000000000000 
102545632237156701559880417280000000000000 
317268254435401949577530572800000000000000 
417143005959199400031273615360000000000000 
-231746114421777444461818675200000000000000 
-242710214643082491426810888192000000000000 
247598735706321847996832022528000000000000 
-28856303141505605890146828288000000000000 
-485420429286164982853621776384000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 714490941740796935108862935040000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
8133097342704395680088064000000000000000000 
-49289889528357088595080642560000000000000 
-3221179263246288079496442544128000000000000 
-10006697399938012382880595968000000000000000 
-8274540204572946247899162869760000000000000 
1695572199775483847670774104064000000000000 
410182528948626806239521669120000000000000 
1269073017741607798310122291200000000000000 
1668572023836797600125094461440000000000000 
-926984457687109777847274700800000000000000 
-970840858572329965707243552768000000000000 
990394942825287391987328090112000000000000 
-115425212566022423560587313152000000000000 
-1941681717144659931414487105536000000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
8133097342704395680088064000000000000000000 
-49289889528357088595080642560000000000000 
-3221179263246288079496442544128000000000000 
-10006697399938012382880595968000000000000000 
-8274540204572946247899162869760000000000000 
1695572199775483847670774104064000000000000 
410182528948626806239521669120000000000000 
1269073017741607798310122291200000000000000 
1668572023836797600125094461440000000000000 
-926984457687109777847274700800000000000000 
-970840858572329965707243552768000000000000 
990394942825287391987328090112000000000000 
-115425212566022423560587313152000000000000 
-1941681717144659931414487105536000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3221179263246288079496442544128000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
585583008674716488966340608000000000000000000 
-3548872046041710378845806264320000000000000 
-449903154682848692889701735989248000000000000 
-257543072088391881501613259489280000000000000 
122081198383834837032295735492608000000000000 
29533142084301130049245560176640000000000000 
91373257277395761478328804966400000000000000 
120137185716249427209006801223680000000000000 
-66742880953471904005003778457600000000000000 
-69900541817207757530921535799296000000000000 
71308435883420692223087622488064000000000000 
-8310615304753614496362286546944000000000000 
66354389213346922025929251225600000000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
585583008674716488966340608000000000000000000 
-3548872046041710378845806264320000000000000 
-449903154682848692889701735989248000000000000 
-257543072088391881501613259489280000000000000 
122081198383834837032295735492608000000000000 
29533142084301130049245560176640000000000000 
91373257277395761478328804966400000000000000 
120137185716249427209006801223680000000000000 
-66742880953471904005003778457600000000000000 
-69900541817207757530921535799296000000000000 
71308435883420692223087622488064000000000000 
-8310615304753614496362286546944000000000000 
66354389213346922025929251225600000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -449903154682848692889701735989248000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (7026996104096597867596087296000000000000000000 
-42586464552500524546149675171840000000000000 
3658030455182027815326166925967360000000000000 
9563231164897294516402180073717760000000000000 
354397705011613560590946722119680000000000000 
1096479087328749137739945659596800000000000000 
1441646228594993126508081614684160000000000000 
-800914571441662848060045341491200000000000000 
-838806501806493090371058429591552000000000000 
855701230601048306677051469856768000000000000 
-99727383657043373956347438563328000000000000 
-5502391494999718636144673289142272000000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (7026996104096597867596087296000000000000000000 
-42586464552500524546149675171840000000000000 
3658030455182027815326166925967360000000000000 
9563231164897294516402180073717760000000000000 
354397705011613560590946722119680000000000000 
1096479087328749137739945659596800000000000000 
1441646228594993126508081614684160000000000000 
-800914571441662848060045341491200000000000000 
-838806501806493090371058429591552000000000000 
855701230601048306677051469856768000000000000 
-99727383657043373956347438563328000000000000 
-5502391494999718636144673289142272000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1441646228594993126508081614684160000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (28107984416386391470384349184000000000000000000 
-170345858210002098184598700687360000000000000 
14632121820728111261304667703869440000000000000 
38252924659589178065608720294871040000000000000 
1417590820046454242363786888478720000000000000 
4385916349314996550959782638387200000000000000 
-3203658285766651392240181365964800000000000000 
-16330042064580910500056968250523648000000000000 
3422804922404193226708205879427072000000000000 
-398909534628173495825389754253312000000000000 
-22009565979998874544578693156569088000000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
28107984416386391470384349184000000000000000000 
-170345858210002098184598700687360000000000000 
14632121820728111261304667703869440000000000000 
38252924659589178065608720294871040000000000000 
1417590820046454242363786888478720000000000000 
4385916349314996550959782638387200000000000000 
-3203658285766651392240181365964800000000000000 
-16330042064580910500056968250523648000000000000 
3422804922404193226708205879427072000000000000 
-398909534628173495825389754253312000000000000 
-22009565979998874544578693156569088000000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3203658285766651392240181365964800000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)
) (337295812996636697644612190208000000000000000000 
-2044150298520025178215184408248320000000000000 
175585461848737335135656012446433280000000000000 
459035095915070136787304643538452480000000000000 
17011089840557450908365442661744640000000000000 
52630996191779958611517391660646400000000000000 
-147905630488471155117080898516811776000000000000 
98739508212650043780821735140491264000000000000 
-4786914415538081949904677051039744000000000000 
-264114791759986494534944317878829056000000000000 
-44851216000733119491362539123507200000000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (1929375 -58752 32640 34272 -34816 267120 -148400 -170100 153216 
44240 -395640 219800 264600 -267456 -32480 -1951425) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 34272
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2)) (3858750 -117504 65280 -69632 534240 -399616 -340200 
306432 88480 -791280 -137088 439600 529200 -534912 -64960 -3902850) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2)) (3858750 -117504 65280 -69632 534240 -399616 -340200 306432 88480 
-791280 -137088 439600 529200 -534912 -64960 -3902850) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -69632
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (1481760000
 -45121536 25067520 205148160 -56401920 -238055424 -130636800 117669888 33976320
 -303851520 -165445632 168806400 203212800 -205406208 -24944640 -1498694400 
35094528 -19496960 -33841152 -27295744 -67682304) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (1481760000 -45121536 
25067520 205148160 -56401920 -238055424 -130636800 117669888 33976320 -303851520
 -165445632 168806400 203212800 -205406208 -24944640 -1498694400 35094528 
-19496960 -33841152 -27295744 -67682304) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -130636800
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (2333772000000 
-71066419200 39481344000 323108352000 -88833024000 -374937292800 240197529600 
53512704000 -478566144000 -480046694400 265870080000 320060160000 -323514777600 
-39287808000 -2360443680000 168144076800 -93413376000 -119140761600 66886041600 
-75911270400 -238281523200) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (2333772000000 -71066419200 
39481344000 323108352000 -88833024000 -374937292800 240197529600 53512704000 
-478566144000 -480046694400 265870080000 320060160000 -323514777600 -39287808000
 -2360443680000 168144076800 -93413376000 -119140761600 66886041600 -75911270400
 -238281523200) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 240197529600
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (490092120000000 -14923948032000 
8291082240000 67852753920000 -18654935040000 -78736831488000 11237667840000 
-100498890240000 100956119040000 434143825920000 67212633600000 -67938103296000 
-8250439680000 -495693172800000 -68455076659200 38030598144000 35510217523200 
-47444498841600 14323521945600 71020435046400) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (490092120000000 -14923948032000 8291082240000 
67852753920000 -18654935040000 -78736831488000 11237667840000 -100498890240000 
100956119040000 434143825920000 67212633600000 -67938103296000 -8250439680000 
-495693172800000 -68455076659200 38030598144000 35510217523200 -47444498841600 
14323521945600 71020435046400) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -14923948032000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1960368480000000 33164328960000 
134315532288000 271411015680000 -74619740160000 -314947325952000 44950671360000 
-401995560960000 403824476160000 1736575303680000 268850534400000 
-271752413184000 -33001758720000 -1982772691200000 -273820306636800 
152122392576000 142040870092800 -189777995366400 57294087782400 284081740185600)
 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (1960368480000000 33164328960000 134315532288000 
271411015680000 -74619740160000 -314947325952000 44950671360000 -401995560960000
 403824476160000 1736575303680000 268850534400000 -271752413184000 
-33001758720000 -1982772691200000 -273820306636800 152122392576000 
142040870092800 -189777995366400 57294087782400 284081740185600) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -74619740160000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (141146530560000000 2387831685120000 9670718324736000
 19541593128960000 -16408149295104000 7835072716800000 3236448337920000 
-28943680389120000 29075362283520000 125033421864960000 19357238476800000 
-19566173749248000 -2376126627840000 -142759633766400000 -19715062077849600 
10952812265472000 10226942646681600 -13664015666380800 8900837690572800 
20453885293363200) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (141146530560000000 2387831685120000 9670718324736000 
19541593128960000 -16408149295104000 7835072716800000 3236448337920000 
-28943680389120000 29075362283520000 125033421864960000 19357238476800000 
-19566173749248000 -2376126627840000 -142759633766400000 -19715062077849600 
10952812265472000 10226942646681600 -13664015666380800 8900837690572800 
20453885293363200) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2387831685120000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (1693758366720000000 80231144620032000 
-42980970332160000 234499117547520000 -196897791541248000 94020872601600000 
38837380055040000 -347324164669440000 348904347402240000 1500401062379520000 
232286861721600000 -234794084990976000 -28513519534080000 -1713115605196800000 
-236580744934195200 131433747185664000 122723311760179200 -130538544404889600 
106810052286873600 245446623520358400) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (1693758366720000000 80231144620032000 -42980970332160000 
234499117547520000 -196897791541248000 94020872601600000 38837380055040000 
-347324164669440000 348904347402240000 1500401062379520000 232286861721600000 
-234794084990976000 -28513519534080000 -1713115605196800000 -236580744934195200 
131433747185664000 122723311760179200 -130538544404889600 106810052286873600 
245446623520358400) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 80231144620032000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (3387516733440000000 -85961940664320000 468998235095040000 
-634489016942592000 188041745203200000 77674760110080000 -694648329338880000 
376884116324352000 3000802124759040000 464573723443200000 -469588169981952000 
-57027039068160000 -3426231210393600000 -473161489868390400 262867494371328000 
245446623520358400 -261077088809779200 213620104573747200 490893247040716800) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
3387516733440000000 -85961940664320000 468998235095040000 -634489016942592000 
188041745203200000 77674760110080000 -694648329338880000 376884116324352000 
3000802124759040000 464573723443200000 -469588169981952000 -57027039068160000 
-3426231210393600000 -473161489868390400 262867494371328000 245446623520358400 
-261077088809779200 213620104573747200 490893247040716800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -85961940664320000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (1300806425640960000000 180095322276495360000 
-69629171938099200000 -348087540413104128000 72208030158028800000 
29827107882270720000 -266744958466129920000 5465156792352768000 
1152308015907471360000 178396309802188800000 -180321857273069568000 
-21898383002173440000 -1315672784791142400000 -138369194014644633600 
76871774452580352000 52474000268958105600 -100253602102955212800 
48333039415905484800 104948000537916211200) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (1300806425640960000000 180095322276495360000 
-69629171938099200000 -348087540413104128000 72208030158028800000 
29827107882270720000 -266744958466129920000 5465156792352768000 
1152308015907471360000 178396309802188800000 -180321857273069568000 
-21898383002173440000 -1315672784791142400000 -138369194014644633600 
76871774452580352000 52474000268958105600 -100253602102955212800 
48333039415905484800 104948000537916211200) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 72208030158028800000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (2048770120384512000000000 283650132585480192000000 
-109665945802506240000000 -548237876150639001600000 -30327372666372096000000 
46977694914576384000000 -420123309584154624000000 129917112613443993600000 
1814885125054267392000000 280974187938447360000000 -284006925205084569600000 
-34489953228423168000000 -2072184636046049280000000 -280319218629602181120000 
155732899238667878400000 119039397623255531520000 -194869934753065205760000 
94320960679874396160000 238078795246511063040000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (2048770120384512000000000 283650132585480192000000 
-109665945802506240000000 -548237876150639001600000 -30327372666372096000000 
46977694914576384000000 -420123309584154624000000 129917112613443993600000 
1814885125054267392000000 280974187938447360000000 -284006925205084569600000 
-34489953228423168000000 -2072184636046049280000000 -280319218629602181120000 
155732899238667878400000 119039397623255531520000 -194869934753065205760000 
94320960679874396160000 238078795246511063040000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -30327372666372096000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
430241725280747520000000000 59566527842950840320000000 
-23029848618526310400000000 -115129953991634190336000000 
9865315932061040640000000 -88225895012672471040000000 1807600609070678016000000 
333360264311860101120000000 59004579467073945600000000 
-59641454293067759616000000 -7242890177968865280000000 
-435158773569670348800000000 -45765610920343712563200000 
25425339400190951424000000 17355775588957893427200000 
-33158878895552436633600000 15986152786810739097600000 
34711551177915786854400000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
430241725280747520000000000 59566527842950840320000000 
-23029848618526310400000000 -115129953991634190336000000 
9865315932061040640000000 -88225895012672471040000000 1807600609070678016000000 
333360264311860101120000000 59004579467073945600000000 
-59641454293067759616000000 -7242890177968865280000000 
-435158773569670348800000000 -45765610920343712563200000 
25425339400190951424000000 17355775588957893427200000 
-33158878895552436633600000 15986152786810739097600000 
34711551177915786854400000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 59566527842950840320000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1720966901122990080000000000 -92119394474105241600000000 
-460519815966536761344000000 -536098750586557562880000000 
39461263728244162560000000 -352903580050689884160000000 
7230402436282712064000000 1333441057247440404480000000 
236018317868295782400000000 -238565817172271038464000000 
-28971560711875461120000000 -1740635094278681395200000000 
-183062443681374850252800000 101701357600763805696000000 
69423102355831573708800000 -132635515582209746534400000 
63944611147242956390400000 138846204711663147417600000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1720966901122990080000000000 -92119394474105241600000000 
-460519815966536761344000000 -536098750586557562880000000 
39461263728244162560000000 -352903580050689884160000000 
7230402436282712064000000 1333441057247440404480000000 
236018317868295782400000000 -238565817172271038464000000 
-28971560711875461120000000 -1740635094278681395200000000 
-183062443681374850252800000 101701357600763805696000000 
69423102355831573708800000 -132635515582209746534400000 
63944611147242956390400000 138846204711663147417600000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -92119394474105241600000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (123909616880855285760000000000 
-25419397613765806522368000000 -28926573622451094159360000000 
2841210988433579704320000000 -25409057763649671659520000000 
520588975412355268608000000 96007756121815709122560000000 
16993318886517296332800000000 -17176738836403514769408000000 
-2085952371255033200640000000 -125325726788065060454400000000 
-13180495945058989218201600000 7322497747254994010112000000 
4998463369619873307033600000 -9549757121919101750476800000 
10499653248944228322508800000 9996926739239746614067200000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (123909616880855285760000000000 
-25419397613765806522368000000 -28926573622451094159360000000 
2841210988433579704320000000 -25409057763649671659520000000 
520588975412355268608000000 96007756121815709122560000000 
16993318886517296332800000000 -17176738836403514769408000000 
-2085952371255033200640000000 -125325726788065060454400000000 
-13180495945058989218201600000 7322497747254994010112000000 
4998463369619873307033600000 -9549757121919101750476800000 
10499653248944228322508800000 9996926739239746614067200000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -25419397613765806522368000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1486915402570263429120000000000 
34172080737073967923200000000 457549157047784517402624000000 
34094531861202956451840000000 -304908693163796059914240000000 
6247067704948263223296000000 1152093073461788509470720000000 
203919826638207555993600000000 -206120866036842177232896000000 
-25031428455060398407680000000 -1503908721456780725452800000000 
-158165951340707870618419200000 87869972967059928121344000000 
59981560435438479684403200000 -114597085463029221005721600000 
-229875727605390551443046400000 119963120870876959368806400000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1486915402570263429120000000000 
34172080737073967923200000000 457549157047784517402624000000 
34094531861202956451840000000 -304908693163796059914240000000 
6247067704948263223296000000 1152093073461788509470720000000 
203919826638207555993600000000 -206120866036842177232896000000 
-25031428455060398407680000000 -1503908721456780725452800000000 
-158165951340707870618419200000 87869972967059928121344000000 
59981560435438479684403200000 -114597085463029221005721600000 
-229875727605390551443046400000 119963120870876959368806400000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 34172080737073967923200000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (2341891759048164900864000000000000 
706287648440689548381388800000000 53698887681394656411648000000000 
-480231191732978794364928000000000 67248227273577780687667200000000 
1814546590702316902416384000000000 321173726955176900689920000000000 
-324640364008026429141811200000000 -39424499816720127492096000000000 
-2368656236294429642588160000000000 -278636051118446804509655040000000 
154797806176914891394252800000000 111693686377300885336227840000000 
-197986514941652894660689920000000 -353442906632747478606151680000000 
223387372754601770672455680000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (2341891759048164900864000000000000 
706287648440689548381388800000000 53698887681394656411648000000000 
-480231191732978794364928000000000 67248227273577780687667200000000 
1814546590702316902416384000000000 321173726955176900689920000000000 
-324640364008026429141811200000000 -39424499816720127492096000000000 
-2368656236294429642588160000000000 -278636051118446804509655040000000 
154797806176914891394252800000000 111693686377300885336227840000000 
-197986514941652894660689920000000 -353442906632747478606151680000000 
223387372754601770672455680000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 706287648440689548381388800000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (491797269400114629181440000000000000 
11276766413092877846446080000000000 -100848550263925546816634880000000000 
607403752417630554584776704000000000 1493457830341572588208128000000000000 
67446482660587149144883200000000000 -68174476441685550119780352000000000 
-8279144961511226773340160000000000 -497417809621830224943513600000000000 
-363629834861251713847787520000000000 202016574922917618804326400000000000 
201440161546286952112717824000000000 -222386806138563632264380416000000000 
14769233310649912588763136000000000 402880323092573904225435648000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
491797269400114629181440000000000000 11276766413092877846446080000000000 
-100848550263925546816634880000000000 607403752417630554584776704000000000 
1493457830341572588208128000000000000 67446482660587149144883200000000000 
-68174476441685550119780352000000000 -8279144961511226773340160000000000 
-497417809621830224943513600000000000 -363629834861251713847787520000000000 
202016574922917618804326400000000000 201440161546286952112717824000000000 
-222386806138563632264380416000000000 14769233310649912588763136000000000 
402880323092573904225435648000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -100848550263925546816634880000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1967189077600458516725760000000000000 45107065652371511385784320000000000 
2429615009670522218339106816000000000 5973831321366290352832512000000000000 
1177422883017678517929246720000000000 -272697905766742200479121408000000000 
-33116579846044907093360640000000000 -1989671238487320899774054400000000000 
-1454519339445006855391150080000000000 808066299691670475217305600000000000 
805760646185147808450871296000000000 -889547224554254529057521664000000000 
59076933242599650355052544000000000 1611521292370295616901742592000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1967189077600458516725760000000000000 45107065652371511385784320000000000 
2429615009670522218339106816000000000 5973831321366290352832512000000000000 
1177422883017678517929246720000000000 -272697905766742200479121408000000000 
-33116579846044907093360640000000000 -1989671238487320899774054400000000000 
-1454519339445006855391150080000000000 808066299691670475217305600000000000 
805760646185147808450871296000000000 -889547224554254529057521664000000000 
59076933242599650355052544000000000 1611521292370295616901742592000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2429615009670522218339106816000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
141637613587233013204254720000000000000 3247708726970748819776471040000000000 
226028194326049039063455891456000000000 -170335128438131979634700451840000000000
 -19634249215205438434496741376000000000 -2384393748915233310721966080000000000 
-143256329171087104783731916800000000000 
-104725392440040493588162805760000000000 58180773577800274215646003200000000000 
58014766525330642208462733312000000000 -64047400167906326092141559808000000000 
4253539193467174825563783168000000000 -39465827568252137556777369600000000000) 3
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (141637613587233013204254720000000000000 
3247708726970748819776471040000000000 226028194326049039063455891456000000000 
-170335128438131979634700451840000000000 -19634249215205438434496741376000000000
 -2384393748915233310721966080000000000 -143256329171087104783731916800000000000
 -104725392440040493588162805760000000000 58180773577800274215646003200000000000
 58014766525330642208462733312000000000 -64047400167906326092141559808000000000 
4253539193467174825563783168000000000 -39465827568252137556777369600000000000) 3
)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 226028194326049039063455891456000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (1699651363046796158451056640000000000000 
38972504723648985837317652480000000000 -5434444456148319341568243793920000000000
 -4304118488451347964356166942720000000000 
-28612724986982799728663592960000000000 
-1719075950053045257404783001600000000000 
-1256704709280485923057953669120000000000 
698169282933603290587752038400000000000 696177198303967706501552799744000000000 
-768568802014875913105698717696000000000 51042470321606097906765398016000000000 
2690804789745660896207054045184000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (1699651363046796158451056640000000000000 
38972504723648985837317652480000000000 -5434444456148319341568243793920000000000
 -4304118488451347964356166942720000000000 
-28612724986982799728663592960000000000 
-1719075950053045257404783001600000000000 
-1256704709280485923057953669120000000000 
698169282933603290587752038400000000000 696177198303967706501552799744000000000 
-768568802014875913105698717696000000000 51042470321606097906765398016000000000 
2690804789745660896207054045184000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1256704709280485923057953669120000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (6798605452187184633804226560000000000000 
155890018894595943349270609920000000000 
-21737777824593277366272975175680000000000 
-17216473953805391857424667770880000000000 
-114450899947931198914654371840000000000 
-6876303800212181029619132006400000000000 
2792677131734413162351008153600000000000 
14095051176740244133527794221056000000000 
-3074275208059503652422794870784000000000 
204169881286424391627061592064000000000 
10763219158982643584828216180736000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
6798605452187184633804226560000000000000 155890018894595943349270609920000000000
 -21737777824593277366272975175680000000000 
-17216473953805391857424667770880000000000 
-114450899947931198914654371840000000000 
-6876303800212181029619132006400000000000 
2792677131734413162351008153600000000000 
14095051176740244133527794221056000000000 
-3074275208059503652422794870784000000000 
204169881286424391627061592064000000000 
10763219158982643584828216180736000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2792677131734413162351008153600000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)
) (81583265426246215605650718720000000000000 
1870680226735151320191247319040000000000 
-260853333895119328395275702108160000000000 
-206597687445664702289096013250560000000000 
-1373410799375174386975852462080000000000 
-82515645602546172355429584076800000000000 
127250457144866732167068408348672000000000 
-87159490867933480751391685214208000000000 
2450038575437092699524739104768000000000 
129158629907791723017938594168832000000000 
39097479844281784272914114150400000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0
 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (67528125
 -12428640 6904800 2399040 -13131072 7295040 -2841328 -7781376 3587760 -1993200 
-21247170 991296 5038320 51290820 -11957400 88623045 23018464 -76669740 
-67248720) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2399040
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0)) (32413500000 -5965747200 3314304000 -9412070400 1428848640
 -11123132160 -5577523200 426643200 540264960 -9802800000 -560563200 3425990400 
24619593600 -2954266560 31851338400 7766976000 -36801475200 -32279385600 
1727308800 8329466880) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0)) (32413500000 -5965747200 3314304000 -9412070400 1428848640 
-11123132160 -5577523200 426643200 540264960 -9802800000 -560563200 3425990400 
24619593600 -2954266560 31851338400 7766976000 -36801475200 -32279385600 
1727308800 8329466880) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -11123132160
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0)) (64827000000 -11931494400 6628608000 -18824140800 
2857697280 -11155046400 853286400 34449926400 -19605600000 -1121126400 
6851980800 49239187200 44492528640 -5908533120 63702676800 15533952000 
-73602950400 -64558771200 3454617600 16658933760) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0)) (64827000000 -11931494400 6628608000 -18824140800 2857697280 
-11155046400 853286400 34449926400 -19605600000 -1121126400 6851980800 
49239187200 44492528640 -5908533120 63702676800 15533952000 -73602950400 
-64558771200 3454617600 16658933760) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -11155046400
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0
 1 . #3#) (1 0 0 0 0 0 0 0 1)) (24893568000000 -4581693849600 2545385472000 
-7228470067200 1097355755520 327661977600 -9035587584000 -324609638400 
-7528550400000 -430512537600 2631160627200 18907847884800 -986044170240 
-2268876718080 24461827891200 5965037568000 -28263532953600 -24790568140800 
5622143385600 -1796839833600 975678013440 -4372778188800 -10842705100800) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0
 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1
 0 0 0 0 0 0 0 1)) (24893568000000 -4581693849600 2545385472000 -7228470067200 
1097355755520 327661977600 -9035587584000 -324609638400 -7528550400000 
-430512537600 2631160627200 18907847884800 -986044170240 -2268876718080 
24461827891200 5965037568000 -28263532953600 -24790568140800 5622143385600 
-1796839833600 975678013440 -4372778188800 -10842705100800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -7528550400000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (39207369600000000 -7216167813120000 4008982118400000 
-11384840355840000 1728335314944000 516067614720000 -14231050444800000 
-511260180480000 2483933921280000 4144077987840000 29779860418560000 
-14200984240128000 -3573480830976000 38527378928640000 9394934169600000 
-44515064401920000 -39045144821760000 15359543377920000 -6443726929920000 
-2257696530432000 3854617804800000 -8784320348160000 -24666039336960000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (39207369600000000 -7216167813120000 4008982118400000 -11384840355840000
 1728335314944000 516067614720000 -14231050444800000 -511260180480000 
2483933921280000 4144077987840000 29779860418560000 -14200984240128000 
-3573480830976000 38527378928640000 9394934169600000 -44515064401920000 
-39045144821760000 15359543377920000 -6443726929920000 -2257696530432000 
3854617804800000 -8784320348160000 -24666039336960000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2483933921280000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
8233547616000000000 -1515395240755200000 841886244864000000 -2390816474726400000
 362950416138240000 108374199091200000 -2988520593408000000 -107364637900800000 
870256377446400000 6253770687897600000 -895702196551680000 3161764951511040000 
8090749575014400000 1972936175616000000 -9348163524403200000 
-8199480412569600000 2152444655370240000 -757038514176000000 151835076771840000 
173582655160320000 -1531731599032320000 -3927965564436480000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
8233547616000000000 -1515395240755200000 841886244864000000 -2390816474726400000
 362950416138240000 108374199091200000 -2988520593408000000 -107364637900800000 
870256377446400000 6253770687897600000 -895702196551680000 3161764951511040000 
8090749575014400000 1972936175616000000 -9348163524403200000 
-8199480412569600000 2152444655370240000 -757038514176000000 151835076771840000 
173582655160320000 -1531731599032320000 -3927965564436480000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1515395240755200000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
32934190464000000000 3367544979456000000 13638557166796800000 
-9563265898905600000 1451801664552960000 433496796364800000 
-11954082373632000000 -429458551603200000 3481025509785600000 
25015082751590400000 -3582808786206720000 12647059806044160000 
32362998300057600000 7891744702464000000 -37392654097612800000 
-32797921650278400000 8609778621480960000 -3028154056704000000 
607340307087360000 694330620641280000 -6126926396129280000 -15711862257745920000
) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
32934190464000000000 3367544979456000000 13638557166796800000 
-9563265898905600000 1451801664552960000 433496796364800000 
-11954082373632000000 -429458551603200000 3481025509785600000 
25015082751590400000 -3582808786206720000 12647059806044160000 
32362998300057600000 7891744702464000000 -37392654097612800000 
-32797921650278400000 8609778621480960000 -3028154056704000000 
607340307087360000 694330620641280000 -6126926396129280000 -15711862257745920000
) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -11954082373632000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
2371261713408000000000 242463238520832000000 981976116009369600000 
-688555144721203200000 104529719847813120000 31211769338265600000 
973221903669657600000 1255178649231360000000 250633836704563200000 
1801085958114508800000 -257962232606883840000 910588306035179520000 
2330135877604147200000 568205618577408000000 -2692271095028121600000 
-2361450358820044800000 619904060746629120000 -218027092082688000000 
43728502110289920000 49991804686172160000 323922571391139840000 
-1131254082557706240000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (2371261713408000000000 
242463238520832000000 981976116009369600000 -688555144721203200000 
104529719847813120000 31211769338265600000 973221903669657600000 
1255178649231360000000 250633836704563200000 1801085958114508800000 
-257962232606883840000 910588306035179520000 2330135877604147200000 
568205618577408000000 -2692271095028121600000 -2361450358820044800000 
619904060746629120000 -218027092082688000000 43728502110289920000 
49991804686172160000 323922571391139840000 -1131254082557706240000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 242463238520832000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
28455140560896000000000 8146764814299955200000 -8262661736654438400000 
1254356638173757440000 -4364338293374976000000 374541232059187200000 
11678662844035891200000 15062143790776320000000 3007606040454758400000 
21613031497374105600000 -3095546791282606080000 10927059672422154240000 
27961630531249766400000 6818467422928896000000 -32307253140337459200000 
-28337404305840537600000 7438848728959549440000 -2616325104992256000000 
3919227364615127040000 599901656234065920000 3887070856693678080000 
-13575048990692474880000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (28455140560896000000000
 8146764814299955200000 -8262661736654438400000 1254356638173757440000 
-4364338293374976000000 374541232059187200000 11678662844035891200000 
15062143790776320000000 3007606040454758400000 21613031497374105600000 
-3095546791282606080000 10927059672422154240000 27961630531249766400000 
6818467422928896000000 -32307253140337459200000 -28337404305840537600000 
7438848728959549440000 -2616325104992256000000 3919227364615127040000 
599901656234065920000 3887070856693678080000 -13575048990692474880000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 8146764814299955200000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (13658467469230080000000000 -14524284832926872371200000 
-6436713613231757721600000 -35235921645392206233600000 
-6256715377382365593600000 -4219473208333565952000000 10689339409260399820800000
 8574045213932126208000000 -3519402399777580646400000 4865292121424265216000000 
10374255118739570688000000 -1485862459815650918400000 14703382592164882022400000
 -22872254592706412544000000 -7871909902956468633600000 
-15507481507361980416000000 -13601954066803458048000000 
3570647389900583731200000 4609834615899684864000000 30166796570264705433600000 
287952794992351641600000 1865794011212965478400000 -6516023515532387942400000) 4
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
13658467469230080000000000 -14524284832926872371200000 
-6436713613231757721600000 -35235921645392206233600000 
-6256715377382365593600000 -4219473208333565952000000 10689339409260399820800000
 8574045213932126208000000 -3519402399777580646400000 4865292121424265216000000 
10374255118739570688000000 -1485862459815650918400000 14703382592164882022400000
 -22872254592706412544000000 -7871909902956468633600000 
-15507481507361980416000000 -13601954066803458048000000 
3570647389900583731200000 4609834615899684864000000 30166796570264705433600000 
287952794992351641600000 1865794011212965478400000 -6516023515532387942400000) 4
)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -35235921645392206233600000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
27316934938460160000000000 -29048569665853744742400000 
-12873427226463515443200000 -12513430754764731187200000 
-8438946416667131904000000 127086443754697418342400000 
17148090427864252416000000 -7038804799555161292800000 9730584242848530432000000 
20748510237479141376000000 137971961661937523097600000 
29406765184329764044800000 -45744509185412825088000000 
-15743819805912937267200000 -31014963014723960832000000 
-27203908133606916096000000 7141294779801167462400000 9219669231799369728000000 
60333593140529410867200000 575905589984703283200000 3731588022425930956800000 
-13032047031064775884800000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (27316934938460160000000000 
-29048569665853744742400000 -12873427226463515443200000 
-12513430754764731187200000 -8438946416667131904000000 
127086443754697418342400000 17148090427864252416000000 
-7038804799555161292800000 9730584242848530432000000 20748510237479141376000000 
137971961661937523097600000 29406765184329764044800000 
-45744509185412825088000000 -15743819805912937267200000 
-31014963014723960832000000 -27203908133606916096000000 
7141294779801167462400000 9219669231799369728000000 60333593140529410867200000 
575905589984703283200000 3731588022425930956800000 -13032047031064775884800000) 
4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -12513430754764731187200000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0
 0 0 1)) (10489703016368701440000000000 -11154650751687837981081600000 
-4943396054961989930188800000 -3240555424000178651136000000 
-10135878911359432261632000000 33597376034764660251033600000 
6584866724299872927744000000 -2702901043029181936435200000 
3736544349253835685888000000 7967427931191990288384000000 
32709475455465144346214400000 11292197830782629393203200000 
-17565891527198524833792000000 -6045626805470567910604800000 
-11909745797654000959488000000 -10446300723305055780864000000 
9049026295845072823910400000 36592373676833243136000000 
17086572419147634416025600000 221147746554126060748800000 
-3472335055256217137971200000 -17167360753560192653721600000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
10489703016368701440000000000 -11154650751687837981081600000 
-4943396054961989930188800000 -3240555424000178651136000000 
-10135878911359432261632000000 33597376034764660251033600000 
6584866724299872927744000000 -2702901043029181936435200000 
3736544349253835685888000000 7967427931191990288384000000 
32709475455465144346214400000 11292197830782629393203200000 
-17565891527198524833792000000 -6045626805470567910604800000 
-11909745797654000959488000000 -10446300723305055780864000000 
9049026295845072823910400000 36592373676833243136000000 
17086572419147634416025600000 221147746554126060748800000 
-3472335055256217137971200000 -17167360753560192653721600000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 6584866724299872927744000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
16521282250780704768000000000000 -17568574933908344820203520000000 
-7785848786565134140047360000000 -5103874792800281375539200000000 
-15964009285391105812070400000000 52915867254754339895377920000000 
-7022713166976908179537920000000 5885057350074791205273600000000 
12548698991627384704204800000000 62579999939181388863897600000000 
17785211583482641294295040000000 -27666279155337676613222400000000 
-9521862218616144459202560000000 -18757849631305051511193600000000 
-16452923639205462854860800000000 8562891566160899488088064000000 
3218369016204951363256320000000 30230124389204660160823296000000 
-3023144062018786393325568000000 -3809541297504974014513152000000 
-20401047528763031518445568000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (16521282250780704768000000000000
 -17568574933908344820203520000000 -7785848786565134140047360000000 
-5103874792800281375539200000000 -15964009285391105812070400000000 
52915867254754339895377920000000 -7022713166976908179537920000000 
5885057350074791205273600000000 12548698991627384704204800000000 
62579999939181388863897600000000 17785211583482641294295040000000 
-27666279155337676613222400000000 -9521862218616144459202560000000 
-18757849631305051511193600000000 -16452923639205462854860800000000 
8562891566160899488088064000000 3218369016204951363256320000000 
30230124389204660160823296000000 -3023144062018786393325568000000 
-3809541297504974014513152000000 -20401047528763031518445568000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -7022713166976908179537920000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (3469469272663948001280000000000000 
-3689400736120752412242739200000000 -1635028245178678169409945600000000 
-1071813706488059088863232000000000 -3352441949932132220534784000000000 
11112332123498411378029363200000000 1235862043515706153107456000000000 
2635226788241750787883008000000000 7242720926967488790606643200000000 
-7325878805457275710970265600000000 -5809918622620912088776704000000000 
-1999591065909390336432537600000000 -3939148422574060817350656000000000 
-3455113964233147199520768000000000 4832019317027813226058874880000000 
-1009593666671418176805273600000000 4578602403654797772529336320000000 
1162954317722143351363338240000000 -1684865531515134973669539840000000 
-7823667417196598341360680960000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (3469469272663948001280000000000000 
-3689400736120752412242739200000000 -1635028245178678169409945600000000 
-1071813706488059088863232000000000 -3352441949932132220534784000000000 
11112332123498411378029363200000000 1235862043515706153107456000000000 
2635226788241750787883008000000000 7242720926967488790606643200000000 
-7325878805457275710970265600000000 -5809918622620912088776704000000000 
-1999591065909390336432537600000000 -3939148422574060817350656000000000 
-3455113964233147199520768000000000 4832019317027813226058874880000000 
-1009593666671418176805273600000000 4578602403654797772529336320000000 
1162954317722143351363338240000000 -1684865531515134973669539840000000 
-7823667417196598341360680960000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3689400736120752412242739200000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (13877877090655792005120000000000000 
-6540112980714712677639782400000000 33204606625086771710184652800000000 
-4287254825952236355452928000000000 -13409767799728528882139136000000000 
44449328493993645512117452800000000 4943448174062824612429824000000000 
10540907152967003151532032000000000 28970883707869955162426572800000000 
-29303515221829102843881062400000000 -23239674490483648355106816000000000 
-7998364263637561345730150400000000 -15756593690296243269402624000000000 
-13820455856932588798083072000000000 19328077268111252904235499520000000 
-4038374666685672707221094400000000 18314409614619191090117345280000000 
4651817270888573405453352960000000 -6739462126060539894678159360000000 
-31294669668786393365442723840000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (13877877090655792005120000000000000 
-6540112980714712677639782400000000 33204606625086771710184652800000000 
-4287254825952236355452928000000000 -13409767799728528882139136000000000 
44449328493993645512117452800000000 4943448174062824612429824000000000 
10540907152967003151532032000000000 28970883707869955162426572800000000 
-29303515221829102843881062400000000 -23239674490483648355106816000000000 
-7998364263637561345730150400000000 -15756593690296243269402624000000000 
-13820455856932588798083072000000000 19328077268111252904235499520000000 
-4038374666685672707221094400000000 18314409614619191090117345280000000 
4651817270888573405453352960000000 -6739462126060539894678159360000000 
-31294669668786393365442723840000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -13409767799728528882139136000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (999207150527217024368640000000000000 
-470888134611459312790064332800000000 2390731677006247563133295001600000000 
-308682347468561017592610816000000000 4326772146744738902972144025600000000 
1408025618971495532624609280000000000 355928268532523372094947328000000000 
758945315013624226910306304000000000 2085903626966636771694713241600000000 
-2109853095971695404759436492800000000 -1673256563314822681567690752000000000 
-575882226981904416892570828800000000 -1134474745701329515396988928000000000 
-995072821699146393461981184000000000 1391621563304010209104955965440000000 
-290762976001368434919918796800000000 1318637492252581758488448860160000000 
334930843503977285192641413120000000 372983866106266976040077230080000000 
-2253216216152620322311876116480000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (999207150527217024368640000000000000 
-470888134611459312790064332800000000 2390731677006247563133295001600000000 
-308682347468561017592610816000000000 4326772146744738902972144025600000000 
1408025618971495532624609280000000000 355928268532523372094947328000000000 
758945315013624226910306304000000000 2085903626966636771694713241600000000 
-2109853095971695404759436492800000000 -1673256563314822681567690752000000000 
-575882226981904416892570828800000000 -1134474745701329515396988928000000000 
-995072821699146393461981184000000000 1391621563304010209104955965440000000 
-290762976001368434919918796800000000 1318637492252581758488448860160000000 
334930843503977285192641413120000000 372983866106266976040077230080000000 
-2253216216152620322311876116480000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -470888134611459312790064332800000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (11990485806326604292423680000000000000 
35752102143246860449450505011200000000 8475986423006267630221157990400000000 
-3704188169622732211111329792000000000 51921265760936866835665728307200000000 
16896307427657946391495311360000000000 4271139222390280465139367936000000000 
9107343780163490722923675648000000000 25030843523599641260336558899200000000 
-25318237151660344857113237913600000000 -20079078759777872178812289024000000000 
-6910586723782853002710849945600000000 -13613696948415954184763867136000000000 
-11940873860389756721543774208000000000 16699458759648122509259471585280000000 
-3489155712016421219039025561600000000 15823649907030981101861386321920000000 
-2573263762512702956749203701760000000 4475806393275203712480926760960000000 
-27038594593831443867742513397760000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (11990485806326604292423680000000000000 
35752102143246860449450505011200000000 8475986423006267630221157990400000000 
-3704188169622732211111329792000000000 51921265760936866835665728307200000000 
16896307427657946391495311360000000000 4271139222390280465139367936000000000 
9107343780163490722923675648000000000 25030843523599641260336558899200000000 
-25318237151660344857113237913600000000 -20079078759777872178812289024000000000 
-6910586723782853002710849945600000000 -13613696948415954184763867136000000000 
-11940873860389756721543774208000000000 16699458759648122509259471585280000000 
-3489155712016421219039025561600000000 15823649907030981101861386321920000000 
-2573263762512702956749203701760000000 4475806393275203712480926760960000000 
-27038594593831443867742513397760000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 35752102143246860449450505011200000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (23980971612653208584847360000000000000 
16951972846012535260442315980800000000 -7408376339245464422222659584000000000 
-3413774907866847677020058419200000000 33792614855315892782990622720000000000 
8542278444780560930278735872000000000 18214687560326981445847351296000000000 
-92946721525788159277128902246400000000 -50636474303320689714226475827200000000 
-40158157519555744357624578048000000000 -13821173447565706005421699891200000000 
-27227393896831908369527734272000000000 -23881747720779513443087548416000000000 
33398917519296245018518943170560000000 -6978311424032842438078051123200000000 
31647299814061962203722772643840000000 -5146527525025405913498407403520000000 
8951612786550407424961853521920000000 -54077189187662887735485026795520000000) 4
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
23980971612653208584847360000000000000 16951972846012535260442315980800000000 
-7408376339245464422222659584000000000 -3413774907866847677020058419200000000 
33792614855315892782990622720000000000 8542278444780560930278735872000000000 
18214687560326981445847351296000000000 -92946721525788159277128902246400000000 
-50636474303320689714226475827200000000 -40158157519555744357624578048000000000 
-13821173447565706005421699891200000000 -27227393896831908369527734272000000000 
-23881747720779513443087548416000000000 33398917519296245018518943170560000000 
-6978311424032842438078051123200000000 31647299814061962203722772643840000000 
-5146527525025405913498407403520000000 8951612786550407424961853521920000000 
-54077189187662887735485026795520000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 16951972846012535260442315980800000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (9208693099258832096581386240000000000000 
-2844816514270258338133501280256000000000 
13731098005270153560958275944448000000000 
19285757443284360833461711483699200000000 
12976364104441302828668399124480000000000 
3280234922795735397227034574848000000000 
6994440023165560875205382897664000000000 
-8229345055362346040500946573721600000000 
-19444406132475144850262966717644800000000 
-15420732487509405833327837970432000000000 
-5307330603865231106081932758220800000000 
-10455319256383452813898649960448000000000 
-9170591124779333162145618591744000000000 
4281390013019440315848346923171840000000 
2066880810054898376701876843315200000000 
20391221931761885622804510261903360000000 
-1976266569609755870783388442951680000000 
10082592665672270273278739616890880000000 
-4288323041738364617276319156142080000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (9208693099258832096581386240000000000000 
-2844816514270258338133501280256000000000 
13731098005270153560958275944448000000000 
19285757443284360833461711483699200000000 
12976364104441302828668399124480000000000 
3280234922795735397227034574848000000000 
6994440023165560875205382897664000000000 
-8229345055362346040500946573721600000000 
-19444406132475144850262966717644800000000 
-15420732487509405833327837970432000000000 
-5307330603865231106081932758220800000000 
-10455319256383452813898649960448000000000 
-9170591124779333162145618591744000000000 
4281390013019440315848346923171840000000 
2066880810054898376701876843315200000000 
20391221931761885622804510261903360000000 
-1976266569609755870783388442951680000000 
10082592665672270273278739616890880000000 
-4288323041738364617276319156142080000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 12976364104441302828668399124480000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (14503691631332660552115683328000000000000000 
-4480586009975656882560264516403200000000000 
21626479358300491858509284612505600000000000 
30375067973172868312702195586826240000000000 
-5450072923865347188040727632281600000000000 
5166370003403283250632579455385600000000000 
11016243036485758378448478063820800000000000 
8839073233265693738373919675514880000000000 
-30624939658648353139164172580290560000000000 
-24287653667827314187491344803430400000000000 
-8359045701087738992079044094197760000000000 
-16467127828803938181890373687705600000000000 
-14443681021527449730379349281996800000000000 
-4468389315731667146508350439555072000000000 
9483992045968290301066287607971840000000000 
38656262051163386481565976821235712000000000 
-9756518268609312544762057149382656000000000 
19150127202753033993238451475972096000000000 
6326066226538908979087543646552064000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (14503691631332660552115683328000000000000000 
-4480586009975656882560264516403200000000000 
21626479358300491858509284612505600000000000 
30375067973172868312702195586826240000000000 
-5450072923865347188040727632281600000000000 
5166370003403283250632579455385600000000000 
11016243036485758378448478063820800000000000 
8839073233265693738373919675514880000000000 
-30624939658648353139164172580290560000000000 
-24287653667827314187491344803430400000000000 
-8359045701087738992079044094197760000000000 
-16467127828803938181890373687705600000000000 
-14443681021527449730379349281996800000000000 
-4468389315731667146508350439555072000000000 
9483992045968290301066287607971840000000000 
38656262051163386481565976821235712000000000 
-9756518268609312544762057149382656000000000 
19150127202753033993238451475972096000000000 
6326066226538908979087543646552064000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -5450072923865347188040727632281600000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
3045775242579858715944293498880000000000000000 
-940923062094887945337655548444672000000000000 
4541560665243103290286949768626176000000000000 
6378764274366302345667461073233510400000000000 
1084937700714689482632841685630976000000000000 
2313411037662009259474180393402368000000000000 
-2721855877061095952895688079258419200000000000 
-15015102183404075980388622262704537600000000000 
-5100407270243735979373182408720384000000000000 
-1755399597228425188336599259781529600000000000 
-3458096844048827018196978474418176000000000000 
-3033173014520764443379663349219328000000000000 
1416069746806179884466840744839086080000000000 
683620827925657638094145765926502400000000000 
6744396653930243669742591769124536320000000000 
-653650167898426754261605727506268160000000000 
3334817524171103392886943128286658560000000000 
-1418362846054964097164142560893992960000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
3045775242579858715944293498880000000000000000 
-940923062094887945337655548444672000000000000 
4541560665243103290286949768626176000000000000 
6378764274366302345667461073233510400000000000 
1084937700714689482632841685630976000000000000 
2313411037662009259474180393402368000000000000 
-2721855877061095952895688079258419200000000000 
-15015102183404075980388622262704537600000000000 
-5100407270243735979373182408720384000000000000 
-1755399597228425188336599259781529600000000000 
-3458096844048827018196978474418176000000000000 
-3033173014520764443379663349219328000000000000 
1416069746806179884466840744839086080000000000 
683620827925657638094145765926502400000000000 
6744396653930243669742591769124536320000000000 
-653650167898426754261605727506268160000000000 
3334817524171103392886943128286658560000000000 
-1418362846054964097164142560893992960000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -940923062094887945337655548444672000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
12183100970319434863777173995520000000000000000 
18166242660972413161147799074504704000000000000 
25515057097465209382669844292934041600000000000 
8468307558853991508038899936002048000000000000 
4339750802858757930531366742523904000000000000 
9253644150648037037896721573609472000000000000 
-10887423508244383811582752317033676800000000000 
-60060408733616303921554489050818150400000000000 
-20401629080974943917492729634881536000000000000 
-7021598388913700753346397039126118400000000000 
-13832387376195308072787913897672704000000000000 
-12132692058083057773518653396877312000000000000 
5664278987224719537867362979356344320000000000 
2734483311702630552376583063706009600000000000 
26977586615720974678970367076498145280000000000 
-2614600671593707017046422910025072640000000000 
13339270096684413571547772513146634240000000000 
-5673451384219856388656570243575971840000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
12183100970319434863777173995520000000000000000 
18166242660972413161147799074504704000000000000 
25515057097465209382669844292934041600000000000 
8468307558853991508038899936002048000000000000 
4339750802858757930531366742523904000000000000 
9253644150648037037896721573609472000000000000 
-10887423508244383811582752317033676800000000000 
-60060408733616303921554489050818150400000000000 
-20401629080974943917492729634881536000000000000 
-7021598388913700753346397039126118400000000000 
-13832387376195308072787913897672704000000000000 
-12132692058083057773518653396877312000000000000 
5664278987224719537867362979356344320000000000 
2734483311702630552376583063706009600000000000 
26977586615720974678970367076498145280000000000 
-2614600671593707017046422910025072640000000000 
13339270096684413571547772513146634240000000000 
-5673451384219856388656570243575971840000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 18166242660972413161147799074504704000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
877183269862999310191956527677440000000000000000 
311119727495812370015813666832855859200000000000 
-1297737335164615993341718107430846464000000000000 
312462057805830570998258405461721088000000000000 
666262378846658666728563953299881984000000000000 
-783894492593595634433958166826424729600000000000 
-4324349428820373882351923211658906828800000000000 
-1468917293830195962059476533711470592000000000000 
-505555084001786454240940586817080524800000000000 
-995931891086062181240729800632434688000000000000 
-873553828181980159693343044575166464000000000000 
407828087080179806726450134513656791040000000000 
196882798442589399771113980586832691200000000000 
1942386236331910176885866429507866460160000000000 
-188251248354746905227342449521805230080000000000 
-202212083340956665162019519821743390720000000000 
-408488499663829659983273057537469972480000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
877183269862999310191956527677440000000000000000 
311119727495812370015813666832855859200000000000 
-1297737335164615993341718107430846464000000000000 
312462057805830570998258405461721088000000000000 
666262378846658666728563953299881984000000000000 
-783894492593595634433958166826424729600000000000 
-4324349428820373882351923211658906828800000000000 
-1468917293830195962059476533711470592000000000000 
-505555084001786454240940586817080524800000000000 
-995931891086062181240729800632434688000000000000 
-873553828181980159693343044575166464000000000000 
407828087080179806726450134513656791040000000000 
196882798442589399771113980586832691200000000000 
1942386236331910176885866429507866460160000000000 
-188251248354746905227342449521805230080000000000 
-202212083340956665162019519821743390720000000000 
-408488499663829659983273057537469972480000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 311119727495812370015813666832855859200000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
10526199238355991722303478332129280000000000000000 
-20239643934412577470337822291662995456000000000000 
-5600155094924622660284646002991405465600000000000 
3749544693669966851979100865540653056000000000000 
7995148546159904000742767439598583808000000000000 
-9406733911123147613207498001917096755200000000000 
-51892193145844486588223078539906881945600000000000 
-17627007525962351544713718404537647104000000000000 
-6066661008021437450891287041804966297600000000000 
-11951182693032746174888757607589216256000000000000 
-10482645938183761916320116534901997568000000000000 
4893937044962157680717401614163881492480000000000 
2362593581311072797253367767041992294400000000000 
23308634835982922122630397154094397521920000000000 
-2259014980256962862728109394261662760960000000000 
1929131184849893198277157097799061340160000000000 
-4901861995965955919799276690449639669760000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
10526199238355991722303478332129280000000000000000 
-20239643934412577470337822291662995456000000000000 
-5600155094924622660284646002991405465600000000000 
3749544693669966851979100865540653056000000000000 
7995148546159904000742767439598583808000000000000 
-9406733911123147613207498001917096755200000000000 
-51892193145844486588223078539906881945600000000000 
-17627007525962351544713718404537647104000000000000 
-6066661008021437450891287041804966297600000000000 
-11951182693032746174888757607589216256000000000000 
-10482645938183761916320116534901997568000000000000 
4893937044962157680717401614163881492480000000000 
2362593581311072797253367767041992294400000000000 
23308634835982922122630397154094397521920000000000 
-2259014980256962862728109394261662760960000000000 
1929131184849893198277157097799061340160000000000 
-4901861995965955919799276690449639669760000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -20239643934412577470337822291662995456000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
16578763800410686962627978373103616000000000000000000 
-319593822052998152406432092213005516800000000000000 
5905532892530197791867083863226528563200000000000000 
12592358960201848801169858717367769497600000000000000 
-48818207719832087640969350803013259755520000000000000 
-81730204204705066376451348700353339064320000000000000 
-27762536853390703682924106487146794188800000000000000 
-9554991087633763985153777090842821918720000000000000 
-18823112741526575225449793231953015603200000000000000 
-16510167352639425018204183542470646169600000000000000 
25195003205147865281501786002304941424640000000000000 
-5993944197953097530088100466907099955200000000000000 
26510319323729163298092613082700526387200000000000000 
6804749100514523156016192717369334824960000000000000 
-2062008655333387735238608788465553244160000000000000 
-28121993729534258663784385657454481899520000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (16578763800410686962627978373103616000000000000000000 
-319593822052998152406432092213005516800000000000000 
5905532892530197791867083863226528563200000000000000 
12592358960201848801169858717367769497600000000000000 
-48818207719832087640969350803013259755520000000000000 
-81730204204705066376451348700353339064320000000000000 
-27762536853390703682924106487146794188800000000000000 
-9554991087633763985153777090842821918720000000000000 
-18823112741526575225449793231953015603200000000000000 
-16510167352639425018204183542470646169600000000000000 
25195003205147865281501786002304941424640000000000000 
-5993944197953097530088100466907099955200000000000000 
26510319323729163298092613082700526387200000000000000 
6804749100514523156016192717369334824960000000000000 
-2062008655333387735238608788465553244160000000000000 
-28121993729534258663784385657454481899520000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -319593822052998152406432092213005516800000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (3481540398086244262151875458351759360000000000000000000 
1240161907431341536292087611277570998272000000000000000 
2644395381642388248245670330647231594496000000000000000 
-10520282431689256852624966626091709182771200000000000000 
-17666703152721536029094913772309684892467200000000000000 
-5830132739212047773414062362300826779648000000000000000 
-2006548128403090436882293189076992602931200000000000000 
-3952853675720580797344456578710133276672000000000000000 
-3467135144054279253822878543918835695616000000000000000 
5429015204207946910954953724320056082432000000000000000 
-1335430798862870037896044800181612314624000000000000000 
5486629414825768758193027860129433151078400000000000000 
1510813329553617389779447086254089725542400000000000000 
-473290639198689191603318289196604876390400000000000000 
-6066693969516905388207562762540795979366400000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
3481540398086244262151875458351759360000000000000000000 
1240161907431341536292087611277570998272000000000000000 
2644395381642388248245670330647231594496000000000000000 
-10520282431689256852624966626091709182771200000000000000 
-17666703152721536029094913772309684892467200000000000000 
-5830132739212047773414062362300826779648000000000000000 
-2006548128403090436882293189076992602931200000000000000 
-3952853675720580797344456578710133276672000000000000000 
-3467135144054279253822878543918835695616000000000000000 
5429015204207946910954953724320056082432000000000000000 
-1335430798862870037896044800181612314624000000000000000 
5486629414825768758193027860129433151078400000000000000 
1510813329553617389779447086254089725542400000000000000 
-473290639198689191603318289196604876390400000000000000 
-6066693969516905388207562762540795979366400000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2644395381642388248245670330647231594496000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
13926161592344977048607501833407037440000000000000000000 
4960647629725366145168350445110283993088000000000000000 
-42081129726757027410499866504366836731084800000000000000 
-70666812610886144116379655089238739569868800000000000000 
-47120089391629685327867282425028391469056000000000000000 
-8026192513612361747529172756307970411724800000000000000 
-15811414702882323189377826314840533106688000000000000000 
-13868540576217117015291514175675342782464000000000000000 
21716060816831787643819814897280224329728000000000000000 
-5341723195451480151584179200726449258496000000000000000 
21946517659303075032772111440517732604313600000000000000 
6043253318214469559117788345016358902169600000000000000 
-1893162556794756766413273156786419505561600000000000000 
-24266775878067621552830251050163183917465600000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
13926161592344977048607501833407037440000000000000000000 
4960647629725366145168350445110283993088000000000000000 
-42081129726757027410499866504366836731084800000000000000 
-70666812610886144116379655089238739569868800000000000000 
-47120089391629685327867282425028391469056000000000000000 
-8026192513612361747529172756307970411724800000000000000 
-15811414702882323189377826314840533106688000000000000000 
-13868540576217117015291514175675342782464000000000000000 
21716060816831787643819814897280224329728000000000000000 
-5341723195451480151584179200726449258496000000000000000 
21946517659303075032772111440517732604313600000000000000 
6043253318214469559117788345016358902169600000000000000 
-1893162556794756766413273156786419505561600000000000000 
-24266775878067621552830251050163183917465600000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -42081129726757027410499866504366836731084800000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1002683634648838347499740132005306695680000000000000000000 
357166629340226362452121232047940447502336000000000000000 
-1553195610936212073897346380058374963619430400000000000000 
1025872185112150534496041648356473670991872000000000000000 
-577885860980090045822100438454173869644185600000000000000 
-1138421858607527269635203494668518383681536000000000000000 
-998534921487632425100989020648624680337408000000000000000 
1563556378811888710355026672604176151740416000000000000000 
-384604070072506570914060902452304346611712000000000000000 
1580149271469821402359592023717276747510579200000000000000 
435114238911441808256480760841177840956211200000000000000 
-136307704089222487181755667288622204400435200000000000000 
945984439291581002468213380667728308731904000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1002683634648838347499740132005306695680000000000000000000 
357166629340226362452121232047940447502336000000000000000 
-1553195610936212073897346380058374963619430400000000000000 
1025872185112150534496041648356473670991872000000000000000 
-577885860980090045822100438454173869644185600000000000000 
-1138421858607527269635203494668518383681536000000000000000 
-998534921487632425100989020648624680337408000000000000000 
1563556378811888710355026672604176151740416000000000000000 
-384604070072506570914060902452304346611712000000000000000 
1580149271469821402359592023717276747510579200000000000000 
435114238911441808256480760841177840956211200000000000000 
-136307704089222487181755667288622204400435200000000000000 
945984439291581002468213380667728308731904000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1553195610936212073897346380058374963619430400000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
12032203615786060169996881584063680348160000000000000000000 
4285999552082716349425454784575285370028032000000000000000 
35608400385388987522412695481153308506193920000000000000000 
21022890665090736780287029579600662909419520000000000000000 
-13661062303290327235622441936022220604178432000000000000000 
-11982419057851589101211868247783496164048896000000000000000 
18762676545742664524260320071250113820884992000000000000000 
-4615248840870078850968730829427652159340544000000000000000 
18961791257637856828315104284607320970126950400000000000000 
5221370866937301699077769130094134091474534400000000000000 
-1635692449070669846181068007463466452805222400000000000000 
-10392925281607997004944288752804509785889177600000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (12032203615786060169996881584063680348160000000000000000000 
4285999552082716349425454784575285370028032000000000000000 
35608400385388987522412695481153308506193920000000000000000 
21022890665090736780287029579600662909419520000000000000000 
-13661062303290327235622441936022220604178432000000000000000 
-11982419057851589101211868247783496164048896000000000000000 
18762676545742664524260320071250113820884992000000000000000 
-4615248840870078850968730829427652159340544000000000000000 
18961791257637856828315104284607320970126950400000000000000 
5221370866937301699077769130094134091474534400000000000000 
-1635692449070669846181068007463466452805222400000000000000 
-10392925281607997004944288752804509785889177600000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 18762676545742664524260320071250113820884992000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (48128814463144240679987526336254721392640000000000000000000 
17143998208330865397701819138301141480112128000000000000000 
142433601541555950089650781924613234024775680000000000000000 
84091562660362947121148118318402651637678080000000000000000 
-54644249213161308942489767744088882416713728000000000000000 
-47929676231406356404847472991133984656195584000000000000000 
-18460995363480315403874923317710608637362176000000000000000 
-93016923881132553405082463502821740507457126400000000000000 
20885483467749206796311076520376536365898137600000000000000 
-6542769796282679384724272029853865811220889600000000000000 
-41571701126431988019777155011218039143556710400000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
48128814463144240679987526336254721392640000000000000000000 
17143998208330865397701819138301141480112128000000000000000 
142433601541555950089650781924613234024775680000000000000000 
84091562660362947121148118318402651637678080000000000000000 
-54644249213161308942489767744088882416713728000000000000000 
-47929676231406356404847472991133984656195584000000000000000 
-18460995363480315403874923317710608637362176000000000000000 
-93016923881132553405082463502821740507457126400000000000000 
20885483467749206796311076520376536365898137600000000000000 
-6542769796282679384724272029853865811220889600000000000000 
-41571701126431988019777155011218039143556710400000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -18460995363480315403874923317710608637362176000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)
) (577545773557730888159850316035056656711680000000000000000000 
205727978499970384772421829659613697761345536000000000000000 
1709203218498671401075809383095358808297308160000000000000000 
1009098751924355365453777419820831819652136960000000000000000 
-655730990557935707309877212929066589000564736000000000000000 
-575156114776876276858169675893607815874347008000000000000000 
-839288156121385909802865712268201756529052876800000000000000 
582923718155636158825481537963309391863296819200000000000000 
-78513237555392152616691264358246389734650675200000000000000 
-498860413517183856237325860134616469722680524800000000000000 
-258453935088724415654248926447948520923070464000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2)) (7090453125 1505044800 -836136000 3249076320 
-2292788400 -2101814820 1749825216 -476637120 2142739984 508412928 -896941080 
254427600 208868310 -389325888 -736670760 -10928913660 208376700 -23686125435 
520344608 5273014320 -12293554140) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -2101814820
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (3403417500000 
722421504000 -401345280000 1559556633600 -1100538432000 3563868110400 
1587182186880 9578697880080 1858231987200 704448284400 -1189407199680 
-246542656500 721107576000 -1236364189200 -5245878556800 -2340186190020 
-2005755185700 3125048085600 2531046873600 -5900905987200 -1513306670400 
-7297501055040) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (3403417500000 722421504000 
-401345280000 1559556633600 -1100538432000 3563868110400 1587182186880 
9578697880080 1858231987200 704448284400 -1189407199680 -246542656500 
721107576000 -1236364189200 -5245878556800 -2340186190020 -2005755185700 
3125048085600 2531046873600 -5900905987200 -1513306670400 -7297501055040) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 9578697880080
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (6806835000000 
1444843008000 -802690560000 3119113267200 -2201076864000 7127736220800 
3174364373760 3716463974400 1408896568800 -31114908039600 -493085313000 
1442215152000 -2472728378400 -10491757113600 -38314791520320 -4680372380040 
-4011510371400 6250096171200 5062093747200 -11801811974400 -3026613340800 
-14595002110080) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (6806835000000 1444843008000 
-802690560000 3119113267200 -2201076864000 7127736220800 3174364373760 
3716463974400 1408896568800 -31114908039600 -493085313000 1442215152000 
-2472728378400 -10491757113600 -38314791520320 -4680372380040 -4011510371400 
6250096171200 5062093747200 -11801811974400 -3026613340800 -14595002110080) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3716463974400
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
2613824640000000 554819715072000 -308233175040000 1197739494604800 
-845213515776000 2737050708787200 1218955919523840 541016282419200 
3010335819264000 -7432620958310400 -189344760192000 553810618368000 
-949527697305600 -4028834731622400 -8692208305274880 -1797262993935360 
-1540419982617600 2400036929740800 1943843998924800 -4531895798169600 
-1873097843097600 -121609610035200 -3798279318712320 1456853877964800 
3612402983116800) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (2613824640000000 
554819715072000 -308233175040000 1197739494604800 -845213515776000 
2737050708787200 1218955919523840 541016282419200 3010335819264000 
-7432620958310400 -189344760192000 553810618368000 -949527697305600 
-4028834731622400 -8692208305274880 -1797262993935360 -1540419982617600 
2400036929740800 1943843998924800 -4531895798169600 -1873097843097600 
-121609610035200 -3798279318712320 1456853877964800 3612402983116800) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -189344760192000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (4116773808000000000 
873841051238400000 -485467250688000000 1886439704002560000 -1331211287347200000 
4310854866339840000 1919855573250048000 852100644810240000 4741278915340800000 
-11706378009338880000 951776523210240000 -1495506123256320000 
-6345414702305280000 -14008327277930496000 -2830689215448192000 
-2426161472622720000 3780058164341760000 3061554298306560000 
-7137735882117120000 -2786535230072832000 -282420620697600000 
-6077719686108672000 96944517218304000 2246829978226176000 5498675180135424000) 
4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (4116773808000000000 
873841051238400000 -485467250688000000 1886439704002560000 -1331211287347200000 
4310854866339840000 1919855573250048000 852100644810240000 4741278915340800000 
-11706378009338880000 951776523210240000 -1495506123256320000 
-6345414702305280000 -14008327277930496000 -2830689215448192000 
-2426161472622720000 3780058164341760000 3061554298306560000 
-7137735882117120000 -2786535230072832000 -282420620697600000 
-6077719686108672000 96944517218304000 2246829978226176000 5498675180135424000) 
4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 951776523210240000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0)
 (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (864522499680000000000 
183506620760064000000 -101948122644480000000 396152337840537600000 
-279554370342912000000 905279521931366400000 403169670382510080000 
178941135410150400000 995668572221568000000 -2458339381961164800000 
-314056285883827200000 -1332537087484108800000 -2142256448868802560000 
904603288812007680000 -509493909250771200000 793812214511769600000 
642926402644377600000 -1498924535244595200000 -996339856342118400000 
169118035223961600000 -1036473450233840640000 -223296441325977600000 
591758137351987200000 1634417155526400000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 2 0 0 0 0 0 0) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0
 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (864522499680000000000 183506620760064000000 
-101948122644480000000 396152337840537600000 -279554370342912000000 
905279521931366400000 403169670382510080000 178941135410150400000 
995668572221568000000 -2458339381961164800000 -314056285883827200000 
-1332537087484108800000 -2142256448868802560000 904603288812007680000 
-509493909250771200000 793812214511769600000 642926402644377600000 
-1498924535244595200000 -996339856342118400000 169118035223961600000 
-1036473450233840640000 -223296441325977600000 591758137351987200000 
1634417155526400000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 183506620760064000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 1 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (3458089998720000000000 -407792490577920000000 
-66950235478425600000 -1118217481371648000000 3621118087725465600000 
1612678681530040320000 715764541640601600000 3982674288886272000000 
-9833357527844659200000 -1256225143535308800000 -5330148349936435200000 
-8569025795475210240000 3618413155248030720000 -2037975637003084800000 
3175248858047078400000 2571705610577510400000 -5995698140978380800000 
-3985359425368473600000 676472140895846400000 -4145893800935362560000 
-893185765303910400000 2367032549407948800000 6537668622105600000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0
 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (3458089998720000000000 -407792490577920000000 -66950235478425600000 
-1118217481371648000000 3621118087725465600000 1612678681530040320000 
715764541640601600000 3982674288886272000000 -9833357527844659200000 
-1256225143535308800000 -5330148349936435200000 -8569025795475210240000 
3618413155248030720000 -2037975637003084800000 3175248858047078400000 
2571705610577510400000 -5995698140978380800000 -3985359425368473600000 
676472140895846400000 -4145893800935362560000 -893185765303910400000 
2367032549407948800000 6537668622105600000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3982674288886272000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0)
 (2 0 0 0 1 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (248982479907840000000000 -29361059321610240000000 
-4820416954446643200000 -80511658658758656000000 260720502316233523200000 
116112865070162903040000 51535046998123315200000 -1042546382271262310400000 
-418180800333058560000000 -90448210334542233600000 -383770681195423334400000 
-616969857274215137280000 260525747177858211840000 -146734245864222105600000 
228617917779389644800000 185162803961580748800000 -431690266150443417600000 
-286945878626530099200000 48705994144500940800000 -298504353667346104320000 
-64309375101881548800000 -84464810931349094400000 470712140791603200000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 1 0 0 0 0) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1
 1 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
248982479907840000000000 -29361059321610240000000 -4820416954446643200000 
-80511658658758656000000 260720502316233523200000 116112865070162903040000 
51535046998123315200000 -1042546382271262310400000 -418180800333058560000000 
-90448210334542233600000 -383770681195423334400000 -616969857274215137280000 
260525747177858211840000 -146734245864222105600000 228617917779389644800000 
185162803961580748800000 -431690266150443417600000 -286945878626530099200000 
48705994144500940800000 -298504353667346104320000 -64309375101881548800000 
-84464810931349094400000 470712140791603200000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -29361059321610240000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 1 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
2987789758894080000000000 382570886370793881600000 -966139903905103872000000 
3657145095583786598400000 1393354380841954836480000 618420563977479782400000 
-12510556587255147724800000 -5018169603996702720000000 
-1085378524014506803200000 -4605248174345080012800000 -7403638287290581647360000
 3126308966134298542080000 -1760810950370665267200000 2743415013352675737600000 
2221953647538968985600000 -5180283193805321011200000 -3854405374020904550400000 
584471929734011289600000 -3582052244008153251840000 -771712501222578585600000 
-1013577731176189132800000 5648545689499238400000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (2987789758894080000000000 
382570886370793881600000 -966139903905103872000000 3657145095583786598400000 
1393354380841954836480000 618420563977479782400000 -12510556587255147724800000 
-5018169603996702720000000 -1085378524014506803200000 -4605248174345080012800000
 -7403638287290581647360000 3126308966134298542080000 -1760810950370665267200000
 2743415013352675737600000 2221953647538968985600000 -5180283193805321011200000 
-3854405374020904550400000 584471929734011289600000 -3582052244008153251840000 
-771712501222578585600000 -1013577731176189132800000 5648545689499238400000000) 
4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -5018169603996702720000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
4705768870258176000000000000 602549146034000363520000000 
-1521670348650538598400000000 5760003525544463892480000000 
2194533149826078867456000000 974012388264530657280000000 
-19704126624926857666560000000 2107631233678615142400000000 
-1709471175322848215040000000 -7253265874593501020160000000 
-20091255237197126664192000000 4923936621661520203776000000 
-2773277246833797795840000000 4320878646030464286720000000 
3499576994873876152320000000 -8158946030243380592640000000 
-1734989926229773516800000000 -1488178120587349524480000000 
-8170889764727179542528000000 1353855647820750520320000000 
-2860963666809666969600000000 3838144500132624138240000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
4705768870258176000000000000 602549146034000363520000000 
-1521670348650538598400000000 5760003525544463892480000000 
2194533149826078867456000000 974012388264530657280000000 
-19704126624926857666560000000 2107631233678615142400000000 
-1709471175322848215040000000 -7253265874593501020160000000 
-20091255237197126664192000000 4923936621661520203776000000 
-2773277246833797795840000000 4320878646030464286720000000 
3499576994873876152320000000 -8158946030243380592640000000 
-1734989926229773516800000000 -1488178120587349524480000000 
-8170889764727179542528000000 1353855647820750520320000000 
-2860963666809666969600000000 3838144500132624138240000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2107631233678615142400000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (988211462754216960000000000000 
126535320667140076339200000000 -319550773216613105664000000000 
1209600740364337417420800000000 460851961463476562165760000000 
204542601535551438028800000000 -4137866591234640109977600000000 
-358988946817798125158400000000 -1523185833664635214233600000000 
-2448753363521359879864320000000 4353545883592738092072960000000 
-582388221835097537126400000000 907384515666397500211200000000 
734911168923513991987200000000 -1713378666351109924454400000000 
-1274844577457414180044800000000 193314090759524234035200000000 
-1184763779705696688046080000000 -255243909779367867187200000000 
-335240834586524555673600000000 1868256486801873100800000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 1 0 0 0) (2 0 0 0 1 1 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (988211462754216960000000000000 
126535320667140076339200000000 -319550773216613105664000000000 
1209600740364337417420800000000 460851961463476562165760000000 
204542601535551438028800000000 -4137866591234640109977600000000 
-358988946817798125158400000000 -1523185833664635214233600000000 
-2448753363521359879864320000000 4353545883592738092072960000000 
-582388221835097537126400000000 907384515666397500211200000000 
734911168923513991987200000000 -1713378666351109924454400000000 
-1274844577457414180044800000000 193314090759524234035200000000 
-1184763779705696688046080000000 -255243909779367867187200000000 
-335240834586524555673600000000 1868256486801873100800000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 126535320667140076339200000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (3952845851016867840000000000000 
-1278203092866452422656000000000 -1138817886004260687052800000000 
4838402961457349669683200000000 1843407845853906248663040000000 
818170406142205752115200000000 -16551466364938560439910400000000 
-1435955787271192500633600000000 -6092743334658540856934400000000 
-9795013454085439519457280000000 17414183534370952368291840000000 
-2329552887340390148505600000000 3629538062665590000844800000000 
2939644675694055967948800000000 -6853514665404439697817600000000 
-5099378309829656720179200000000 773256363038096936140800000000 
-4739055118822786752184320000000 -1020975639117471468748800000000 
-1340963338346098222694400000000 7473025947207492403200000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (3952845851016867840000000000000 
-1278203092866452422656000000000 -1138817886004260687052800000000 
4838402961457349669683200000000 1843407845853906248663040000000 
818170406142205752115200000000 -16551466364938560439910400000000 
-1435955787271192500633600000000 -6092743334658540856934400000000 
-9795013454085439519457280000000 17414183534370952368291840000000 
-2329552887340390148505600000000 3629538062665590000844800000000 
2939644675694055967948800000000 -6853514665404439697817600000000 
-5099378309829656720179200000000 773256363038096936140800000000 
-4739055118822786752184320000000 -1020975639117471468748800000000 
-1340963338346098222694400000000 7473025947207492403200000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -9795013454085439519457280000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0)
 (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (284604901273214484480000000000000 
-92030622686384574431232000000000 -81994887792306769467801600000000 
348365013224929176217190400000000 132725364901481249903738880000000 
58908269242238814152294400000000 -1191705578275576351673548800000000 
-103388816683525860045619200000000 -438677520095414941699276800000000 
2076602344617885490151424000000000 860748604790463058850611200000000 
261326740511922480060825600000000 211654416649972029692313600000000 
-493453055909119658242867200000000 -367155238307735283852902400000000 
55674458138742979402137600000000 -341211968555240646157271040000000 
-73510246016457945749913600000000 -96549360360919072033996800000000 
1164938729260407582275665920000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 1 0 0 0) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0
 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (284604901273214484480000000000000 
-92030622686384574431232000000000 -81994887792306769467801600000000 
348365013224929176217190400000000 132725364901481249903738880000000 
58908269242238814152294400000000 -1191705578275576351673548800000000 
-103388816683525860045619200000000 -438677520095414941699276800000000 
2076602344617885490151424000000000 860748604790463058850611200000000 
261326740511922480060825600000000 211654416649972029692313600000000 
-493453055909119658242867200000000 -367155238307735283852902400000000 
55674458138742979402137600000000 -341211968555240646157271040000000 
-73510246016457945749913600000000 -96549360360919072033996800000000 
1164938729260407582275665920000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -92030622686384574431232000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 1 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0)
 (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (3415258815278573813760000000000000 
396520686788087382854860800000000 4180380158699150114606284800000000 
1592704378817774998844866560000000 1656551208354922339762176000000000 
706899230906865769827532800000000 -14300466939306916220082585600000000 
-1240665800202310320547430400000000 -5264130241144979300391321600000000 
24919228135414625881817088000000000 10328983257485556706207334400000000 
3135920886143069760729907200000000 2539852999799664356307763200000000 
-5921436670909435898914406400000000 -4405862859692823406234828800000000 
668093497664915752825651200000000 -5382972340272271795924500480000000 
-882122952197495348998963200000000 -1158592324331028864407961600000000 
13979264751124890987307991040000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1
 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (3415258815278573813760000000000000 
396520686788087382854860800000000 4180380158699150114606284800000000 
1592704378817774998844866560000000 1656551208354922339762176000000000 
706899230906865769827532800000000 -14300466939306916220082585600000000 
-1240665800202310320547430400000000 -5264130241144979300391321600000000 
24919228135414625881817088000000000 10328983257485556706207334400000000 
3135920886143069760729907200000000 2539852999799664356307763200000000 
-5921436670909435898914406400000000 -4405862859692823406234828800000000 
668093497664915752825651200000000 -5382972340272271795924500480000000 
-882122952197495348998963200000000 -1158592324331028864407961600000000 
13979264751124890987307991040000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 396520686788087382854860800000000
Arg4: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 480
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1639324231333715430604800000000000000 1492691666098230806831117107200000000 
421904228447624500658936217600000000 -817901573843576750367729254400000000 
-304527887453251110032533094400000000 125190459969728382775590912000000000 
-6616795222311553258738207948800000000 65425913320034418171052032000000000 
-171296936692453749393299865600000000 -428980895646112253063725056000000000 
-2526782515749590064187834368000000000 12421590022359989874766695628800000000 
3191412303952137928361115648000000000 962801725822569945404905881600000000 
1219129439903838891027726336000000000 -2842289602036529231478915072000000000 
-2114814172652555234992717824000000000 606179773366582477011812352000000000 
-1207106898802451068771683532800000000 -423419017054797767519502336000000000 
-556124315678893854915821568000000000 6710047080539947673907835699200000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1639324231333715430604800000000000000 1492691666098230806831117107200000000 
421904228447624500658936217600000000 -817901573843576750367729254400000000 
-304527887453251110032533094400000000 125190459969728382775590912000000000 
-6616795222311553258738207948800000000 65425913320034418171052032000000000 
-171296936692453749393299865600000000 -428980895646112253063725056000000000 
-2526782515749590064187834368000000000 12421590022359989874766695628800000000 
3191412303952137928361115648000000000 962801725822569945404905881600000000 
1219129439903838891027726336000000000 -2842289602036529231478915072000000000 
-2114814172652555234992717824000000000 606179773366582477011812352000000000 
-1207106898802451068771683532800000000 -423419017054797767519502336000000000 
-556124315678893854915821568000000000 6710047080539947673907835699200000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -817901573843576750367729254400000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
3278648462667430861209600000000000000 2985383332196461613662234214400000000 
843808456895249001317872435200000000 -609055774906502220065066188800000000 
250380919939456765551181824000000000 -10779885723092376266373228134400000000 
130851826640068836342104064000000000 -342593873384907498786599731200000000 
-857961791292224506127450112000000000 -5053565031499180128375668736000000000 
3271606295374307001470917017600000000 24843180044719979749533391257600000000 
6382824607904275856722231296000000000 1925603451645139890809811763200000000 
2438258879807677782055452672000000000 -5684579204073058462957830144000000000 
-4229628345305110469985435648000000000 1212359546733164954023624704000000000 
-2414213797604902137543367065600000000 -846838034109595535039004672000000000 
-1112248631357787709831643136000000000 13420094161079895347815671398400000000) 4
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 0 0 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
3278648462667430861209600000000000000 2985383332196461613662234214400000000 
843808456895249001317872435200000000 -609055774906502220065066188800000000 
250380919939456765551181824000000000 -10779885723092376266373228134400000000 
130851826640068836342104064000000000 -342593873384907498786599731200000000 
-857961791292224506127450112000000000 -5053565031499180128375668736000000000 
3271606295374307001470917017600000000 24843180044719979749533391257600000000 
6382824607904275856722231296000000000 1925603451645139890809811763200000000 
2438258879807677782055452672000000000 -5684579204073058462957830144000000000 
-4229628345305110469985435648000000000 1212359546733164954023624704000000000 
-2414213797604902137543367065600000000 -846838034109595535039004672000000000 
-1112248631357787709831643136000000000 13420094161079895347815671398400000000) 4
)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -609055774906502220065066188800000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) 
(1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0
 0 0 1)) (1259001009664293450704486400000000000000 
1146387199563441259646297938329600000000 324022447447775616506063015116800000000
 96146273256751397971653820416000000000 -493335177674266798252703612928000000000
 -4879478884178872683666375023001600000000 
50247101429786433155367960576000000000 -131556047379804479534054296780800000000 
-329457327856214210352940843008000000000 
-1940568972095685169296256794624000000000 
269626462075200292059424908902400000000 9539781137172472223820822242918400000000
 2451004649435241928981336817664000000000 
739431725431733718070967717068800000000 936291409846148268309293826048000000000 
-2182878414364054449775806775296000000000 
-1317213174044285301561613929676800000000 
295010448971714720726853353472000000000 
-1223059204884842499768275120947200000000 
-325185805098084685454977794048000000000 
-665853338204739350840856910233600000000 
4561313944645559655657973481472000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
1259001009664293450704486400000000000000 
1146387199563441259646297938329600000000 324022447447775616506063015116800000000
 96146273256751397971653820416000000000 -493335177674266798252703612928000000000
 -4879478884178872683666375023001600000000 
50247101429786433155367960576000000000 -131556047379804479534054296780800000000 
-329457327856214210352940843008000000000 
-1940568972095685169296256794624000000000 
269626462075200292059424908902400000000 9539781137172472223820822242918400000000
 2451004649435241928981336817664000000000 
739431725431733718070967717068800000000 936291409846148268309293826048000000000 
-2182878414364054449775806775296000000000 
-1317213174044285301561613929676800000000 
295010448971714720726853353472000000000 
-1223059204884842499768275120947200000000 
-325185805098084685454977794048000000000 
-665853338204739350840856910233600000000 
4561313944645559655657973481472000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 50247101429786433155367960576000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0
 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1982926590221262184859566080000000000000000 
1805559839312419983942919252869120000000000 
510335354730246595997049248808960000000000 
151430380379383451805354767155200000000000 
-777002904836970207248008190361600000000000 
-7685179242581724476774540661227520000000000 
-228304557223702357191390060871680000000000 
-518895291373537381305881827737600000000000 
-3056396131050704141641604451532800000000000 
509076808170481667694612405288960000000000 
15025155291046643752517795032596480000000000 
3860332322860506038145605487820800000000000 
1164604967554980605961774154383360000000000 
1474658970507683522587137776025600000000000 
-3438033502623385758396895671091200000000000 
-2118024244755084828205779857178624000000000 
488760065816748173059370652794880000000000 
-1900993708573014574824727863361536000000000 
-537894158961534033367138421440512000000000 
-1036056738112158296419196907552768000000000 
7234718541057981182281919137579008000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1982926590221262184859566080000000000000000 
1805559839312419983942919252869120000000000 
510335354730246595997049248808960000000000 
151430380379383451805354767155200000000000 
-777002904836970207248008190361600000000000 
-7685179242581724476774540661227520000000000 
-228304557223702357191390060871680000000000 
-518895291373537381305881827737600000000000 
-3056396131050704141641604451532800000000000 
509076808170481667694612405288960000000000 
15025155291046643752517795032596480000000000 
3860332322860506038145605487820800000000000 
1164604967554980605961774154383360000000000 
1474658970507683522587137776025600000000000 
-3438033502623385758396895671091200000000000 
-2118024244755084828205779857178624000000000 
488760065816748173059370652794880000000000 
-1900993708573014574824727863361536000000000 
-537894158961534033367138421440512000000000 
-1036056738112158296419196907552768000000000 
7234718541057981182281919137579008000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -228304557223702357191390060871680000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
416414583946465058820508876800000000000000000 
379167566255608196628013043102515200000000000 
107170424493351785159380342249881600000000000 
31800379879670524879124501102592000000000000 
-163170610015763743522081719975936000000000000 
-1613887640942162140122653538857779200000000000 
-108968011188442850074235183824896000000000000 
-641843187520647869744736934821888000000000000 
-84869698352108829824899046021529600000000000 
2795702933492463975452297610972364800000000000 
810669787800706268010577152442368000000000000 
244567043186545927251972572420505600000000000 
309678383806613539743298932965376000000000000 
-721987035550911009263348090929152000000000000 
-346157522677928395616533263710945280000000000 
47846520087828550616534222477721600000000000 
-456741427220706054725423146645585920000000000 
-54511806732654343566103212919357440000000000 
-246338289213739739254146498255912960000000000 
1404225396781430060254742428212264960000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (416414583946465058820508876800000000000000000 
379167566255608196628013043102515200000000000 
107170424493351785159380342249881600000000000 
31800379879670524879124501102592000000000000 
-163170610015763743522081719975936000000000000 
-1613887640942162140122653538857779200000000000 
-108968011188442850074235183824896000000000000 
-641843187520647869744736934821888000000000000 
-84869698352108829824899046021529600000000000 
2795702933492463975452297610972364800000000000 
810669787800706268010577152442368000000000000 
244567043186545927251972572420505600000000000 
309678383806613539743298932965376000000000000 
-721987035550911009263348090929152000000000000 
-346157522677928395616533263710945280000000000 
47846520087828550616534222477721600000000000 
-456741427220706054725423146645585920000000000 
-54511806732654343566103212919357440000000000 
-246338289213739739254146498255912960000000000 
1404225396781430060254742428212264960000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 379167566255608196628013043102515200000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1665658335785860235282035507200000000000000000 
428681697973407140637521368999526400000000000 
-3412508096300473769652117387922636800000000000 
127201519518682099516498004410368000000000000 
-652682440063054974088326879903744000000000000 
-6455550563768648560490614155431116800000000000 
-435872044753771400296940735299584000000000000 
-2567372750082591478978947739287552000000000000 
-339478793408435319299596184086118400000000000 
11182811733969855901809190443889459200000000000 
3242679151202825072042308609769472000000000000 
978268172746183709007890289682022400000000000 
1238713535226454158973195731861504000000000000 
-2887948142203644037053392363716608000000000000 
-1384630090711713582466133054843781120000000000 
191386080351314202466136889910886400000000000 
-1826965708882824218901692586582343680000000000 
-218047226930617374264412851677429760000000000 
-985353156854958957016585993023651840000000000 
5616901587125720241018969712849059840000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (1665658335785860235282035507200000000000000000 
428681697973407140637521368999526400000000000 
-3412508096300473769652117387922636800000000000 
127201519518682099516498004410368000000000000 
-652682440063054974088326879903744000000000000 
-6455550563768648560490614155431116800000000000 
-435872044753771400296940735299584000000000000 
-2567372750082591478978947739287552000000000000 
-339478793408435319299596184086118400000000000 
11182811733969855901809190443889459200000000000 
3242679151202825072042308609769472000000000000 
978268172746183709007890289682022400000000000 
1238713535226454158973195731861504000000000000 
-2887948142203644037053392363716608000000000000 
-1384630090711713582466133054843781120000000000 
191386080351314202466136889910886400000000000 
-1826965708882824218901692586582343680000000000 
-218047226930617374264412851677429760000000000 
-985353156854958957016585993023651840000000000 
5616901587125720241018969712849059840000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -652682440063054974088326879903744000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (119927400176581936940306556518400000000000000000 
30865082254085314125901538567965900800000000000 
-245700582933634111414952451930429849600000000000 
9158509405345111165187856317546496000000000000 
-409974315626046078531904761279125913600000000000 
68531656206620772279274322389893120000000000000 
-31382787222271540821379732941570048000000000000 
-184850838005946586486484237228703744000000000000 
-24442473125407342989570925254200524800000000000 
805162444845829624930261711960041062400000000000 
233472898886603405187046219903401984000000000000 
70435308437725227048568100857105612800000000000 
89187374536304699446070092694028288000000000000 
-207932266238662370667844250187595776000000000000 
-99693366531243377937561579948752240640000000000 
13779797785294622577561856073583820800000000000 
-131541531039563343760921866233928744960000000000 
-15699400339004450947037725320774942720000000000 
-29173751129521526563541271183863316480000000000 
404416914273051857353365819325132308480000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (119927400176581936940306556518400000000000000000 
30865082254085314125901538567965900800000000000 
-245700582933634111414952451930429849600000000000 
9158509405345111165187856317546496000000000000 
-409974315626046078531904761279125913600000000000 
68531656206620772279274322389893120000000000000 
-31382787222271540821379732941570048000000000000 
-184850838005946586486484237228703744000000000000 
-24442473125407342989570925254200524800000000000 
805162444845829624930261711960041062400000000000 
233472898886603405187046219903401984000000000000 
70435308437725227048568100857105612800000000000 
89187374536304699446070092694028288000000000000 
-207932266238662370667844250187595776000000000000 
-99693366531243377937561579948752240640000000000 
13779797785294622577561856073583820800000000000 
-131541531039563343760921866233928744960000000000 
-15699400339004450947037725320774942720000000000 
-29173751129521526563541271183863316480000000000 
404416914273051857353365819325132308480000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 30865082254085314125901538567965900800000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (1439128802118983243283678678220800000000000000000 
-3411383229014889048867952501684646707200000000000 
-555571480573535654266227694223386214400000000000 
109902112864141333982254275810557952000000000000 
-4919691787512552942382857135349510963200000000000 
822379874479449267351291868678717440000000000000 
-376593446667258489856556795298840576000000000000 
-2218210056071359037837810846744444928000000000000 
-293309677504888115874851103050406297600000000000 
9661949338149955499163140543520492748800000000000 
2801674786639240862244554638840823808000000000000 
845223701252702724582817210285267353600000000000 
1070248494435656393352841112328339456000000000000 
-2495187194863948448014131002251149312000000000000 
-1196320398374920535250738959385026887680000000000 
165357573423535470930742272883005849600000000000 
-1578498372474760125131062394807144939520000000000 
243718347489140986398168836102223298560000000000 
-350085013554258318762495254206359797760000000000 
4853002971276622288240389831901587701760000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (1439128802118983243283678678220800000000000000000 
-3411383229014889048867952501684646707200000000000 
-555571480573535654266227694223386214400000000000 
109902112864141333982254275810557952000000000000 
-4919691787512552942382857135349510963200000000000 
822379874479449267351291868678717440000000000000 
-376593446667258489856556795298840576000000000000 
-2218210056071359037837810846744444928000000000000 
-293309677504888115874851103050406297600000000000 
9661949338149955499163140543520492748800000000000 
2801674786639240862244554638840823808000000000000 
845223701252702724582817210285267353600000000000 
1070248494435656393352841112328339456000000000000 
-2495187194863948448014131002251149312000000000000 
-1196320398374920535250738959385026887680000000000 
165357573423535470930742272883005849600000000000 
-1578498372474760125131062394807144939520000000000 
243718347489140986398168836102223298560000000000 
-350085013554258318762495254206359797760000000000 
4853002971276622288240389831901587701760000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3411383229014889048867952501684646707200000000000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (2878257604237966486567357356441600000000000000000 
-1111142961147071308532455388446772428800000000000 
219804225728282667964508551621115904000000000000 
394766112019561261838143234354918195200000000000 
1644759748958898534702583737357434880000000000000 
-753186893334516979713113590597681152000000000000 
-4436420112142718075675621693488889856000000000000 
13058913561049779963722107800637774233600000000000 
19323898676299910998326281087040985497600000000000 
5603349573278481724489109277681647616000000000000 
1690447402505405449165634420570534707200000000000 
2140496988871312786705682224656678912000000000000 
-4990374389727896896028262004502298624000000000000 
-2392640796749841070501477918770053775360000000000 
330715146847070941861484545766011699200000000000 
-3156996744949520250262124789614289879040000000000 
487436694978281972796337672204446597120000000000 
-700170027108516637524990508412719595520000000000 
9706005942553244576480779663803175403520000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
2878257604237966486567357356441600000000000000000 
-1111142961147071308532455388446772428800000000000 
219804225728282667964508551621115904000000000000 
394766112019561261838143234354918195200000000000 
1644759748958898534702583737357434880000000000000 
-753186893334516979713113590597681152000000000000 
-4436420112142718075675621693488889856000000000000 
13058913561049779963722107800637774233600000000000 
19323898676299910998326281087040985497600000000000 
5603349573278481724489109277681647616000000000000 
1690447402505405449165634420570534707200000000000 
2140496988871312786705682224656678912000000000000 
-4990374389727896896028262004502298624000000000000 
-2392640796749841070501477918770053775360000000000 
330715146847070941861484545766011699200000000000 
-3156996744949520250262124789614289879040000000000 
487436694978281972796337672204446597120000000000 
-700170027108516637524990508412719595520000000000 
9706005942553244576480779663803175403520000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1111142961147071308532455388446772428800000000000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1
 . #3#) (1 0 0 0 0 0 0 0 1)) (
1105250920027379130841865224873574400000000000000000 
84404822679660544498371283822508507136000000000000 
-900025798529127759911288864641885667328000000000000 
-1198448510778180115321086294970539914035200000000000 
631587743600217037325792155145254993920000000000000 
-289223767040454520209835618789509562368000000000000 
-1703585323062803741059438730299733704704000000000000 
3214571210384859986246711666161133971046400000000000 
7420377091699165823357291937423738431078400000000000 
2151686236138936982203817962629752684544000000000000 
649131802562075692479603617499085327564800000000000 
821950843726584110094981974268164702208000000000000 
-1916303765655512408074852609728882671616000000000000 
-358758013533815031572210005030527345623040000000000 
-184125412731904724714277443190947787571200000000000 
-1752302229178092432047429237997018713948160000000000 
187175690871660277553793666126507493294080000000000 
-704433331179322341754318867501619116769280000000000 
2647075323705492605475072753330156554158080000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 
0 0 0 0 0 0 0 1)) (1105250920027379130841865224873574400000000000000000 
84404822679660544498371283822508507136000000000000 
-900025798529127759911288864641885667328000000000000 
-1198448510778180115321086294970539914035200000000000 
631587743600217037325792155145254993920000000000000 
-289223767040454520209835618789509562368000000000000 
-1703585323062803741059438730299733704704000000000000 
3214571210384859986246711666161133971046400000000000 
7420377091699165823357291937423738431078400000000000 
2151686236138936982203817962629752684544000000000000 
649131802562075692479603617499085327564800000000000 
821950843726584110094981974268164702208000000000000 
-1916303765655512408074852609728882671616000000000000 
-358758013533815031572210005030527345623040000000000 
-184125412731904724714277443190947787571200000000000 
-1752302229178092432047429237997018713948160000000000 
187175690871660277553793666126507493294080000000000 
-704433331179322341754318867501619116769280000000000 
2647075323705492605475072753330156554158080000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 631587743600217037325792155145254993920000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0
 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (1740770199043122131075937729175879680000000000000000000 
132937595720465357584934772020450898739200000000000000 
-1417540632683376221860279961810969926041600000000000000 
-1887556404475633681630710914578600364605440000000000000 
-265266852312091155676832705161007097446400000000000000 
-455527433088715869330491099593477560729600000000000000 
-2683146883823915892168616000222080584908800000000000000 
6124017065604519101045901694847814394183680000000000000 
11687093919426186171787734801442388028948480000000000000 
3388905821918825746971013291141860478156800000000000000 
1022382589035269215655375697561059390914560000000000000 
1294572578869369973399596609472359405977600000000000000 
-3018178430907432042717892860322990207795200000000000000 
-1110735681786346194975715179968580884103168000000000000 
13164591875354236491393261443979631656960000000000000 
-2441555788180986193662501803652095957532672000000000000 
-28571211600446185963580559285121254948864000000000000 
-950322385220177994856952593218445850443776000000000000 
4805784080385169627247638078881413606670336000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 
0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (1740770199043122131075937729175879680000000000000000000 
132937595720465357584934772020450898739200000000000000 
-1417540632683376221860279961810969926041600000000000000 
-1887556404475633681630710914578600364605440000000000000 
-265266852312091155676832705161007097446400000000000000 
-455527433088715869330491099593477560729600000000000000 
-2683146883823915892168616000222080584908800000000000000 
6124017065604519101045901694847814394183680000000000000 
11687093919426186171787734801442388028948480000000000000 
3388905821918825746971013291141860478156800000000000000 
1022382589035269215655375697561059390914560000000000000 
1294572578869369973399596609472359405977600000000000000 
-3018178430907432042717892860322990207795200000000000000 
-1110735681786346194975715179968580884103168000000000000 
13164591875354236491393261443979631656960000000000000 
-2441555788180986193662501803652095957532672000000000000 
-28571211600446185963580559285121254948864000000000000 
-950322385220177994856952593218445850443776000000000000 
4805784080385169627247638078881413606670336000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -265266852312091155676832705161007097446400000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
365561741799055647525946923126934732800000000000000000000 
27916895101297725092836302124294688735232000000000000000 
-297683532863509006590658791980303684468736000000000000000 
-396386844939883073142449292061506076567142400000000000000 
-95660760948630332559403130914630287753216000000000000000 
-563460845603022337355409360046636922830848000000000000000 
1063219427834792440451099883582795060923596800000000000000 
2036494430687955525884412797674315307601100800000000000000 
711670222602953406863912791139790700412928000000000000000 
214700343697406535287628896487822472092057600000000000000 
271860241562567694413915287989195475255296000000000000000 
-633817470490560728970757500667827943636992000000000000000 
-118659212976309321692508459163846919564820480000000000000 
-60899480261077487699247264335405980739174400000000000000 
-579573962300654071899687220467513939638353920000000000000 
61908359755801636800917255071342353407016960000000000000 
-232991324287560864535240965426160522871439360000000000000 
875520163315591679260880313163949280287784960000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
365561741799055647525946923126934732800000000000000000000 
27916895101297725092836302124294688735232000000000000000 
-297683532863509006590658791980303684468736000000000000000 
-396386844939883073142449292061506076567142400000000000000 
-95660760948630332559403130914630287753216000000000000000 
-563460845603022337355409360046636922830848000000000000000 
1063219427834792440451099883582795060923596800000000000000 
2036494430687955525884412797674315307601100800000000000000 
711670222602953406863912791139790700412928000000000000000 
214700343697406535287628896487822472092057600000000000000 
271860241562567694413915287989195475255296000000000000000 
-633817470490560728970757500667827943636992000000000000000 
-118659212976309321692508459163846919564820480000000000000 
-60899480261077487699247264335405980739174400000000000000 
-579573962300654071899687220467513939638353920000000000000 
61908359755801636800917255071342353407016960000000000000 
-232991324287560864535240965426160522871439360000000000000 
875520163315591679260880313163949280287784960000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 27916895101297725092836302124294688735232000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0
 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1462246967196222590103787692507738931200000000000000000000 
-1190734131454036026362635167921214737874944000000000000000 
-1585547379759532292569797168246024306268569600000000000000 
-251252055911679525835526719118652198617088000000000000000 
-382643043794521330237612523658521151012864000000000000000 
-2253843382412089349421637440186547691323392000000000000000 
4252877711339169761804399534331180243694387200000000000000 
8145977722751822103537651190697261230404403200000000000000 
2846680890411813627455651164559162801651712000000000000000 
858801374789626141150515585951289888368230400000000000000 
1087440966250270777655661151956781901021184000000000000000 
-2535269881962242915883030002671311774547968000000000000000 
-474636851905237286770033836655387678259281920000000000000 
-243597921044309950796989057341623922956697600000000000000 
-2318295849202616287598748881870055758553415680000000000000 
247633439023206547203669020285369413628067840000000000000 
-931965297150243458140963861704642091485757440000000000000 
3502080653262366717043521252655797121151139840000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 
0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1462246967196222590103787692507738931200000000000000000000 
-1190734131454036026362635167921214737874944000000000000000 
-1585547379759532292569797168246024306268569600000000000000 
-251252055911679525835526719118652198617088000000000000000 
-382643043794521330237612523658521151012864000000000000000 
-2253843382412089349421637440186547691323392000000000000000 
4252877711339169761804399534331180243694387200000000000000 
8145977722751822103537651190697261230404403200000000000000 
2846680890411813627455651164559162801651712000000000000000 
858801374789626141150515585951289888368230400000000000000 
1087440966250270777655661151956781901021184000000000000000 
-2535269881962242915883030002671311774547968000000000000000 
-474636851905237286770033836655387678259281920000000000000 
-243597921044309950796989057341623922956697600000000000000 
-2318295849202616287598748881870055758553415680000000000000 
247633439023206547203669020285369413628067840000000000000 
-931965297150243458140963861704642091485757440000000000000 
3502080653262366717043521252655797121151139840000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1190734131454036026362635167921214737874944000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
105281781638128026487472713860557203046400000000000000000000 
-14137744300547298850564042008331712069841715200000000000000 
106936935777032856907918768855184589176438784000000000000000 
-27550299153205535777108101703413522872926208000000000000000 
-162276723533670433158357895693431433775284224000000000000000 
306207195216420222849916766471844977545995878400000000000000 
586510396038131191454710885730202808589117030400000000000000 
204961024109650581176806883848259721718923264000000000000000 
61833698984853082162837122188492871962512588800000000000000 
78295749570019495991207602940888296873525248000000000000000 
-182539431501281489943578160192334447767453696000000000000000 
-34173853337177084647442436239187912834668298240000000000000 
-17539050315190316457383212128596922452882227200000000000000 
-166917301142588372707109919494644014615845928960000000000000 
17829607609670871398664169460546597781220884480000000000000 
9105483018240776701059252704223512637021880320000000000000 
252149807034890403627133530191217392722882068480000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
105281781638128026487472713860557203046400000000000000000000 
-14137744300547298850564042008331712069841715200000000000000 
106936935777032856907918768855184589176438784000000000000000 
-27550299153205535777108101703413522872926208000000000000000 
-162276723533670433158357895693431433775284224000000000000000 
306207195216420222849916766471844977545995878400000000000000 
586510396038131191454710885730202808589117030400000000000000 
204961024109650581176806883848259721718923264000000000000000 
61833698984853082162837122188492871962512588800000000000000 
78295749570019495991207602940888296873525248000000000000000 
-182539431501281489943578160192334447767453696000000000000000 
-34173853337177084647442436239187912834668298240000000000000 
-17539050315190316457383212128596922452882227200000000000000 
-166917301142588372707109919494644014615845928960000000000000 
17829607609670871398664169460546597781220884480000000000000 
9105483018240776701059252704223512637021880320000000000000 
252149807034890403627133530191217392722882068480000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -14137744300547298850564042008331712069841715200000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1263381379657536317849672566326686436556800000000000000000000 
1495309393832603765653485856387190751164891136000000000000000 
254479397409851379310152756149970817257150873600000000000000 
-330603589838466429325297220440962274475114496000000000000000 
-1947320682404045197900294748321177205303410688000000000000000 
3674486342597042674199001197662139730551950540800000000000000 
7038124752457574297456530628762433703069404364800000000000000 
2459532289315806974121682606179116660627079168000000000000000 
742004387818236985954045466261914463550151065600000000000000 
939548994840233951894491235290659562482302976000000000000000 
-2190473178015377879322937922308013373209444352000000000000000 
-410086240046125015769309234870254954016019578880000000000000 
-210468603782283797488598545543163069434586726400000000000000 
-2003007613711060472485319033935728175390151147520000000000000 
213955291316050456783970033526559173374650613760000000000000 
-88662623988772863495185555665961817333521448960000000000000 
3025797684418684843525602362294608712674584821760000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1263381379657536317849672566326686436556800000000000000000000 
1495309393832603765653485856387190751164891136000000000000000 
254479397409851379310152756149970817257150873600000000000000 
-330603589838466429325297220440962274475114496000000000000000 
-1947320682404045197900294748321177205303410688000000000000000 
3674486342597042674199001197662139730551950540800000000000000 
7038124752457574297456530628762433703069404364800000000000000 
2459532289315806974121682606179116660627079168000000000000000 
742004387818236985954045466261914463550151065600000000000000 
939548994840233951894491235290659562482302976000000000000000 
-2190473178015377879322937922308013373209444352000000000000000 
-410086240046125015769309234870254954016019578880000000000000 
-210468603782283797488598545543163069434586726400000000000000 
-2003007613711060472485319033935728175390151147520000000000000 
213955291316050456783970033526559173374650613760000000000000 
-88662623988772863495185555665961817333521448960000000000000 
3025797684418684843525602362294608712674584821760000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1495309393832603765653485856387190751164891136000000000000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 1 0 0 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
1989825672960619700613234291964531137576960000000000000000000000 
-227224894489177659160973468746416078309241651200000000000000000 
-520700653995584626187343122194515582298305331200000000000000000 
-3067030074786371186692964228605854098352871833600000000000000000 
8299435771229116538161283125048350537576339210240000000000000000 
11085046485120679518494035740300833082334311874560000000000000000 
3873763355672395984241650104732108740487649689600000000000000000 
1168656910813723252877621609362515280091487928320000000000000000 
1479789666873368474233823695582788810909627187200000000000000000 
-3449995255374220159933627227635121062804874854400000000000000000 
-1937833144344016553361273824839184361581696778240000000000000000 
386260458082552826469130501835369726199673651200000000000000000 
-2401101057103287946275020606829627737652382924800000000000000000 
-428618825819513658579831955665910966531349544960000000000000000 
237174334463498888939761185635682206993256284160000000000000000 
6272903221942693224331537463852296999636681359360000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0
 0 0 0 1) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
1989825672960619700613234291964531137576960000000000000000000000 
-227224894489177659160973468746416078309241651200000000000000000 
-520700653995584626187343122194515582298305331200000000000000000 
-3067030074786371186692964228605854098352871833600000000000000000 
8299435771229116538161283125048350537576339210240000000000000000 
11085046485120679518494035740300833082334311874560000000000000000 
3873763355672395984241650104732108740487649689600000000000000000 
1168656910813723252877621609362515280091487928320000000000000000 
1479789666873368474233823695582788810909627187200000000000000000 
-3449995255374220159933627227635121062804874854400000000000000000 
-1937833144344016553361273824839184361581696778240000000000000000 
386260458082552826469130501835369726199673651200000000000000000 
-2401101057103287946275020606829627737652382924800000000000000000 
-428618825819513658579831955665910966531349544960000000000000000 
237174334463498888939761185635682206993256284160000000000000000 
6272903221942693224331537463852296999636681359360000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -227224894489177659160973468746416078309241651200000000000000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (417863391321730137128779201312551538891161600000000000000000000000 
-109347137339072771499342055660848272282644119552000000000000000000 
-644076315705137949205522488007229360654103085056000000000000000000 
1552012600587205239318651742513164107111268247142400000000000000000 
1969980553054887885705214292187569623953149893017600000000000000000 
813490304691203156690746521993742835502406434816000000000000000000 
245417951270881883104300537966128208819212464947200000000000000000 
310755830043407379589102976072385650291021709312000000000000000000 
-724499003628586233586061717803375423189023719424000000000000000000 
-308783805892918727448326964717776970102563930112000000000000000000 
26580721519933455359883772886287783707713470464000000000000000000 
-561491895402963238826319641558318676640929310310400000000000000000 
-31840380432868387556555502690758786924417541734400000000000000000 
21176273531698381623067191921444837601619371622400000000000000000 
1202788329785420036892492239160788666455845293260800000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 1 0 0 0 0 0 1) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0
 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
417863391321730137128779201312551538891161600000000000000000000000 
-109347137339072771499342055660848272282644119552000000000000000000 
-644076315705137949205522488007229360654103085056000000000000000000 
1552012600587205239318651742513164107111268247142400000000000000000 
1969980553054887885705214292187569623953149893017600000000000000000 
813490304691203156690746521993742835502406434816000000000000000000 
245417951270881883104300537966128208819212464947200000000000000000 
310755830043407379589102976072385650291021709312000000000000000000 
-724499003628586233586061717803375423189023719424000000000000000000 
-308783805892918727448326964717776970102563930112000000000000000000 
26580721519933455359883772886287783707713470464000000000000000000 
-561491895402963238826319641558318676640929310310400000000000000000 
-31840380432868387556555502690758786924417541734400000000000000000 
21176273531698381623067191921444837601619371622400000000000000000 
1202788329785420036892492239160788666455845293260800000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -644076315705137949205522488007229360654103085056000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1)
 (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1671453565286920548515116805250206155564646400000000000000000000000 
-437388549356291085997368222643393089130576478208000000000000000000 
6208050402348820957274606970052656428445072988569600000000000000000 
7879922212219551542820857168750278495812599572070400000000000000000 
9050648060111054169612688480040035587896553504768000000000000000000 
981671805083527532417202151864512835276849859788800000000000000000 
1243023320173629518356411904289542601164086837248000000000000000000 
-2897996014514344934344246871213501692756094877696000000000000000000 
-1235135223571674909793307858871107880410255720448000000000000000000 
106322886079733821439535091545151134830853881856000000000000000000 
-2245967581611852955305278566233274706563717241241600000000000000000 
-127361521731473550226222010763035147697670166937600000000000000000 
84705094126793526492268767685779350406477486489600000000000000000 
4811153319141680147569968956643154665823381173043200000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0
 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
1671453565286920548515116805250206155564646400000000000000000000000 
-437388549356291085997368222643393089130576478208000000000000000000 
6208050402348820957274606970052656428445072988569600000000000000000 
7879922212219551542820857168750278495812599572070400000000000000000 
9050648060111054169612688480040035587896553504768000000000000000000 
981671805083527532417202151864512835276849859788800000000000000000 
1243023320173629518356411904289542601164086837248000000000000000000 
-2897996014514344934344246871213501692756094877696000000000000000000 
-1235135223571674909793307858871107880410255720448000000000000000000 
106322886079733821439535091545151134830853881856000000000000000000 
-2245967581611852955305278566233274706563717241241600000000000000000 
-127361521731473550226222010763035147697670166937600000000000000000 
84705094126793526492268767685779350406477486489600000000000000000 
4811153319141680147569968956643154665823381173043200000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 6208050402348820957274606970052656428445072988569600000000000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
120344656700658279493088409978014843200654540800000000000000000000000 
-31491975553652958191810512030324302417401506430976000000000000000000 
45878165482506750672034730665596911709121038149222400000000000000000 
-198631918630300301720161292646362658180811456512000000000000000000 
70680369966013982334038554934244924139933189904793600000000000000000 
89497679052501325321661657108847067283814252281856000000000000000000 
-208655713045032835272785774727372121878438831194112000000000000000000 
-88929736097160593505118165838719767389538411872256000000000000000000 
7655247797740835143646526591250881707821479493632000000000000000000 
-161709665876053412781980056768795778872587641369395200000000000000000 
-9170029564666095616287984774938530634232252019507200000000000000000 
6098766777129133907443351273376113229266379027251200000000000000000 
-50912186772123570640537081205062875481201226809344000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
120344656700658279493088409978014843200654540800000000000000000000000 
-31491975553652958191810512030324302417401506430976000000000000000000 
45878165482506750672034730665596911709121038149222400000000000000000 
-198631918630300301720161292646362658180811456512000000000000000000 
70680369966013982334038554934244924139933189904793600000000000000000 
89497679052501325321661657108847067283814252281856000000000000000000 
-208655713045032835272785774727372121878438831194112000000000000000000 
-88929736097160593505118165838719767389538411872256000000000000000000 
7655247797740835143646526591250881707821479493632000000000000000000 
-161709665876053412781980056768795778872587641369395200000000000000000 
-9170029564666095616287984774938530634232252019507200000000000000000 
6098766777129133907443351273376113229266379027251200000000000000000 
-50912186772123570640537081205062875481201226809344000000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 45878165482506750672034730665596911709121038149222400000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (
1444135880407899353917060919736178118407854489600000000000000000000000 
-377903706643835498301726144363891629008818077171712000000000000000000 
-690556065261164863701162895495710027534985309716480000000000000000000 
22357460907046275911837507230194678915019592171520000000000000000000 
1073972148630015903859939885306164807405771027382272000000000000000000 
-2503868556540394023273429296728465462541265974329344000000000000000000 
-1067156833165927122061417990064637208674460942467072000000000000000000 
91862973572890021723758319095010580493857753923584000000000000000000 
-1940515990512640953383760681225549346471051696432742400000000000000000 
-110040354775993147395455817299262367610787024234086400000000000000000 
73185201325549606889320215280513358751196548327014400000000000000000 
31348075489611661722041254857602258153279812376985600000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (
1444135880407899353917060919736178118407854489600000000000000000000000 
-377903706643835498301726144363891629008818077171712000000000000000000 
-690556065261164863701162895495710027534985309716480000000000000000000 
22357460907046275911837507230194678915019592171520000000000000000000 
1073972148630015903859939885306164807405771027382272000000000000000000 
-2503868556540394023273429296728465462541265974329344000000000000000000 
-1067156833165927122061417990064637208674460942467072000000000000000000 
91862973572890021723758319095010580493857753923584000000000000000000 
-1940515990512640953383760681225549346471051696432742400000000000000000 
-110040354775993147395455817299262367610787024234086400000000000000000 
73185201325549606889320215280513358751196548327014400000000000000000 
31348075489611661722041254857602258153279812376985600000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1067156833165927122061417990064637208674460942467072000000000000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (5776543521631597415668243678944712473631417958400000000000000000000000 
-1511614826575341993206904577455566516035272308686848000000000000000000 
-2762224261044659454804651581982840110139941238865920000000000000000000 
89429843628185103647350028920778715660078368686080000000000000000000 
4295888594520063615439759541224659229623084109529088000000000000000000 
-10015474226161576093093717186913861850165063897317376000000000000000000 
367451894291560086895033276380042321975431015694336000000000000000000 
1842347536442780285017719185679537492185941696472678400000000000000000 
-440161419103972589581823269197049470443148096936345600000000000000000 
292740805302198427557280861122053435004786193308057600000000000000000 
125392301958446646888165019430409032613119249507942400000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
5776543521631597415668243678944712473631417958400000000000000000000000 
-1511614826575341993206904577455566516035272308686848000000000000000000 
-2762224261044659454804651581982840110139941238865920000000000000000000 
89429843628185103647350028920778715660078368686080000000000000000000 
4295888594520063615439759541224659229623084109529088000000000000000000 
-10015474226161576093093717186913861850165063897317376000000000000000000 
367451894291560086895033276380042321975431015694336000000000000000000 
1842347536442780285017719185679537492185941696472678400000000000000000 
-440161419103972589581823269197049470443148096936345600000000000000000 
292740805302198427557280861122053435004786193308057600000000000000000 
125392301958446646888165019430409032613119249507942400000000000000000) 4)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 367451894291560086895033276380042321975431015694336000000000000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)
) (69318522259579168988018924147336549683577015500800000000000000000000000 
-18139377918904103918482854929466798192423267704242176000000000000000000 
-33146691132535913457655818983794081321679294866391040000000000000000000 
1073158123538221243768200347049344587920940424232960000000000000000000 
51550663134240763385277114494695910755477009314349056000000000000000000 
-120185690713938913117124606242966342201980766767808512000000000000000000 
16596392022939962116787131082453815076599835122257100800000000000000000 
-11896071126495752639092478205205355440875535445734195200000000000000000 
3512889663626381130687370333464641220057434319696691200000000000000000 
1504707623501359762657980233164908391357430994095308800000000000000000 
5144326520081841216530465869320592507656034219720704000000000000000000) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0
 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (480 1296
 864 4068 768 540 -624 -165 432 -420 -1161 4455 1368 -720 -3472) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 4068
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
) (960 2592 1728 1536 1080 -13452 -330 864 -840 -16272 -2322 8910 2736 -1440 
-6944) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0
 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)) (960 2592
 1728 1536 1080 -13452 -330 864 -840 -16272 -2322 8910 2736 -1440 -6944) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1536
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1
 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))
) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0
 0 0 1)) (368640 995328 663552 414720 1244160 -3299328 -126720 331776 -322560 
-3760128 -891648 3421440 1050624 -774144 -122880 -1920000 602112 1492992) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 
0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 
1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (
368640 995328 663552 414720 1244160 -3299328 -126720 331776 -322560 -3760128 
-891648 3421440 1050624 -774144 -122880 -1920000 602112 1492992) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -126720
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1
 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 
0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
580608000 1567641600 1045094400 653184000 1959552000 -5196441600 575769600 
-508032000 -6135091200 -1404345600 5388768000 1654732800 -1109790720 -254361600 
-3087866880 64880640 916392960 2223728640) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 
0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 
0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0
 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (580608000 
1567641600 1045094400 653184000 1959552000 -5196441600 575769600 -508032000 
-6135091200 -1404345600 5388768000 1654732800 -1109790720 -254361600 -3087866880
 64880640 916392960 2223728640) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 575769600
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (121927680000 
329204736000 219469824000 137168640000 411505920000 -1091252736000 -106686720000
 -804722688000 611924544000 1131641280000 347493888000 -481788518400 84768768000
 -503358105600 -133772083200 264989491200 757170892800) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 1 0 0) (2 0 0 0 1 0 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (121927680000 329204736000 
219469824000 137168640000 411505920000 -1091252736000 -106686720000 
-804722688000 611924544000 1131641280000 347493888000 -481788518400 84768768000 
-503358105600 -133772083200 264989491200 757170892800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 329204736000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0
 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 
0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (487710720000 
877879296000 -2962842624000 548674560000 1646023680000 -4365010944000 
-426746880000 -3218890752000 2447698176000 4526565120000 1389975552000 
-1927154073600 339075072000 -2013432422400 -535088332800 1059957964800 
3028683571200) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 
0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 
0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (487710720000 877879296000 
-2962842624000 548674560000 1646023680000 -4365010944000 -426746880000 
-3218890752000 2447698176000 4526565120000 1389975552000 -1927154073600 
339075072000 -2013432422400 -535088332800 1059957964800 3028683571200) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1646023680000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (35115171840000 63207309312000 
-213324668928000 39504568320000 -452546777088000 -172832486400000 
-30725775360000 -231760134144000 176234268672000 325912688640000 100078239744000
 -138755093299200 24413405184000 -144967134412800 -38526359961600 
-29028542054400 218065217126400) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 1 0 0) (2 0 0 0 0 1 1 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (35115171840000 63207309312000 
-213324668928000 39504568320000 -452546777088000 -172832486400000 
-30725775360000 -231760134144000 176234268672000 325912688640000 100078239744000
 -138755093299200 24413405184000 -144967134412800 -38526359961600 
-29028542054400 218065217126400) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 63207309312000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 1 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0)
 (2 0 1 0 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (421382062080000 
-3508005666816000 -1137731567616000 474054819840000 -5430561325056000 
-2073989836800000 -368709304320000 -2781121609728000 2114811224064000 
3910952263680000 1200938876928000 -1665061119590400 292960862208000 
-1739605612953600 422586010828800 -348342504652800 2616782605516800) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0
 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (421382062080000 -3508005666816000 
-1137731567616000 474054819840000 -5430561325056000 -2073989836800000 
-368709304320000 -2781121609728000 2114811224064000 3910952263680000 
1200938876928000 -1665061119590400 292960862208000 -1739605612953600 
422586010828800 -348342504652800 2616782605516800) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3508005666816000
Arg4: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 2
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0)
 (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (842764124160000 -2275463135232000 948109639680000 
-337105649664000 -4147979673600000 -737418608640000 8469779447808000 
4229622448128000 7821904527360000 2401877753856000 -3330122239180800 
585921724416000 -3479211225907200 845172021657600 -696685009305600 
5233565211033600) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 2 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 0 1
 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (842764124160000 -2275463135232000 948109639680000 
-337105649664000 -4147979673600000 -737418608640000 8469779447808000 
4229622448128000 7821904527360000 2401877753856000 -3330122239180800 
585921724416000 -3479211225907200 845172021657600 -696685009305600 
5233565211033600) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -2275463135232000
Arg4: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 384
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0
 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (323621423677440000 
364074101637120000 -1843125139537920000 -2894136278777856000 
-1592824194662400000 -283168745717760000 -433854971117568000 1624175020081152000
 3003611338506240000 922321057480704000 -131933519688499200 -412135735689216000 
-2441892194471116800 324546056316518400 -1159508592584294400 -202061126408601600
) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0
 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0
 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (323621423677440000 364074101637120000 
-1843125139537920000 -2894136278777856000 -1592824194662400000 
-283168745717760000 -433854971117568000 1624175020081152000 3003611338506240000 
922321057480704000 -131933519688499200 -412135735689216000 -2441892194471116800 
324546056316518400 -1159508592584294400 -202061126408601600) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -1592824194662400000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0
 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (
1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (509703742291968000000 
573416710078464000000 -2902922094772224000000 -4558264639075123200000 
668986161758208000000 -445990774505472000000 -3359266226543001600000 
2558075656627814400000 4730687858147328000000 1452655665532108800000 
1168404810678927360000 -1413669397148467200000 -4648763600401858560000 
1326686026365665280000 -2227617730375188480000 -1923813062313246720000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 
0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 
0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (509703742291968000000 573416710078464000000 
-2902922094772224000000 -4558264639075123200000 668986161758208000000 
-445990774505472000000 -3359266226543001600000 2558075656627814400000 
4730687858147328000000 1452655665532108800000 1168404810678927360000 
-1413669397148467200000 -4648763600401858560000 1326686026365665280000 
-2227617730375188480000 -1923813062313246720000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 668986161758208000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . 
#2=(0)) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (107037785881313280000000 120417509116477440000000 
-609613639902167040000000 -957235574205775872000000 -93658062646149120000000 
-143497531697135616000000 1590849092661018624000000 993444450210938880000000 
305057689761742848000000 -43637011636971110400000 -136313894579208192000000 
-807655843321321881600000 107343608126688460800000 -383507466997255372800000 
-66831717559644979200000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 1 0 0 0 0 1 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 
0 0 0 1 0 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (107037785881313280000000 120417509116477440000000 
-609613639902167040000000 -957235574205775872000000 -93658062646149120000000 
-143497531697135616000000 1590849092661018624000000 993444450210938880000000 
305057689761742848000000 -43637011636971110400000 -136313894579208192000000 
-807655843321321881600000 107343608126688460800000 -383507466997255372800000 
-66831717559644979200000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 120417509116477440000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0
 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0
 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 
0 0 1 . #1#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 
0 0 0 0 0 0 0 1)) (428151143525253120000000 -2438454559608668160000000 
-3828942296823103488000000 -1083757582048296960000000 -374632250584596480000000 
-573990126788542464000000 6363396370644074496000000 3973777800843755520000000 
1220230759046971392000000 -174548046547884441600000 -545255578316832768000000 
-3230623373285287526400000 429374432506753843200000 -1534029867989021491200000 
-267326870238579916800000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 0 0 1 0 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1
#) (1 0 0 0 0 1 0 0 . #2#) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 
0 0 1)) (428151143525253120000000 -2438454559608668160000000 
-3828942296823103488000000 -1083757582048296960000000 -374632250584596480000000 
-573990126788542464000000 6363396370644074496000000 3973777800843755520000000 
1220230759046971392000000 -174548046547884441600000 -545255578316832768000000 
-3230623373285287526400000 429374432506753843200000 -1534029867989021491200000 
-267326870238579916800000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -2438454559608668160000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
30826882333818224640000000 -70853662364135325696000000 
178007182851432775680000000 -26973522042090946560000000 
-41327289128775057408000000 458164538686373363712000000 
286112001660750397440000000 87856614651381940224000000 
-12567459351447679795200000 -39258401638811959296000000 
-232604882876540701900800000 30914959140486276710400000 
45610941319745214873600000 -19247534657177754009600000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
30826882333818224640000000 -70853662364135325696000000 
178007182851432775680000000 -26973522042090946560000000 
-41327289128775057408000000 458164538686373363712000000 
286112001660750397440000000 87856614651381940224000000 
-12567459351447679795200000 -39258401638811959296000000 
-232604882876540701900800000 30914959140486276710400000 
45610941319745214873600000 -19247534657177754009600000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -70853662364135325696000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
369922588005818695680000000 3198891129679223193600000000 
1275365922554435862528000000 -323682264505091358720000000 
-495927469545300688896000000 5497974464236480364544000000 
3433344019929004769280000000 1054279375816583282688000000 
-150809512217372157542400000 -471100819665743511552000000 
-2791258594518488422809600000 370979509685835320524800000 
-444619977260951981260800000 -230970415886133048115200000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0
 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
369922588005818695680000000 3198891129679223193600000000 
1275365922554435862528000000 -323682264505091358720000000 
-495927469545300688896000000 5497974464236480364544000000 
3433344019929004769280000000 1054279375816583282688000000 
-150809512217372157542400000 -471100819665743511552000000 
-2791258594518488422809600000 370979509685835320524800000 
-444619977260951981260800000 -230970415886133048115200000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3198891129679223193600000000
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0)
 (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1
 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (582628076109164445696000000000 
665167053557962742169600000000 -509799566595518889984000000000 
4593051333327246380236800000000 8659309781172456574156800000000 
5407516831388182511616000000000 1660490016911118670233600000000 
-3001366917785209987399680000000 793483951272481102233600000000 
-2783991157008290776350720000000 -1053539530640571645296640000000 
105844100493164874301440000000 2860703853695997428367360000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0
 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (582628076109164445696000000000 
665167053557962742169600000000 -509799566595518889984000000000 
4593051333327246380236800000000 8659309781172456574156800000000 
5407516831388182511616000000000 1660490016911118670233600000000 
-3001366917785209987399680000000 793483951272481102233600000000 
-2783991157008290776350720000000 -1053539530640571645296640000000 
105844100493164874301440000000 2860703853695997428367360000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 665167053557962742169600000000
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 
0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0
 1 0) (1 0 0 0 0 0 0 0 1)) (122351895982924533596160000000000 
-107057908985058966896640000000000 1523281104987410443272192000000000 
2866093163400007199490048000000000 1135578534591518327439360000000000 
348702903551334920749056000000000 -917639219871934001971200000000000 
326271722621132089589760000000000 -417016045475134452006912000000000 
-391526067145358507507712000000000 106038309851867929116672000000000 
935992004269372682010624000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 
0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 
0 0 0 0 0 0 1)) (122351895982924533596160000000000 
-107057908985058966896640000000000 1523281104987410443272192000000000 
2866093163400007199490048000000000 1135578534591518327439360000000000 
348702903551334920749056000000000 -917639219871934001971200000000000 
326271722621132089589760000000000 -417016045475134452006912000000000 
-391526067145358507507712000000000 106038309851867929116672000000000 
935992004269372682010624000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -917639219871934001971200000000000
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (489407583931698134384640000000000 -428231635940235867586560000000000 
6093124419949641773088768000000000 11464372653600028797960192000000000 
4542314138366073309757440000000000 1394811614205339682996224000000000 
1305086890484528358359040000000000 6590688796946868209713152000000000 
-1566104268581434030030848000000000 424153239407471716466688000000000 
3743968017077490728042496000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
489407583931698134384640000000000 -428231635940235867586560000000000 
6093124419949641773088768000000000 11464372653600028797960192000000000 
4542314138366073309757440000000000 1394811614205339682996224000000000 
1305086890484528358359040000000000 6590688796946868209713152000000000 
-1566104268581434030030848000000000 424153239407471716466688000000000 
3743968017077490728042496000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 6093124419949641773088768000000000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
35237346043082265675694080000000000 -30832677787696982466232320000000000 
313612379783432164513677312000000000 -312731446132355107871784960000000000 
100426436222784457175728128000000000 93966256114886041801850880000000000 
474529593380174511099346944000000000 -112759507337863250162221056000000000 
30539033237337963585601536000000000 -120394265647197741058621440000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
35237346043082265675694080000000000 -30832677787696982466232320000000000 
313612379783432164513677312000000000 -312731446132355107871784960000000000 
100426436222784457175728128000000000 93966256114886041801850880000000000 
474529593380174511099346944000000000 -112759507337863250162221056000000000 
30539033237337963585601536000000000 -120394265647197741058621440000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 313612379783432164513677312000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)
 (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (422848152516987188108328960000000000 
-369992133452363789594787840000000000 -8456963050339743762166579200000000000 
-4439905601428365475137454080000000000 1127595073378632501622210560000000000 
5694355120562094133192163328000000000 -1353114088054359001946652672000000000 
366468398848055563027218432000000000 2945842129201677410488025088000000000) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0
 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (422848152516987188108328960000000000 
-369992133452363789594787840000000000 -8456963050339743762166579200000000000 
-4439905601428365475137454080000000000 1127595073378632501622210560000000000 
5694355120562094133192163328000000000 -1353114088054359001946652672000000000 
366468398848055563027218432000000000 2945842129201677410488025088000000000) 3)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 1127595073378632501622210560000000000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1)
 (2 0 0 0 0 0 1 0 1) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (5074177830203846257299947520000000000
 -4439905601428365475137454080000000000 -101483556604076925145998950400000000000
 -53278867217140385701649448960000000000 51418335346065642073972801536000000000 
-36534080377467693052559622144000000000 4397620786176666756326621184000000000 
35350105550420128925856301056000000000 15786331027300855022710947840000000000) 3
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 1 0 0 0 0 1)
) (2 3 4) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 4
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 0
 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (1 0 0 0 0 0 0 0 1)) (144 216 -336 -420 -256) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 . #1=(0)) (2 0 0 0 1 0 0 1 . #1#) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (1 0 0 0 0 0 0 0 1)) (144 216 -336 -420 -256) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 216
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
) (1728 -3240 -3888 -4032 -5040 3024 -3072) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1728 
-3240 -3888 -4032 -5040 3024 -3072) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3240
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1)
 (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0
 0 0 1)) (2721600 -4762800 -5443200 -6350400 -7938000 2799360 -1555200 -1632960 
1658880 3946320 -8104320) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1
 0 0 0 1) (2 0 0 0 0 1 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (
2721600 -4762800 -5443200 -6350400 -7938000 2799360 -1555200 -1632960 1658880 
3946320 -8104320) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -4762800
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0
 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (571536000 
-5143824000 -8834994000 -1666980000 2645395200 -1469664000 -1543147200 
1567641600 228614400 -4102358400) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 
0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (571536000 -5143824000 
-8834994000 -1666980000 2645395200 -1469664000 -1543147200 1567641600 228614400 
-4102358400) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 2645395200
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (2 0 0 0 0 1 0 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)
 (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (2286144000 -20575296000 -35339976000 
-6667920000 -5878656000 -29981145600 6270566400 914457600 -16409433600) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0
 1 0 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0
 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (2286144000 -20575296000 -35339976000 -6667920000
 -5878656000 -29981145600 6270566400 914457600 -16409433600) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -20575296000
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (164602368000 -816153408000 1680315840000 -423263232000 
-2158642483200 451480780800 65840947200 135339724800) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (164602368000 -816153408000 1680315840000 -423263232000 
-2158642483200 451480780800 65840947200 135339724800) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -816153408000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (1975228416000 32406091200000 14690761344000 
-5079158784000 -25903709798400 5417769369600 790091366400 -9802071014400) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (1975228416000 32406091200000 14690761344000 -5079158784000 
-25903709798400 5417769369600 790091366400 -9802071014400) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -5079158784000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
 (0 0 0 0 0 0 0 0 0)) (23702740992000 388873094400000 176289136128000 
-234657135820800 156438090547200 9481096396800 -117624852172800 -71108222976000)
 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 . #2=(0)) (2 0 0 0 1 0 0 1 0) (2 
0 0 1 0 0 0 0 1) (1 0 1 0 0 . #1=(0 0 0 . #3=(0))) (1 0 0 0 1 . #1#) (1 0 0 0 0 
1 0 0 . #2#) (1 0 0 0 0 0 0 1 . #3#) (1 0 0 0 0 0 0 0 1)) (384 -810 -1215 -1620 
504 -280 -486 -392 -972) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 504
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 0) (2 0 0 0 1 0 0 1 0)
 (2 0 0 1 0 0 0 0 1) (1 0 0 0 1 0 0 0 . #1=(0)) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0
 0 1 . #1#) (1 0 0 0 0 0 0 0 1)) (1536 -3240 -4860 -6480 -1120 -6480 -1568 -3888
) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 1 0 0 0 1 0) (2 0 0 0 1 0 0 1 0) (2 0 0 1 0
 0 0 0 1) (1 0 0 0 1 0 0 0 . #1=(0)) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 1 . #1#)
 (1 0 0 0 0 0 0 0 1)) (1536 -3240 -4860 -6480 -1120 -6480 -1568 -3888) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3240
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0)
 (2 0 0 1 0 0 0 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (110592 -77760 340200 -466560 -80640 -466560 94464 -279936
) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 0 1 0 0 1 0) (2 0 0 0 0 1 0 1 0) (2 0 0 1 0
 0 0 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (110592 -77760 340200 -466560 -80640 -466560 94464 -279936) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -77760
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 1 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0)
 (2 0 0 1 0 0 0 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (1327104 5248800 1399680 -5598720 -967680 -5598720 44928 
-3359232) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0
 0 0 0 1) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (1327104 5248800 1399680 -5598720 -967680 -5598720 44928 -3359232) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 5248800
Arg4: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 1575
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1
 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)) (2090188800
 -4534963200 995328000 -6172588800 -2687385600 1393459200) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (1 0 1 0 0 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 
0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)) (2090188800 -4534963200 
995328000 -6172588800 -2687385600 1393459200) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -4534963200
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0)
 (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)) (8360755200 3981312000 16124313600 
-10749542400 5573836800) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 2 0 0) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0)) (8360755200 3981312000 16124313600 -10749542400 
5573836800) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 3981312000
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 0 2 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0)
 (1 0 0 0 0 0 0 1 0) (0 0 0 0 0 0 0 0 0)) (100329062400 133772083200 
-200658124800 66886041600 55738368000) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (1575 420 -1680 864 -480 -504 512 -252 -1008
) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 420
Arg4: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 210
poly_paircomb => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (330750 661500) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 1 0 0 0 1)) (330750 661500) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 661500
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 0 0 0 0 0 0 1)) (3969000 -9922500 -11907000 9261000) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 1 0 0
 . #1=(0 0 0 0)) (1 0 0 0 1 . #1#) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 
0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)) (210 -840 -1575 432 -240 -252 256 -126 -504)
 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 432
Arg4: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 4
poly_paircomb => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (840 -3360 -6300 -960 -4896 1024 -504 -2016) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 1 0 0 0 0 1) (2 0 0 0 1 0 0 0 1) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (840 -3360 -6300 -960 -4896 1024 -504 -2016) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -3360
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 72
poly_paircomb => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (60480 -171360 352800 -69120 -352512 73728 -36288 69888) 2
)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 1 0 0 0 1) (2 0 0 0 0 1 0 0 1) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (60480 -171360 352800 -69120 -352512 73728 -36288 69888) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -171360
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (1 0 0 0 0 0 0 0 1)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0)
 (1 0 0 0 0 0 0 0 1)) (725760 6804000 3084480 -829440 -4230144 884736 -435456 
-1560384) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 1
 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1)) (725760 6804000 3084480 -829440 -4230144 884736 -435456 -1560384) 2)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -829440
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1)
 (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1)
 (0 0 0 0 0 0 0 0 0)) (8709120 81648000 37013760 -38320128 25546752 -5225472 
-18724608 -11612160) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((1 1 0 0 . #1=(0 0 0 . #2=(0 0))) (1 0 0 1 . #1#) (1 0 0 0 0 0 1 . #2
#)) (9 -7 -8) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: -7
Arg4: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 72
poly_paircomb => (p ((1 1 0 0 0 0 0 . #1=(0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1
 0 0 0) (1 0 0 0 0 0 1 . #1#) (0 0 0 0 0 0 0 0 0)) (648 588 735 -576 448) 1)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((1 1 0 0 0 0 0 . #1=(0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 
0 0 0 0 0 1 . #1#) (0 0 0 0 0 0 0 0 0)) (648 588 735 -576 448) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 588
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((1 1 0 0 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1 . #1#) (0 0 0 0 0
 0 0 0 0)) (7776 -17496 13608) 1)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (0 
0 0 0 . #1#)) (72 84 105 64) 1)
Arg2: (0 0 0 0 0 0 0 0 0)
Arg3: 84
Arg4: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Arg5: (0 0 0 0 0 0 0 0 0)
Arg6: 12
poly_paircomb => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 0 0 1 0 0) (0 0 0 0 . #
1#)) (864 -1512 1944) 1)
Calling core_standardizeoutput from core_groebner1
Arg1: ((lp (p ((3 0 0 0 0 0 0 3 0) #1=(2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2
 0 0 0 0 0 1 0 1) #2=(2 0 0 0 0 0 0 1 1) #3=(2 0 0 0 0 0 0 0 2) #4=(1 0 0 0 0 1
 . #10=(0 0 0)) #5=(1 0 0 0 0 0 1 . #8=(0 0)) #6=(1 0 0 0 0 0 0 1 0) (1 0 0 0 0 
0 0 0 1) . #7=(#9=(0 0 0 0 . #11=(0 0 0 0 0)))) (
5964498173268542570985955458436123772537047134665562297187956978900456761313202780808065591587124171151379529728000000000000000000000000000000000000000000000000000000000000000000000000000
 
-17891871527105418585727666115319681215904328602055281296380962649088064037201836042347786416777267173543621206999040000000000000000000000000000000000000000000000000000000000000000000000000
 
-12659343061631192395562027911782793313139855142963642426684643383788724554623940596000792276021651302035581042688000000000000000000000000000000000000000000000000000000000000000000000000000
 
-5842773720752858028720935959284366144526086989060142658469835407902488255980280275077288742779223677862575865856000000000000000000000000000000000000000000000000000000000000000000000000000
 
7764397077800464669278043785893446565392444487684367355033247942057084393502683565547152595959946131915156372848640000000000000000000000000000000000000000000000000000000000000000000000000
 
-6699713866463277206266673233312739845723246414122296915045411267728186533524054715421957758386843150615753659514880000000000000000000000000000000000000000000000000000000000000000000000000
 
3060747833567719405860330304004373138821369421232098435607309333680473847873521637433080443624790359247713816543232000000000000000000000000000000000000000000000000000000000000000000000000
 
-2409819561270512111401346031207063014275648322599027727582225448237115156244311153454099534799608699136209068228608000000000000000000000000000000000000000000000000000000000000000000000000
 
5283598635774140060342606384514336436472182960181201598118500048864709379926463822084706738655463900692320457064448000000000000000000000000000000000000000000000000000000000000000000000000
 
3588761458702422131418814886991552894104467652836052068446805570542772786562109928958583574453727610136035487383552000000000000000000000000000000000000000000000000000000000000000000000000
 
877137388201910538632673842776517189104163182555201663296212327902398236947163063517775692743152591639616327516160000000000000000000000000000000000000000000000000000000000000000000000000
) 4) (sgn 6 (2 0 0 0 0 0 0 2 0))) (lp (p ((3 0 0 0 0 0 0 2 1) #1# (2 0 0 0 0 1 0
 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
1264094060722912371059562437050775059968873352408386345369600000000000000000000000000000000000000000
 
-692030689056284528828222729386724016503542748168621441364787200000000000000000000000000000000000000
 
-8889001329777724247820820470854694081559934458980270411350016000000000000000000000000000000000000000
 
-3931885339661984695148763769214958880406972601217082286145536000000000000000000000000000000000000000
 
-2447738177958339722336861876164153465781049350003827690753228800000000000000000000000000000000000000
 
769394719734696705193477349440863579357381201269953354373529600000000000000000000000000000000000000
 
4733588452696256783480142844808513263655347042657537667062824960000000000000000000000000000000000000
 
-3386909206480600709687992504614070878498774815122374676174602240000000000000000000000000000000000000
 
351471710106477432137433184441082827014023801569303032433213440000000000000000000000000000000000000
 
3046308295806848674148224501879782458893887934402134136124866560000000000000000000000000000000000000
 
1476276227688147076368237212306814928387067283931829566753996800000000000000000000000000000000000000
) 4) (sgn 7 (2 0 0 0 0 0 1 0 1))) (lp (p ((3 0 0 0 0 1 0 0 2) #1# (2 0 0 0 0 1 0
 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
337295812996636697644612190208000000000000000000 
-2044150298520025178215184408248320000000000000 
175585461848737335135656012446433280000000000000 
459035095915070136787304643538452480000000000000 
17011089840557450908365442661744640000000000000 
52630996191779958611517391660646400000000000000 
-147905630488471155117080898516811776000000000000 
98739508212650043780821735140491264000000000000 
-4786914415538081949904677051039744000000000000 
-264114791759986494534944317878829056000000000000 
-44851216000733119491362539123507200000000000000) 3) (sgn 7 (1 0 0 0 0 0 0 0 1))
) (lp (p ((3 0 0 0 0 0 1 0 2) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3
# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
81583265426246215605650718720000000000000 
1870680226735151320191247319040000000000 
-260853333895119328395275702108160000000000 
-206597687445664702289096013250560000000000 
-1373410799375174386975852462080000000000 
-82515645602546172355429584076800000000000 
127250457144866732167068408348672000000000 
-87159490867933480751391685214208000000000 
2450038575437092699524739104768000000000 
129158629907791723017938594168832000000000 
39097479844281784272914114150400000000000) 3) (sgn 7 (1 0 0 0 0 0 0 1 0))) (lp (
p ((3 0 0 0 0 0 0 1 2) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #
5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
577545773557730888159850316035056656711680000000000000000000 
205727978499970384772421829659613697761345536000000000000000 
1709203218498671401075809383095358808297308160000000000000000 
1009098751924355365453777419820831819652136960000000000000000 
-655730990557935707309877212929066589000564736000000000000000 
-575156114776876276858169675893607815874347008000000000000000 
-839288156121385909802865712268201756529052876800000000000000 
582923718155636158825481537963309391863296819200000000000000 
-78513237555392152616691264358246389734650675200000000000000 
-498860413517183856237325860134616469722680524800000000000000 
-258453935088724415654248926447948520923070464000000000000000) 4) (sgn 7 (2 0 0 
0 0 1 0 0 1))) (lp (p ((3 0 0 0 0 0 0 0 3) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 
1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
69318522259579168988018924147336549683577015500800000000000000000000000 
-18139377918904103918482854929466798192423267704242176000000000000000000 
-33146691132535913457655818983794081321679294866391040000000000000000000 
1073158123538221243768200347049344587920940424232960000000000000000000 
51550663134240763385277114494695910755477009314349056000000000000000000 
-120185690713938913117124606242966342201980766767808512000000000000000000 
16596392022939962116787131082453815076599835122257100800000000000000000 
-11896071126495752639092478205205355440875535445734195200000000000000000 
3512889663626381130687370333464641220057434319696691200000000000000000 
1504707623501359762657980233164908391357430994095308800000000000000000 
5144326520081841216530465869320592507656034219720704000000000000000000) 4) (sgn 
7 (2 0 0 0 0 0 0 2 0))) (lp (p ((2 0 0 0 0 2 0 0 0) #1# (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
5074177830203846257299947520000000000 -4439905601428365475137454080000000000 
-101483556604076925145998950400000000000 -53278867217140385701649448960000000000
 51418335346065642073972801536000000000 -36534080377467693052559622144000000000 
4397620786176666756326621184000000000 35350105550420128925856301056000000000 
15786331027300855022710947840000000000) 3) (sgn 7 (1 0 0 0 0 0 1 0 0))) (lp (p (
(2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0
 0 0 0 0 1) . #7#) (23702740992000 388873094400000 176289136128000 
-234657135820800 156438090547200 9481096396800 -117624852172800 -71108222976000)
 2) (sgn 7 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 0 2 0 0) #4# #5# #6# . #7#) 
(100329062400 133772083200 -200658124800 66886041600 55738368000) 2) (sgn 6 (0 0
 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1
 0 1) (1 0 0 0 0 0 0 0 1)) (3969000 -9922500 -11907000 9261000) 2) (sgn 5 (0 0 0
 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0
 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (8709120 81648000 37013760 -38320128 
25546752 -5225472 -18724608 -11612160) 2) (sgn 4 (0 0 0 0 0 0 0 0 0))) (lp (p ((
1 1 0 0 0 0 0 . #8#) #5# #9#) (7776 -17496 13608) 1) (sgn 3 (0 0 0 0 0 0 0 0 0))
) (lp (p ((1 0 1 0 0 0 . #10#) #4#) (4 9) 1) (sgn 2 (0 0 0 0 0 0 0 0 0))) (lp (p
 ((1 0 0 1 . #11#) #5# #9#) (864 -1512 1944) 1) (sgn 1 (0 0 0 0 0 0 0 0 0))) (lp
 (p ((1 0 0 0 1 0 0 0 0) #4# #5# . #7#) (12 15 18 -14) 1) (sgn 0 (0 0 0 0 0 0 0 
0 0))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
5964498173268542570985955458436123772537047134665562297187956978900456761313202780808065591587124171151379529728000000000000000000000000000000000000000000000000000000000000000000000000000
 
-17891871527105418585727666115319681215904328602055281296380962649088064037201836042347786416777267173543621206999040000000000000000000000000000000000000000000000000000000000000000000000000
 
-12659343061631192395562027911782793313139855142963642426684643383788724554623940596000792276021651302035581042688000000000000000000000000000000000000000000000000000000000000000000000000000
 
-5842773720752858028720935959284366144526086989060142658469835407902488255980280275077288742779223677862575865856000000000000000000000000000000000000000000000000000000000000000000000000000
 
7764397077800464669278043785893446565392444487684367355033247942057084393502683565547152595959946131915156372848640000000000000000000000000000000000000000000000000000000000000000000000000
 
-6699713866463277206266673233312739845723246414122296915045411267728186533524054715421957758386843150615753659514880000000000000000000000000000000000000000000000000000000000000000000000000
 
3060747833567719405860330304004373138821369421232098435607309333680473847873521637433080443624790359247713816543232000000000000000000000000000000000000000000000000000000000000000000000000
 
-2409819561270512111401346031207063014275648322599027727582225448237115156244311153454099534799608699136209068228608000000000000000000000000000000000000000000000000000000000000000000000000
 
5283598635774140060342606384514336436472182960181201598118500048864709379926463822084706738655463900692320457064448000000000000000000000000000000000000000000000000000000000000000000000000
 
3588761458702422131418814886991552894104467652836052068446805570542772786562109928958583574453727610136035487383552000000000000000000000000000000000000000000000000000000000000000000000000
 
877137388201910538632673842776517189104163182555201663296212327902398236947163063517775692743152591639616327516160000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
5964498173268542570985955458436123772537047134665562297187956978900456761313202780808065591587124171151379529728000000000000000000000000000000000000000000000000000000000000000000000000000
 
-17891871527105418585727666115319681215904328602055281296380962649088064037201836042347786416777267173543621206999040000000000000000000000000000000000000000000000000000000000000000000000000
 
-12659343061631192395562027911782793313139855142963642426684643383788724554623940596000792276021651302035581042688000000000000000000000000000000000000000000000000000000000000000000000000000
 
-5842773720752858028720935959284366144526086989060142658469835407902488255980280275077288742779223677862575865856000000000000000000000000000000000000000000000000000000000000000000000000000
 
7764397077800464669278043785893446565392444487684367355033247942057084393502683565547152595959946131915156372848640000000000000000000000000000000000000000000000000000000000000000000000000
 
-6699713866463277206266673233312739845723246414122296915045411267728186533524054715421957758386843150615753659514880000000000000000000000000000000000000000000000000000000000000000000000000
 
3060747833567719405860330304004373138821369421232098435607309333680473847873521637433080443624790359247713816543232000000000000000000000000000000000000000000000000000000000000000000000000
 
-2409819561270512111401346031207063014275648322599027727582225448237115156244311153454099534799608699136209068228608000000000000000000000000000000000000000000000000000000000000000000000000
 
5283598635774140060342606384514336436472182960181201598118500048864709379926463822084706738655463900692320457064448000000000000000000000000000000000000000000000000000000000000000000000000
 
3588761458702422131418814886991552894104467652836052068446805570542772786562109928958583574453727610136035487383552000000000000000000000000000000000000000000000000000000000000000000000000
 
877137388201910538632673842776517189104163182555201663296212327902398236947163063517775692743152591639616327516160000000000000000000000000000000000000000000000000000000000000000000000000
) 4)
poly_contentputin => 
36066504449091716226672444193113371262506709809013226286850835851249927506051112809119066313451998011497381888000000000000000000000000000000000000000000000000000000000000000000000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 3 0) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0
 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0
 0 0 0 0 0 0 0)) (165375 -496080 -351000 -162000 215280 -185760 84864 -66816 
146496 99504 24320) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
1264094060722912371059562437050775059968873352408386345369600000000000000000000000000000000000000000
 
-692030689056284528828222729386724016503542748168621441364787200000000000000000000000000000000000000
 
-8889001329777724247820820470854694081559934458980270411350016000000000000000000000000000000000000000
 
-3931885339661984695148763769214958880406972601217082286145536000000000000000000000000000000000000000
 
-2447738177958339722336861876164153465781049350003827690753228800000000000000000000000000000000000000
 
769394719734696705193477349440863579357381201269953354373529600000000000000000000000000000000000000
 
4733588452696256783480142844808513263655347042657537667062824960000000000000000000000000000000000000
 
-3386909206480600709687992504614070878498774815122374676174602240000000000000000000000000000000000000
 
351471710106477432137433184441082827014023801569303032433213440000000000000000000000000000000000000
 
3046308295806848674148224501879782458893887934402134136124866560000000000000000000000000000000000000
 
1476276227688147076368237212306814928387067283931829566753996800000000000000000000000000000000000000
) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
1264094060722912371059562437050775059968873352408386345369600000000000000000000000000000000000000000
 
-692030689056284528828222729386724016503542748168621441364787200000000000000000000000000000000000000
 
-8889001329777724247820820470854694081559934458980270411350016000000000000000000000000000000000000000
 
-3931885339661984695148763769214958880406972601217082286145536000000000000000000000000000000000000000
 
-2447738177958339722336861876164153465781049350003827690753228800000000000000000000000000000000000000
 
769394719734696705193477349440863579357381201269953354373529600000000000000000000000000000000000000
 
4733588452696256783480142844808513263655347042657537667062824960000000000000000000000000000000000000
 
-3386909206480600709687992504614070878498774815122374676174602240000000000000000000000000000000000000
 
351471710106477432137433184441082827014023801569303032433213440000000000000000000000000000000000000
 
3046308295806848674148224501879782458893887934402134136124866560000000000000000000000000000000000000
 
1476276227688147076368237212306814928387067283931829566753996800000000000000000000000000000000000000
) 4)
poly_contentputin => 
218394395546556505096134315870990184207990213136099573760000000000000000000000000000000000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 2 1) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0
 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0
 0 0 0 0 0 0 0)) (5788125 -3168720 -40701600 -18003600 -11207880 3522960 
21674496 -15508224 1609344 13948656 6759680) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
337295812996636697644612190208000000000000000000 
-2044150298520025178215184408248320000000000000 
175585461848737335135656012446433280000000000000 
459035095915070136787304643538452480000000000000 
17011089840557450908365442661744640000000000000 
52630996191779958611517391660646400000000000000 
-147905630488471155117080898516811776000000000000 
98739508212650043780821735140491264000000000000 
-4786914415538081949904677051039744000000000000 
-264114791759986494534944317878829056000000000000 
-44851216000733119491362539123507200000000000000) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
337295812996636697644612190208000000000000000000 
-2044150298520025178215184408248320000000000000 
175585461848737335135656012446433280000000000000 
459035095915070136787304643538452480000000000000 
17011089840557450908365442661744640000000000000 
52630996191779958611517391660646400000000000000 
-147905630488471155117080898516811776000000000000 
98739508212650043780821735140491264000000000000 
-4786914415538081949904677051039744000000000000 
-264114791759986494534944317878829056000000000000 
-44851216000733119491362539123507200000000000000) 3)
poly_contentputin => 16316653085249243121130143744000000000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 1 0 0 2) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0
 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0
 0 0 0 0 0 0 0)) (20671875 -125280 10761120 28132920 1042560 3225600 -9064704 
6051456 -293376 -16186824 -2748800) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
81583265426246215605650718720000000000000 
1870680226735151320191247319040000000000 
-260853333895119328395275702108160000000000 
-206597687445664702289096013250560000000000 
-1373410799375174386975852462080000000000 
-82515645602546172355429584076800000000000 
127250457144866732167068408348672000000000 
-87159490867933480751391685214208000000000 
2450038575437092699524739104768000000000 
129158629907791723017938594168832000000000 
39097479844281784272914114150400000000000) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
81583265426246215605650718720000000000000 
1870680226735151320191247319040000000000 
-260853333895119328395275702108160000000000 
-206597687445664702289096013250560000000000 
-1373410799375174386975852462080000000000 
-82515645602546172355429584076800000000000 
127250457144866732167068408348672000000000 
-87159490867933480751391685214208000000000 
2450038575437092699524739104768000000000 
129158629907791723017938594168832000000000 
39097479844281784272914114150400000000000) 3)
poly_contentputin => 32888189640210114630647808000000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 1 0 2) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0
 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0
 0 0 0 0 0 0 0)) (2480625 56880 -7931520 -6281820 -41760 -2508975 3869184 
-2650176 74496 3927204 1188800) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
577545773557730888159850316035056656711680000000000000000000 
205727978499970384772421829659613697761345536000000000000000 
1709203218498671401075809383095358808297308160000000000000000 
1009098751924355365453777419820831819652136960000000000000000 
-655730990557935707309877212929066589000564736000000000000000 
-575156114776876276858169675893607815874347008000000000000000 
-839288156121385909802865712268201756529052876800000000000000 
582923718155636158825481537963309391863296819200000000000000 
-78513237555392152616691264358246389734650675200000000000000 
-498860413517183856237325860134616469722680524800000000000000 
-258453935088724415654248926447948520923070464000000000000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
577545773557730888159850316035056656711680000000000000000000 
205727978499970384772421829659613697761345536000000000000000 
1709203218498671401075809383095358808297308160000000000000000 
1009098751924355365453777419820831819652136960000000000000000 
-655730990557935707309877212929066589000564736000000000000000 
-575156114776876276858169675893607815874347008000000000000000 
-839288156121385909802865712268201756529052876800000000000000 
582923718155636158825481537963309391863296819200000000000000 
-78513237555392152616691264358246389734650675200000000000000 
-498860413517183856237325860134616469722680524800000000000000 
-258453935088724415654248926447948520923070464000000000000000) 4)
poly_contentputin => 19956230162884557198051193297831565721600000000000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 1 2) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0
 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0
 0 0 0 0 0 0 0)) (28940625 10308960 85647600 50565600 -32858460 -28820880 
-42056448 29210112 -3934272 -24997728 -12951040) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
69318522259579168988018924147336549683577015500800000000000000000000000 
-18139377918904103918482854929466798192423267704242176000000000000000000 
-33146691132535913457655818983794081321679294866391040000000000000000000 
1073158123538221243768200347049344587920940424232960000000000000000000 
51550663134240763385277114494695910755477009314349056000000000000000000 
-120185690713938913117124606242966342201980766767808512000000000000000000 
16596392022939962116787131082453815076599835122257100800000000000000000 
-11896071126495752639092478205205355440875535445734195200000000000000000 
3512889663626381130687370333464641220057434319696691200000000000000000 
1504707623501359762657980233164908391357430994095308800000000000000000 
5144326520081841216530465869320592507656034219720704000000000000000000) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0
 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (
69318522259579168988018924147336549683577015500800000000000000000000000 
-18139377918904103918482854929466798192423267704242176000000000000000000 
-33146691132535913457655818983794081321679294866391040000000000000000000 
1073158123538221243768200347049344587920940424232960000000000000000000 
51550663134240763385277114494695910755477009314349056000000000000000000 
-120185690713938913117124606242966342201980766767808512000000000000000000 
16596392022939962116787131082453815076599835122257100800000000000000000 
-11896071126495752639092478205205355440875535445734195200000000000000000 
3512889663626381130687370333464641220057434319696691200000000000000000 
1504707623501359762657980233164908391357430994095308800000000000000000 
5144326520081841216530465869320592507656034219720704000000000000000000) 4)
poly_contentputin => 
205302671322738989089416962628050311432686796800000000000000000
poly_normalizebycontentputin => (p ((3 0 0 0 0 0 0 0 3) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (2 0 0 0 0 0 0 1 1) (2 0 0 0 0 0 0 0 2) (1 0
 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0
 0 0 0 0 0 0 0)) (337640625 -88354320 -161452800 5227200 251095920 -585407340 
80838656 -57944064 17110784 7329216 25057280) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (5074177830203846257299947520000000000 
-4439905601428365475137454080000000000 -101483556604076925145998950400000000000 
-53278867217140385701649448960000000000 51418335346065642073972801536000000000 
-36534080377467693052559622144000000000 4397620786176666756326621184000000000 
35350105550420128925856301056000000000 15786331027300855022710947840000000000) 3
)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0
 0 1 0 1) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0
 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (5074177830203846257299947520000000000 
-4439905601428365475137454080000000000 -101483556604076925145998950400000000000 
-53278867217140385701649448960000000000 51418335346065642073972801536000000000 
-36534080377467693052559622144000000000 4397620786176666756326621184000000000 
35350105550420128925856301056000000000 15786331027300855022710947840000000000) 3
)
poly_contentputin => 14094938417232906270277632000000000
poly_normalizebycontentputin => (p ((2 0 0 0 0 2 0 0 0) (2 0 0 0 0 0 0 2 0) (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0
 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (360 -315 -7200 -3780 
3648 -2592 312 2508 1120) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0
 0 0 0 0)) (23702740992000 388873094400000 176289136128000 -234657135820800 
156438090547200 9481096396800 -117624852172800 -71108222976000) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0
 0 0 0 0)) (23702740992000 388873094400000 176289136128000 -234657135820800 
156438090547200 9481096396800 -117624852172800 -71108222976000) 2)
poly_contentputin => 148142131200
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0
 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (160 2625 1190 -1584 1056 64 -794 -480) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 2 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0
 0 0 1 0) (0 0 0 0 0 0 0 0 0)) (100329062400 133772083200 -200658124800 
66886041600 55738368000) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 2 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0
 0 0 1 0) (0 0 0 0 0 0 0 0 0)) (100329062400 133772083200 -200658124800 
66886041600 55738368000) 2)
poly_contentputin => 11147673600
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 2 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (0 0 0 0 0 0 0 0 0)) (9 12 -18 6 5) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0
 0 0 0 1)) (3969000 -9922500 -11907000 9261000) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0
 0 0 0 1)) (3969000 -9922500 -11907000 9261000) 2)
poly_contentputin => 661500
poly_normalizebycontentputin => (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1) (1 0 0 0 0 0 0 0 1)) (6 -15 -18 14) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0
 0 0 0 0)) (8709120 81648000 37013760 -38320128 25546752 -5225472 -18724608 
-11612160) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0
 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0 0 0 0 0 0 0 1) (0 0 0 0 0
 0 0 0 0)) (8709120 81648000 37013760 -38320128 25546752 -5225472 -18724608 
-11612160) 2)
poly_contentputin => 72576
poly_normalizebycontentputin => (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 1 0) (1 0
 0 0 0 0 0 0 1) (0 0 0 0 0 0 0 0 0)) (120 1125 510 -528 352 -72 -258 -160) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 1 0 0 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1 . #1#) (0 0 0 0 0 0 0 0 0)) 
(7776 -17496 13608) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 1 0 0 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1 . #1#) (0 0 0 0 0 0 0 0 0)) 
(7776 -17496 13608) 1)
poly_contentputin => 1944
poly_normalizebycontentputin => (p ((1 1 0 0 0 0 0 . #1=(0 0)) (1 0 0 0 0 0 1
 . #1#) (0 0 0 0 0 0 0 0 0)) (4 -9 7) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1#)) (4 9) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 1 0 0 0 . #1=(0 0 0)) (1 0 0 0 0 1 . #1
#)) (4 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 0 0 1 0 0) (0 0 0 0 . #1#)) (864 
-1512 1944) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 0 0 1 0 0) (0 0 0 0 . #1#)) (864 
-1512 1944) 1)
poly_contentputin => 216
poly_normalizebycontentputin => (p ((1 0 0 1 . #1=(0 0 0 0 0)) (1 0 0 0 0 0 1 0 
0) (0 0 0 0 . #1#)) (4 -7 9) 1)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0 0 0 0 0 1 0 0) (0 0 0 0 0
 0 0 0 0)) (12 15 18 -14) 1)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((1 0 0 0 1 0 0 0 0) (1 0 0 0 0 1 0 0 0) (1 0
 0 0 0 0 1 0 0) (0 0 0 0 0 0 0 0 0)) (12 15 18 -14) 1)
core_standardizeoutput => ((lp (p ((3 0 0 0 0 0 0 3 0) #1=(2 0 0 0 0 0 0 2 0) (2
 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2=(2 0 0 0 0 0 0 1 1) #3=(2 0 0 0 0 0 0 0
 2) #4=(1 0 0 0 0 1 . #10=(0 0 0)) #5=(1 0 0 0 0 0 1 . #8=(0 0)) #6=(1 0 0 0 0 0
 0 1 0) (1 0 0 0 0 0 0 0 1) . #7=(#9=(0 0 0 0 . #11=(0 0 0 0 0)))) (165375 
-496080 -351000 -162000 215280 -185760 84864 -66816 146496 99504 24320) 4) (sgn 
6 (2 0 0 0 0 0 0 2 0))) (lp (p ((3 0 0 0 0 0 0 2 1) #1# (2 0 0 0 0 1 0 0 1) (2 0
 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (5788125 -3168720
 -40701600 -18003600 -11207880 3522960 21674496 -15508224 1609344 13948656 
6759680) 4) (sgn 7 (2 0 0 0 0 0 1 0 1))) (lp (p ((3 0 0 0 0 1 0 0 2) #1# (2 0 0 
0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) 
(20671875 -125280 10761120 28132920 1042560 3225600 -9064704 6051456 -293376 
-16186824 -2748800) 3) (sgn 7 (1 0 0 0 0 0 0 0 1))) (lp (p ((3 0 0 0 0 0 1 0 2) 
#1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0
 1) . #7#) (2480625 56880 -7931520 -6281820 -41760 -2508975 3869184 -2650176 
74496 3927204 1188800) 3) (sgn 7 (1 0 0 0 0 0 0 1 0))) (lp (p ((3 0 0 0 0 0 0 1 
2) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 
0 0 1) . #7#) (28940625 10308960 85647600 50565600 -32858460 -28820880 -42056448
 29210112 -3934272 -24997728 -12951040) 4) (sgn 7 (2 0 0 0 0 1 0 0 1))) (lp (p (
(3 0 0 0 0 0 0 0 3) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# 
#6# (1 0 0 0 0 0 0 0 1) . #7#) (337640625 -88354320 -161452800 5227200 251095920
 -585407340 80838656 -57944064 17110784 7329216 25057280) 4) (sgn 7 (2 0 0 0 0 0
 0 2 0))) (lp (p ((2 0 0 0 0 2 0 0 0) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1
) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (360 -315 -7200 -3780 3648 -2592 312 
2508 1120) 3) (sgn 7 (1 0 0 0 0 0 1 0 0))) (lp (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 
0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (160 2625 
1190 -1584 1056 64 -794 -480) 2) (sgn 7 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0
 0 2 0 0) #4# #5# #6# . #7#) (9 12 -18 6 5) 2) (sgn 6 (0 0 0 0 0 0 0 0 0))) (lp 
(p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0 0 0 0
 1)) (6 -15 -18 14) 2) (sgn 5 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 0 1 1 0) 
(2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
120 1125 510 -528 352 -72 -258 -160) 2) (sgn 4 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 
1 0 0 0 0 0 . #8#) #5# #9#) (4 -9 7) 1) (sgn 3 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 
0 1 0 0 0 . #10#) #4#) (4 9) 1) (sgn 2 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 0 1
 . #11#) #5# #9#) (4 -7 9) 1) (sgn 1 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 0 0 1 0 
0 0 0) #4# #5# . #7#) (12 15 18 -14) 1) (sgn 0 (0 0 0 0 0 0 0 0 0))))
core_groebner1 => ((lp (p ((3 0 0 0 0 0 0 3 0) #1=(2 0 0 0 0 0 0 2 0) (2 0 0 0 0
 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2=(2 0 0 0 0 0 0 1 1) #3=(2 0 0 0 0 0 0 0 2) #4=(
1 0 0 0 0 1 . #10=(0 0 0)) #5=(1 0 0 0 0 0 1 . #8=(0 0)) #6=(1 0 0 0 0 0 0 1 0) 
(1 0 0 0 0 0 0 0 1) . #7=(#9=(0 0 0 0 . #11=(0 0 0 0 0)))) (165375 -496080 
-351000 -162000 215280 -185760 84864 -66816 146496 99504 24320) 4) (sgn 6 (2 0 0
 0 0 0 0 2 0))) (lp (p ((3 0 0 0 0 0 0 2 1) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0
 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (5788125 -3168720 
-40701600 -18003600 -11207880 3522960 21674496 -15508224 1609344 13948656 
6759680) 4) (sgn 7 (2 0 0 0 0 0 1 0 1))) (lp (p ((3 0 0 0 0 1 0 0 2) #1# (2 0 0 
0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) 
(20671875 -125280 10761120 28132920 1042560 3225600 -9064704 6051456 -293376 
-16186824 -2748800) 3) (sgn 7 (1 0 0 0 0 0 0 0 1))) (lp (p ((3 0 0 0 0 0 1 0 2) 
#1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0
 1) . #7#) (2480625 56880 -7931520 -6281820 -41760 -2508975 3869184 -2650176 
74496 3927204 1188800) 3) (sgn 7 (1 0 0 0 0 0 0 1 0))) (lp (p ((3 0 0 0 0 0 0 1 
2) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 
0 0 1) . #7#) (28940625 10308960 85647600 50565600 -32858460 -28820880 -42056448
 29210112 -3934272 -24997728 -12951040) 4) (sgn 7 (2 0 0 0 0 1 0 0 1))) (lp (p (
(3 0 0 0 0 0 0 0 3) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# 
#6# (1 0 0 0 0 0 0 0 1) . #7#) (337640625 -88354320 -161452800 5227200 251095920
 -585407340 80838656 -57944064 17110784 7329216 25057280) 4) (sgn 7 (2 0 0 0 0 0
 0 2 0))) (lp (p ((2 0 0 0 0 2 0 0 0) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1
) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (360 -315 -7200 -3780 3648 -2592 312 
2508 1120) 3) (sgn 7 (1 0 0 0 0 0 1 0 0))) (lp (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 
0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (160 2625 
1190 -1584 1056 64 -794 -480) 2) (sgn 7 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0
 0 2 0 0) #4# #5# #6# . #7#) (9 12 -18 6 5) 2) (sgn 6 (0 0 0 0 0 0 0 0 0))) (lp 
(p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (1 0 0 0 0 0 0 0
 1)) (6 -15 -18 14) 2) (sgn 5 (0 0 0 0 0 0 0 0 0))) (lp (p ((2 0 0 0 0 0 1 1 0) 
(2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (
120 1125 510 -528 352 -72 -258 -160) 2) (sgn 4 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 
1 0 0 0 0 0 . #8#) #5# #9#) (4 -9 7) 1) (sgn 3 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 
0 1 0 0 0 . #10#) #4#) (4 9) 1) (sgn 2 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 0 1
 . #11#) #5# #9#) (4 -7 9) 1) (sgn 1 (0 0 0 0 0 0 0 0 0))) (lp (p ((1 0 0 0 1 0 
0 0 0) #4# #5# . #7#) (12 15 18 -14) 1) (sgn 0 (0 0 0 0 0 0 0 0 0))))
f5_groebner_poly2poly => ((p ((3 0 0 0 0 0 0 3 0) #1=(2 0 0 0 0 0 0 2 0) (2 0 0 
0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2=(2 0 0 0 0 0 0 1 1) #3=(2 0 0 0 0 0 0 0 2) #
4=(1 0 0 0 0 1 . #10=(0 0 0)) #5=(1 0 0 0 0 0 1 . #8=(0 0)) #6=(1 0 0 0 0 0 0 1 
0) (1 0 0 0 0 0 0 0 1) . #7=(#9=(0 0 0 0 . #11=(0 0 0 0 0)))) (165375 -496080 
-351000 -162000 215280 -185760 84864 -66816 146496 99504 24320) 4) (p ((3 0 0 0 
0 0 0 2 1) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 
0 0 0 0 0 0 1) . #7#) (5788125 -3168720 -40701600 -18003600 -11207880 3522960 
21674496 -15508224 1609344 13948656 6759680) 4) (p ((3 0 0 0 0 1 0 0 2) #1# (2 0
 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7
#) (20671875 -125280 10761120 28132920 1042560 3225600 -9064704 6051456 -293376 
-16186824 -2748800) 3) (p ((3 0 0 0 0 0 1 0 2) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 
0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (2480625 56880 
-7931520 -6281820 -41760 -2508975 3869184 -2650176 74496 3927204 1188800) 3) (p 
((3 0 0 0 0 0 0 1 2) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5#
 #6# (1 0 0 0 0 0 0 0 1) . #7#) (28940625 10308960 85647600 50565600 -32858460 
-28820880 -42056448 29210112 -3934272 -24997728 -12951040) 4) (p ((3 0 0 0 0 0 0
 0 3) #1# (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #2# #3# #4# #5# #6# (1 0 0 0 0
 0 0 0 1) . #7#) (337640625 -88354320 -161452800 5227200 251095920 -585407340 
80838656 -57944064 17110784 7329216 25057280) 4) (p ((2 0 0 0 0 2 0 0 0) #1# (2 
0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (360
 -315 -7200 -3780 3648 -2592 312 2508 1120) 3) (p ((2 0 0 0 0 1 1 0 0) (2 0 0 0 
0 1 0 0 1) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (160 2625 
1190 -1584 1056 64 -794 -480) 2) (p ((2 0 0 0 0 0 2 0 0) #4# #5# #6# . #7#) (9 
12 -18 6 5) 2) (p ((2 0 0 0 0 1 0 1 0) (2 0 0 0 0 1 0 0 1) (2 0 0 0 0 0 1 0 1) (
1 0 0 0 0 0 0 0 1)) (6 -15 -18 14) 2) (p ((2 0 0 0 0 0 1 1 0) (2 0 0 0 0 1 0 0 1
) (2 0 0 0 0 0 1 0 1) #4# #5# #6# (1 0 0 0 0 0 0 0 1) . #7#) (120 1125 510 -528 
352 -72 -258 -160) 2) (p ((1 1 0 0 0 0 0 . #8#) #5# #9#) (4 -9 7) 1) (p ((1 0 1 
0 0 0 . #10#) #4#) (4 9) 1) (p ((1 0 0 1 . #11#) #5# #9#) (4 -7 9) 1) (p ((1 0 0
 0 1 0 0 0 0) #4# #5# . #7#) (12 15 18 -14) 1))
f5_groebner_lp2lp => ((plus (times 165375 (expt g 3)) (minus (times 496080 (expt
 g 2))) (minus (times 351000 e h)) (minus (times 162000 f h)) (times 215280 g h)
 (minus (times 185760 (expt h 2))) (times 84864 e) (minus (times 66816 f)) (
times 146496 g) (times 99504 h) 24320) (plus (times 5788125 (expt g 2) h) (minus
 (times 3168720 (expt g 2))) (minus (times 40701600 e h)) (minus (times 18003600
 f h)) (minus (times 11207880 g h)) (times 3522960 (expt h 2)) (times 21674496 e
) (minus (times 15508224 f)) (times 1609344 g) (times 13948656 h) 6759680) (plus
 (times 20671875 e (expt h 2)) (minus (times 125280 (expt g 2))) (times 10761120
 e h) (times 28132920 f h) (times 1042560 g h) (times 3225600 (expt h 2)) (minus
 (times 9064704 e)) (times 6051456 f) (minus (times 293376 g)) (minus (times 
16186824 h)) (minus 2748800)) (plus (times 2480625 f (expt h 2)) (times 56880 (
expt g 2)) (minus (times 7931520 e h)) (minus (times 6281820 f h)) (minus (times
 41760 g h)) (minus (times 2508975 (expt h 2))) (times 3869184 e) (minus (times 
2650176 f)) (times 74496 g) (times 3927204 h) 1188800) (plus (times 28940625 g (
expt h 2)) (times 10308960 (expt g 2)) (times 85647600 e h) (times 50565600 f h)
 (minus (times 32858460 g h)) (minus (times 28820880 (expt h 2))) (minus (times 
42056448 e)) (times 29210112 f) (minus (times 3934272 g)) (minus (times 24997728
 h)) (minus 12951040)) (plus (times 337640625 (expt h 3)) (minus (times 88354320
 (expt g 2))) (minus (times 161452800 e h)) (times 5227200 f h) (times 251095920
 g h) (minus (times 585407340 (expt h 2))) (times 80838656 e) (minus (times 
57944064 f)) (times 17110784 g) (times 7329216 h) 25057280) (plus (times 360 (
expt e 2)) (minus (times 315 (expt g 2))) (minus (times 7200 e h)) (minus (times
 3780 f h)) (times 3648 e) (minus (times 2592 f)) (times 312 g) (times 2508 h) 
1120) (plus (times 160 e f) (times 2625 e h) (times 1190 f h) (minus (times 1584
 e)) (times 1056 f) (times 64 g) (minus (times 794 h)) (minus 480)) (plus (times
 9 (expt f 2)) (times 12 e) (minus (times 18 f)) (times 6 g) 5) (plus (times 6 e
 g) (minus (times 15 e h)) (minus (times 18 f h)) (times 14 h)) (plus (times 120
 f g) (times 1125 e h) (times 510 f h) (minus (times 528 e)) (times 352 f) (
minus (times 72 g)) (minus (times 258 h)) (minus 160)) (plus (times 4 a) (minus 
(times 9 f)) 7) (plus (times 4 b) (times 9 e)) (plus (times 4 c) (minus (times 7
 f)) 9) (plus (times 12 d) (times 15 e) (times 18 f) (minus 14)))
f5_groebner => (list (plus (times 165375 (expt g 3)) (minus (times 496080 (expt 
g 2))) (minus (times 351000 e h)) (minus (times 162000 f h)) (times 215280 g h) 
(minus (times 185760 (expt h 2))) (times 84864 e) (minus (times 66816 f)) (times
 146496 g) (times 99504 h) 24320) (plus (times 5788125 (expt g 2) h) (minus (
times 3168720 (expt g 2))) (minus (times 40701600 e h)) (minus (times 18003600 f
 h)) (minus (times 11207880 g h)) (times 3522960 (expt h 2)) (times 21674496 e) 
(minus (times 15508224 f)) (times 1609344 g) (times 13948656 h) 6759680) (plus (
times 20671875 e (expt h 2)) (minus (times 125280 (expt g 2))) (times 10761120 e
 h) (times 28132920 f h) (times 1042560 g h) (times 3225600 (expt h 2)) (minus (
times 9064704 e)) (times 6051456 f) (minus (times 293376 g)) (minus (times 
16186824 h)) (minus 2748800)) (plus (times 2480625 f (expt h 2)) (times 56880 (
expt g 2)) (minus (times 7931520 e h)) (minus (times 6281820 f h)) (minus (times
 41760 g h)) (minus (times 2508975 (expt h 2))) (times 3869184 e) (minus (times 
2650176 f)) (times 74496 g) (times 3927204 h) 1188800) (plus (times 28940625 g (
expt h 2)) (times 10308960 (expt g 2)) (times 85647600 e h) (times 50565600 f h)
 (minus (times 32858460 g h)) (minus (times 28820880 (expt h 2))) (minus (times 
42056448 e)) (times 29210112 f) (minus (times 3934272 g)) (minus (times 24997728
 h)) (minus 12951040)) (plus (times 337640625 (expt h 3)) (minus (times 88354320
 (expt g 2))) (minus (times 161452800 e h)) (times 5227200 f h) (times 251095920
 g h) (minus (times 585407340 (expt h 2))) (times 80838656 e) (minus (times 
57944064 f)) (times 17110784 g) (times 7329216 h) 25057280) (plus (times 360 (
expt e 2)) (minus (times 315 (expt g 2))) (minus (times 7200 e h)) (minus (times
 3780 f h)) (times 3648 e) (minus (times 2592 f)) (times 312 g) (times 2508 h) 
1120) (plus (times 160 e f) (times 2625 e h) (times 1190 f h) (minus (times 1584
 e)) (times 1056 f) (times 64 g) (minus (times 794 h)) (minus 480)) (plus (times
 9 (expt f 2)) (times 12 e) (minus (times 18 f)) (times 6 g) 5) (plus (times 6 e
 g) (minus (times 15 e h)) (minus (times 18 f h)) (times 14 h)) (plus (times 120
 f g) (times 1125 e h) (times 510 f h) (minus (times 528 e)) (times 352 f) (
minus (times 72 g)) (minus (times 258 h)) (minus 160)) (plus (times 4 a) (minus 
(times 9 f)) 7) (plus (times 4 b) (times 9 e)) (plus (times 4 c) (minus (times 7
 f)) 9) (plus (times 12 d) (times 15 e) (times 18 f) (minus 14)))

               3           2                                                  2
gb := {165375*g  - 496080*g  - 351000*e*h - 162000*f*h + 215280*g*h - 185760*h

        + 84864*e - 66816*f + 146496*g + 99504*h + 24320,

                2              2
       5788125*g *h - 3168720*g  - 40701600*e*h - 18003600*f*h - 11207880*g*h

                   2
        + 3522960*h  + 21674496*e - 15508224*f + 1609344*g + 13948656*h

        + 6759680,

                   2           2
       20671875*e*h  - 125280*g  + 10761120*e*h + 28132920*f*h + 1042560*g*h

                   2
        + 3225600*h  - 9064704*e + 6051456*f - 293376*g - 16186824*h - 2748800,

                  2          2
       2480625*f*h  + 56880*g  - 7931520*e*h - 6281820*f*h - 41760*g*h

                   2
        - 2508975*h  + 3869184*e - 2650176*f + 74496*g + 3927204*h + 1188800,

                   2             2
       28940625*g*h  + 10308960*g  + 85647600*e*h + 50565600*f*h - 32858460*g*h

                    2
        - 28820880*h  - 42056448*e + 29210112*f - 3934272*g - 24997728*h

        - 12951040,

                  3             2
       337640625*h  - 88354320*g  - 161452800*e*h + 5227200*f*h + 251095920*g*h

                     2
        - 585407340*h  + 80838656*e - 57944064*f + 17110784*g + 7329216*h

        + 25057280,

            2        2
       360*e  - 315*g  - 7200*e*h - 3780*f*h + 3648*e - 2592*f + 312*g + 2508*h

        + 1120,

       160*e*f + 2625*e*h + 1190*f*h - 1584*e + 1056*f + 64*g - 794*h - 480,

          2
       9*f  + 12*e - 18*f + 6*g + 5,

       6*e*g - 15*e*h - 18*f*h + 14*h,

       120*f*g + 1125*e*h + 510*f*h - 528*e + 352*f - 72*g - 258*h - 160,

       4*a - 9*f + 7,

       4*b + 9*e,

       4*c - 7*f + 9,

       12*d + 15*e + 18*f - 14}




Calling f5_groebner from reval1
Arg1: (system vars lex)
Calling f5_groebner_lp2lp from system!-startup
Arg1: ((plus (times x1 x2) x2) (plus (expt x1 2) (minus (expt x2 2))) (plus (
expt x1 2) x2 x3))
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x1 . 1) . #1=(((x2 . 1) . 1))) . #1#) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x1 . 1) . #1=(((x2 . 1) . 1))) . #1#)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((x2 . 1) . 1))
Arg2: (1 1 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (2 1 1 0)
Arg3: 1
poly_sf2poly1 => (p ((2 1 1 0)) (1) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 1 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 1 1 0)) (1) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x2 . 1) . 1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (1 0 1 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 1 0)) (1) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((1 0 1 0)) (1) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 1 1 0)) (1) 2)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 1 0)) (1) 1)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
poly_sf2poly1 => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
poly_sq2poly1 => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x1 . 2) . 1) ((x2 . 2) . -1)) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x1 . 2) . 1) ((x2 . 2) . -1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (2 2 0 0)
Arg3: 1
poly_sf2poly1 => (p ((2 2 0 0)) (1) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x2 . 2) . -1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -1
Arg2: (2 0 2 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 2 0)) (-1) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 2 0)) (-1) 2)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 2 0 0)) (1) 2)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 2 0)) (-1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
poly_sf2poly1 => (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
poly_sq2poly1 => (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x1 . 2) . 1) ((x2 . 1) . 1) ((x3 . 1) . 1)) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x1 . 2) . 1) ((x2 . 1) . 1) ((x3 . 1) . 1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (2 2 0 0)
Arg3: 1
poly_sf2poly1 => (p ((2 2 0 0)) (1) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x2 . 1) . 1) ((x3 . 1) . 1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (1 0 1 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 1 0)) (1) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x3 . 1) . 1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (1 0 0 1)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 1)) (1) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((1 0 0 1)) (1) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 1 0)) (1) 1)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 1)) (1) 1)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 1 0) (1 0 0 1)) (1 1) 1)
poly_sf2poly1 => (p ((1 0 1 0) (1 0 0 1)) (1 1) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 2 0 0)) (1) 2)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 1 0) (1 0 0 1)) (1 1) 1)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 2 0 . #1=(0)) (1 0 1 . #1#) (1 0 0 1)) (1 1 1) 2)
poly_sf2poly1 => (p ((2 2 0 . #1=(0)) (1 0 1 . #1#) (1 0 0 1)) (1 1 1) 2)
poly_sq2poly1 => (p ((2 2 0 . #1=(0)) (1 0 1 . #1#) (1 0 0 1)) (1 1 1) 2)
Calling f5_groebner_poly2poly from f5_groebner_lp2lp
Arg1: ((p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2) (p ((2 2 0 . #2=(0)) (2 0 2
 . #2#)) (1 -1) 2) (p ((2 2 0 . #3=(0)) (1 0 1 . #3#) (1 0 0 1)) (1 1 1) 2))
(p ((2 1 1 0) (1 0 1 0)) (1 1) 2)
(p ((2 2 0 0) (2 0 2 0)) (1 -1) 2)
(p ((2 2 0 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling core_constructmodule from f5_groebner_poly2poly
Arg1: ((p ((2 2 0 . #1=(0)) (1 0 1 . #1#) (1 0 0 1)) (1 1 1) 2) (p ((2 2 0 . #2=
(0)) (2 0 2 . #2#)) (1 -1) 2) (p ((2 1 1 . #3=(0)) (1 0 1 . #3#)) (1 1) 2))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 2 0 . #1=(0)) (1 0 1 . #1#) (1 0 0 1)) (1 1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 2 0 . #1=(0)) (1 0 1 . #1#) (1 0 0 1)) (1 1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 2 0 . #1=(0)) (1 0 1 . #1#) (1 0 0 1)) (1
 1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 1 0) (1 0 0 1)) (1 1) 2)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((2 0 2 0)) (-1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
core_constructmodule => ((lp (p (#3=(2 0 2 . #2=(0)) (1 0 1 0) (1 0 0 1)) (1 1 1
) 2) (sgn 0 (0 0 0 0))) (lp (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2) (sgn 1 
(0 0 0 0))) (lp (p ((2 2 0 . #2#) #3#) (1 -1) 2) (sgn 2 (0 0 0 0))))
Calling core_groebner1 from f5_groebner_poly2poly
Arg1: ((lp (p (#3=(2 0 2 . #2=(0)) (1 0 1 0) (1 0 0 1)) (1 1 1) 2) (sgn 0 (0 0 0
 0))) (lp (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2) (sgn 1 (0 0 0 0))) (lp (p
 ((2 2 0 . #2#) #3#) (1 -1) 2) (sgn 2 (0 0 0 0))))
(uwuw ((lp (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2) (sgn 0 (0 0 0 0))) (lp
(p ((2 1 1 0) (1 0 1 0)) (1 1) 2) (sgn 1 (0 0 0 0))) (lp (p ((2 2 0 0) (2 0 2 0)
) (1 -1) 2) (sgn 2 (0 0 0 0)))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_paircomb from poly_spoly
Arg1: (p ((1 0 1 0)) (1) 2)
Arg2: (1 0 1 0)
Arg3: 1
Arg4: (p ((1 0 1 0) (1 0 0 1)) (1 1) 2)
Arg5: (1 1 0 0)
Arg6: 1
poly_paircomb => (p ((2 1 1 0) (2 1 0 1) (2 0 2 0)) (-1 -1 1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 1 0) (2 1 0 1) (2 0 2 0)) (-1 -1 1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 1 0) (2 1 0 1) (2 0 2 0)) (-1 -1 1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 1 0) (2 1 0 1) (2 0 2 0)) (1 1 -1) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 1 0 1) (2 0 2 0)) (1 -1) 3)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((1 0 1 0)) (1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 2 0)) (-1) 2)
Arg2: (1 0 1 0)
Arg3: 1
Arg4: (p ((1 0 1 0)) (1) 2)
Arg5: (1 1 0 0)
Arg6: 1
poly_paircomb => (p ((2 1 1 0) (3 0 3 0)) (-1 -1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 1 0) (3 0 3 0)) (-1 -1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 1 0) (3 0 3 0)) (-1 -1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 1 0) (3 0 3 0)) (1 1) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 3 0)) (1) 3)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((1 0 1 0)) (1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 0 3 0) (1 0 1 0)) (1 -1) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((1 0 1 0)) (-1) 3)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((1 0 1 0) (1 0 0 1)) (1 1) 2)
Arg5: (1 0 1 0)
Arg6: 1
poly_paircomb => (p ((2 0 2 0) (2 0 1 1) (1 0 1 0)) (-1 -1 -1) 3)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 1 1) (1 0 1 0)) (-1 -1) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 1 0) (1 0 0 1)) (1 1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 1 1) (1 0 0 1)) (-1 1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 1 1) (1 0 0 1)) (-1 1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 1 1) (1 0 0 1)) (-1 1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 1 1) (1 0 0 1)) (1 -1) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 0 2 0)) (-1) 2)
Arg2: (1 0 0 1)
Arg3: 1
Arg4: (p ((2 0 2 0) (1 0 1 0)) (-1 -1) 3)
Arg5: (1 1 0 0)
Arg6: 1
poly_paircomb => (p ((3 1 2 0) (2 1 1 0) (3 0 2 1)) (1 1 -1) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 0) (2 1 1 0) (3 0 2 1)) (1 1 -1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 0) (2 1 1 0) (3 0 2 1)) (1 1 -1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 0) (2 1 1 0) (3 0 2 1)) (1 1 -1) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 1 1 0) (3 0 2 1)) (1 -1) 4)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((1 0 1 0)) (1) 2)
Arg5: (1 0 1 0)
Arg6: 1
poly_paircomb => (p ((2 1 1 0) (3 0 2 1) (2 0 2 0)) (1 -1 -1) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((3 0 2 1) (2 0 2 0)) (-1 -1) 4)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((1 0 1 0)) (1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 0 2 1) (2 0 2 0) (1 0 1 0)) (-1 -1 -1) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 2 0) (1 0 1 0)) (-1 -1) 4)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 1 0) (1 0 0 1)) (1 1) 2)
Arg5: (1 0 0 1)
Arg6: 1
poly_paircomb => (p ((2 0 2 0) (2 0 1 1) (1 0 1 0) (2 0 0 2)) (-1 1 -1 1) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 1 1) (1 0 1 0) (2 0 0 2)) (1 -1 1) 4)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 1 0) (1 0 0 1)) (1 1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 1 1) (2 0 0 2) (1 0 0 1)) (1 1 1) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((2 0 0 2) (1 0 0 1)) (1 1) 4)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((1 0 0 1)) (-1) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 1 1) (2 0 0 2) (1 0 0 1)) (1 1 1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 1 1) (2 0 0 2) (1 0 0 1)) (1 1 1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 1 1) (2 0 0 2) (1 0 0 1)) (1 1 1) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (1 -1) 2)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 2 0 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 1 0 1) (2 0 2 0) (1 0 1 0)) (1 -1 -1) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 1 0 1) (1 0 0 1)) (1 1) 3)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((2 0 1 1) (2 0 0 2) (1 0 0 1)) (1 1 1) 4)
Arg2: (0 0 0 0)
Arg3: 1
Arg4: (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((2 0 1 1) (1 0 0 1)) (1 -1) 4)
Calling core_standardizeoutput from core_groebner1
Arg1: ((lp (p ((2 2 0 . #3=(0)) . #4=((1 0 1 0) . #2=(#5=(1 0 0 1)))) (1 1 1) 2)
 (sgn 2 (0 0 0 0))) (lp (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2) (sgn 1 (0 0
 0 0))) (lp (p ((2 1 0 1) . #2#) (1 1) 3) (sgn 1 (1 0 1 0))) (lp (p ((2 0 2 . #3
#) . #4#) (1 1 1) 2) (sgn 0 (0 0 0 0))) (lp (p ((2 0 1 1) #5#) (1 -1) 4) (sgn 2 
(1 0 0 1))) (lp (p ((2 0 0 2) #5#) (1 2) 4) (sgn 2 (1 0 1 0))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 2 0 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 2 0 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 2 0 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 1 0 1) (1 0 0 1)) (1 1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 1 0 1) (1 0 0 1)) (1 1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 1 0 1) (1 0 0 1)) (1 1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 2 0) (1 0 1 0) (1 0 0 1)) (1 1 1) 2)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 1 1) (1 0 0 1)) (1 -1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 1 1) (1 0 0 1)) (1 -1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 1 1) (1 0 0 1)) (1 -1) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((2 0 0 2) (1 0 0 1)) (1 2) 4)
core_standardizeoutput => ((lp (p ((2 2 0 . #3=(0)) . #4=((1 0 1 0) . #2=(#5=(1 
0 0 1)))) (1 1 1) 2) (sgn 2 (0 0 0 0))) (lp (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) 
(1 1) 2) (sgn 1 (0 0 0 0))) (lp (p ((2 1 0 1) . #2#) (1 1) 3) (sgn 1 (1 0 1 0)))
 (lp (p ((2 0 2 . #3#) . #4#) (1 1 1) 2) (sgn 0 (0 0 0 0))) (lp (p ((2 0 1 1) #5
#) (1 -1) 4) (sgn 2 (1 0 0 1))) (lp (p ((2 0 0 2) #5#) (1 2) 4) (sgn 2 (1 0 1 0)
)))
core_groebner1 => ((lp (p ((2 2 0 . #3=(0)) . #4=((1 0 1 0) . #2=(#5=(1 0 0 1)))
) (1 1 1) 2) (sgn 2 (0 0 0 0))) (lp (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2)
 (sgn 1 (0 0 0 0))) (lp (p ((2 1 0 1) . #2#) (1 1) 3) (sgn 1 (1 0 1 0))) (lp (p 
((2 0 2 . #3#) . #4#) (1 1 1) 2) (sgn 0 (0 0 0 0))) (lp (p ((2 0 1 1) #5#) (1 -1
) 4) (sgn 2 (1 0 0 1))) (lp (p ((2 0 0 2) #5#) (1 2) 4) (sgn 2 (1 0 1 0))))
f5_groebner_poly2poly => ((p ((2 2 0 . #3=(0)) . #4=((1 0 1 0) . #2=(#5=(1 0 0 1
)))) (1 1 1) 2) (p ((2 1 1 . #1=(0)) (1 0 1 . #1#)) (1 1) 2) (p ((2 1 0 1) . #2
#) (1 1) 3) (p ((2 0 2 . #3#) . #4#) (1 1 1) 2) (p ((2 0 1 1) #5#) (1 -1) 4) (p 
((2 0 0 2) #5#) (1 2) 4))
f5_groebner_lp2lp => ((plus (expt x1 2) x2 x3) (plus (times x1 x2) x2) (plus (
times x1 x3) x3) (plus (expt x2 2) x2 x3) (plus (times x2 x3) (minus x3)) (plus 
(expt x3 2) (times 2 x3)))
f5_groebner => (list (plus (expt x1 2) x2 x3) (plus (times x1 x2) x2) (plus (
times x1 x3) x3) (plus (expt x2 2) x2 x3) (plus (times x2 x3) (minus x3)) (plus 
(expt x3 2) (times 2 x3)))

         2
gb := {x1  + x2 + x3,

       x1*x2 + x2,

       x1*x3 + x3,

         2
       x2  + x2 + x3,

       x2*x3 - x3,

         2
       x3  + 2*x3}


             2
truegb := {x1  + x2 + x3,

           x1*x2 + x2,

           x1*x3 + x3,

             2
           x2  + x2 + x3,

           x2*x3 - x3,

             2
           x3  + 2*x3}




Calling f5_groebner from reval1
Arg1: (system vars revgradlex)
Calling f5_groebner_lp2lp from system!-startup
Arg1: ((plus (minus (times 10 (expt x 2))) (times x (expt y 2)) (minus (times 11
 (expt y 2)))) (plus (expt x 3) (minus x) (expt y 3)) (plus x (minus (expt z 4))
))
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x . 2) . -10) ((x . 1) (#1=(y . 2) . 1)) (#1# . -11)) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x . 2) . -10) ((x . 1) (#1=(y . 2) . 1)) (#1# . -11))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -10
Arg2: (2 2 0 0)
Arg3: 1
poly_sf2poly1 => (p ((2 2 0 0)) (-10) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x . 1) (#1=(y . 2) . 1)) (#1# . -11))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((y . 2) . 1))
Arg2: (1 1 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (3 1 2 0)
Arg3: 1
poly_sf2poly1 => (p ((3 1 2 0)) (1) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (1 1 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((3 1 2 0)) (1) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((y . 2) . -11))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -11
Arg2: (2 0 2 0)
Arg3: 1
poly_sf2poly1 => (p ((2 0 2 0)) (-11) 2)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((2 0 2 0)) (-11) 2)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 1 2 0)) (1) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((2 0 2 0)) (-11) 2)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 1 2 . #1=(0)) (2 0 2 . #1#)) (1 -11) 3)
poly_sf2poly1 => (p ((3 1 2 . #1=(0)) (2 0 2 . #1#)) (1 -11) 3)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((2 2 0 0)) (-10) 2)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((3 1 2 . #1=(0)) (2 0 2 . #1#)) (1 -11) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3
)
poly_sf2poly1 => (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3
)
poly_sq2poly1 => (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3
)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x . 3) . 1) ((x . 1) . -1) ((y . 3) . 1)) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x . 3) . 1) ((x . 1) . -1) ((y . 3) . 1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (3 3 0 0)
Arg3: 1
poly_sf2poly1 => (p ((3 3 0 0)) (1) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x . 1) . -1) ((y . 3) . 1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -1
Arg2: (1 1 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 1 0 0)) (-1) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((y . 3) . 1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (3 0 3 0)
Arg3: 1
poly_sf2poly1 => (p ((3 0 3 0)) (1) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((3 0 3 0)) (1) 3)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 1 0 0)) (-1) 1)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((3 0 3 0)) (1) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 0 3 . #1=(0)) (1 1 0 . #1#)) (1 -1) 3)
poly_sf2poly1 => (p ((3 0 3 . #1=(0)) (1 1 0 . #1#)) (1 -1) 3)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 3 0 0)) (1) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((3 0 3 . #1=(0)) (1 1 0 . #1#)) (1 -1) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1)
 3)
poly_sf2poly1 => (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1)
 3)
poly_sq2poly1 => (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1)
 3)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x . 1) . 1) ((z . 4) . -1)) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x . 1) . 1) ((z . 4) . -1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 1
Arg2: (1 1 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 1 0 0)) (1) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((z . 4) . -1))
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -1
Arg2: (4 0 0 4)
Arg3: 1
poly_sf2poly1 => (p ((4 0 0 4)) (-1) 4)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((4 0 0 4)) (-1) 4)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 1 0 0)) (1) 1)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((4 0 0 4)) (-1) 4)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((4 0 0 4) (1 1 0 0)) (-1 1) 4)
poly_sf2poly1 => (p ((4 0 0 4) (1 1 0 0)) (-1 1) 4)
poly_sq2poly1 => (p ((4 0 0 4) (1 1 0 0)) (-1 1) 4)
Calling f5_groebner_poly2poly from f5_groebner_lp2lp
Arg1: ((p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3) (p ((3 3
 . #3=(0 . #2=(0))) (3 0 3 . #2#) (1 1 . #3#)) (1 1 -1) 3) (p ((4 0 0 4) (1 1 0 
0)) (-1 1) 4))
(p ((3 1 2 0) (2 2 0 0) (2 0 2 0)) (1 -10 -11) 3)
(p ((3 3 0 0) (3 0 3 0) (1 1 0 0)) (1 1 -1) 3)
(p ((4 0 0 4) (1 1 0 0)) (-1 1) 4)
Calling core_constructmodule from f5_groebner_poly2poly
Arg1: ((p ((4 0 0 4) (1 1 0 0)) (-1 1) 4) (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #
1#) (1 1 . #2#)) (1 1 -1) 3) (p ((3 1 2 . #3=(0)) (2 2 0 . #3#) (2 0 2 . #3#)) (
1 -10 -11) 3))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)
) (1 -10 -11) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1
 . #2#)) (1 1 -1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 4) (1 1 0 0)) (-1 1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 4) (1 1 0 0)) (-1 1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)
) (1 -10 -11) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1
 . #2#)) (1 1 -1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
core_constructmodule => ((lp (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (
1 -10 -11) 3) (sgn 0 (0 0 0 0))) (lp (p ((3 3 . #3=(0 . #2=(0))) (3 0 3 . #2#) (
1 1 . #3#)) (1 1 -1) 3) (sgn 1 (0 0 0 0))) (lp (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4
) (sgn 2 (0 0 0 0))))
Calling core_groebner1 from f5_groebner_poly2poly
Arg1: ((lp (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3) (sgn
 0 (0 0 0 0))) (lp (p ((3 3 . #3=(0 . #2=(0))) (3 0 3 . #2#) (1 1 . #3#)) (1 1 
-1) 3) (sgn 1 (0 0 0 0))) (lp (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4) (sgn 2 (0 0 0 0
))))
(uwuw ((lp (p ((3 1 2 0) (2 2 0 0) (2 0 2 0)) (1 -10 -11) 3) (sgn 0 (0 0 0 0)))
(lp (p ((3 3 0 0) (3 0 3 0) (1 1 0 0)) (1 1 -1) 3) (sgn 1 (0 0 0 0))) (lp (p ((4
0 0 4) (1 1 0 0)) (1 -1) 4) (sgn 2 (0 0 0 0)))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)
) (1 -10 -11) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1
 . #2#)) (1 1 -1) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 0 3 . #1=(0)) (1 1 0 . #1#)) (1 -1) 3)
Arg2: (2 0 2 0)
Arg3: 1
Arg4: (p ((2 2 0 . #1=(0)) (2 0 2 . #1#)) (-10 -11) 3)
Arg5: (2 2 0 0)
Arg6: 1
poly_paircomb => (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 10 11 -1) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 10 11 -1) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 10 11 -1) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 
10 11 -1) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 10 11 -1) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 10 11 -1) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 
10 11 -1) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 5 0) (4 4 0 0) (4 2 2 0) (3 1 2 0)) (1 10 11 -1) 5)
Arg2: (0 0 0 0)
Arg3: 10
Arg4: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
Arg5: (1 1 0 0)
Arg6: 1
poly_paircomb => (p ((5 0 5 0) (4 2 2 0) (4 1 3 0) (3 1 2 0) (2 2 0 0)) (1 11 
-10 -1 10) 5)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 5 0) (4 2 2 0) (4 1 3 0) (3 1 2 0) (2 2 0 0)) (1 11 -10 -1 10) 5)
Arg2: (0 0 0 0)
Arg3: 11
Arg4: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
Arg5: (1 1 0 0)
Arg6: 1
poly_paircomb => (p ((5 0 5 0) (4 1 3 0) (3 3 0 0) (3 1 2 0) (2 2 0 0)) (1 -10 
110 120 10) 5)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 5 0) (4 1 3 0) (3 3 0 0) (3 1 2 0) (2 2 0 0)) (1 -10 110 120 10) 
5)
Arg2: (0 0 0 0)
Arg3: 110
Arg4: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((5 0 5 0) (4 1 3 0) (3 1 2 0) (3 0 3 . #1=(0)) (2 2 0 0) (1
 1 0 . #1#)) (1 -10 120 -110 10 110) 5)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 5 0) (4 1 3 0) (3 1 2 0) (3 0 3 . #1=(0)) (2 2 0 0) (1 1 0 . #1#)
) (1 -10 120 -110 10 110) 5)
Arg2: (0 0 0 0)
Arg3: -10
Arg4: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
Arg5: (1 0 1 0)
Arg6: 1
poly_paircomb => (p ((5 0 5 0) (3 2 1 0) (3 1 2 0) (3 0 3 0) (2 2 0 0) (1 1 0 0)
) (1 -100 120 -220 10 110) 5)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 5 0) (3 2 1 0) (3 1 2 0) (3 0 3 0) (2 2 0 0) (1 1 0 0)) (1 -100 
120 -220 10 110) 5)
Arg2: (0 0 0 0)
Arg3: 120
Arg4: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((5 0 5 0) (3 2 1 0) (3 0 3 0) (2 2 0 . #1=(0)) (2 0 2 . #1
#) (1 1 0 0)) (1 -100 -220 1210 1320 110) 5)
Calling core_standardizeoutput from core_groebner1
Arg1: ((lp (p ((5 0 5 0) (3 2 1 0) (3 0 3 0) #5=(2 2 0 . #1=(0)) #6=(2 0 2 . #1
#) . #4=((1 1 . #2=(0 . #3=(0))))) (1 -100 -220 1210 1320 110) 5) (sgn 1 (2 0 2 
0))) (lp (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4) (sgn 2 (0 0 0 0))) (lp (p ((3 3 . #2
#) (3 0 3 . #3#) . #4#) (1 1 -1) 3) (sgn 1 (0 0 0 0))) (lp (p ((3 1 2 . #1#) #5#
 #6#) (1 -10 -11) 3) (sgn 0 (0 0 0 0))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 5 0) (3 2 1 0) (3 0 3 0) (2 2 0 . #1=(0)) (2 0 2 . #1#) (1 1 0 0)
) (1 -100 -220 1210 1320 110) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 5 0) (3 2 1 0) (3 0 3 0) (2 2 0 . #1=(0)) (2 0 2 . #1#) (1 1 0 0)
) (1 -100 -220 1210 1320 110) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 5 0) (3 2 1 0) (3 0 3 0) (2 2 0 . #1=(0
)) (2 0 2 . #1#) (1 1 0 0)) (1 -100 -220 1210 1320 110) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1 . #2#)) (1 1 -1) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 3 . #2=(0 . #1=(0))) (3 0 3 . #1#) (1 1
 . #2#)) (1 1 -1) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)) (1 -10 -11) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (2 2 0 . #1#) (2 0 2 . #1#)
) (1 -10 -11) 3)
core_standardizeoutput => ((lp (p ((5 0 5 0) (3 2 1 0) (3 0 3 0) #5=(2 2 0 . #1=
(0)) #6=(2 0 2 . #1#) . #4=((1 1 . #2=(0 . #3=(0))))) (1 -100 -220 1210 1320 110
) 5) (sgn 1 (2 0 2 0))) (lp (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4) (sgn 2 (0 0 0 0))
) (lp (p ((3 3 . #2#) (3 0 3 . #3#) . #4#) (1 1 -1) 3) (sgn 1 (0 0 0 0))) (lp (p
 ((3 1 2 . #1#) #5# #6#) (1 -10 -11) 3) (sgn 0 (0 0 0 0))))
core_groebner1 => ((lp (p ((5 0 5 0) (3 2 1 0) (3 0 3 0) #5=(2 2 0 . #1=(0)) #6=
(2 0 2 . #1#) . #4=((1 1 . #2=(0 . #3=(0))))) (1 -100 -220 1210 1320 110) 5) (
sgn 1 (2 0 2 0))) (lp (p ((4 0 0 4) (1 1 0 0)) (1 -1) 4) (sgn 2 (0 0 0 0))) (lp 
(p ((3 3 . #2#) (3 0 3 . #3#) . #4#) (1 1 -1) 3) (sgn 1 (0 0 0 0))) (lp (p ((3 1
 2 . #1#) #5# #6#) (1 -10 -11) 3) (sgn 0 (0 0 0 0))))
f5_groebner_poly2poly => ((p ((5 0 5 0) (3 2 1 0) (3 0 3 0) #5=(2 2 0 . #1=(0)) 
#6=(2 0 2 . #1#) . #4=((1 1 . #2=(0 . #3=(0))))) (1 -100 -220 1210 1320 110) 5) 
(p ((4 0 0 4) (1 1 0 0)) (1 -1) 4) (p ((3 3 . #2#) (3 0 3 . #3#) . #4#) (1 1 -1)
 3) (p ((3 1 2 . #1#) #5# #6#) (1 -10 -11) 3))
f5_groebner_lp2lp => ((plus (expt y 5) (minus (times 100 (expt x 2) y)) (minus (
times 220 (expt y 3))) (times 1210 (expt x 2)) (times 1320 (expt y 2)) (times 
110 x)) (plus (expt z 4) (minus x)) (plus (expt x 3) (expt y 3) (minus x)) (plus
 (times x (expt y 2)) (minus (times 10 (expt x 2))) (minus (times 11 (expt y 2))
)))
f5_groebner => (list (plus (expt y 5) (minus (times 100 (expt x 2) y)) (minus (
times 220 (expt y 3))) (times 1210 (expt x 2)) (times 1320 (expt y 2)) (times 
110 x)) (plus (expt z 4) (minus x)) (plus (expt x 3) (expt y 3) (minus x)) (plus
 (times x (expt y 2)) (minus (times 10 (expt x 2))) (minus (times 11 (expt y 2))
)))



Calling f5_groebner from reval1
Arg1: (system vars revgradlex)
Calling f5_groebner_lp2lp from system!-startup
Arg1: ((plus (times 10 (expt x1 2) x3) (times 10 (expt x2 2) x3) (minus (times 
11 x3)) 10) (plus (times 10 x1 (expt x2 2)) (times 10 x1 (expt x3 2)) (minus (
times 11 x1)) 10) (plus (times 10 (expt x1 2) x2) (times 10 x2 (expt x3 2)) (
minus (times 11 x2)) 10))
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x1 . 2) (#1=(x3 . 1) . 10)) ((x2 . 2) (#1# . 10)) (#1# . -11) . 10) . 
1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x1 . 2) (#1=(x3 . 1) . 10)) ((x2 . 2) (#1# . 10)) (#1# . -11) . 10)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((x3 . 1) . 10))
Arg2: (2 2 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 10
Arg2: (3 2 0 1)
Arg3: 1
poly_sf2poly1 => (p ((3 2 0 1)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (2 2 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((3 2 0 1)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x2 . 2) (#1=(x3 . 1) . 10)) (#1# . -11) . 10)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((x3 . 1) . 10))
Arg2: (2 0 2 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 10
Arg2: (3 0 2 1)
Arg3: 1
poly_sf2poly1 => (p ((3 0 2 1)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (2 0 2 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((3 0 2 1)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x3 . 1) . -11) . 10)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: -11
Arg2: (1 0 0 1)
Arg3: 1
poly_sf2poly1 => (p ((1 0 0 1)) (-11) 1)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: 10
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((0 0 0 0)) (10) 0)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((1 0 0 1)) (-11) 1)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((0 0 0 0)) (10) 0)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((1 0 0 1) (0 0 0 0)) (-11 10) 1)
poly_sf2poly1 => (p ((1 0 0 1) (0 0 0 0)) (-11 10) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 0 2 1)) (10) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 0 1) (0 0 0 0)) (-11 10) 1)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
poly_sf2poly1 => (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 2 0 1)) (10) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
poly_sf2poly1 => (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
poly_sq2poly1 => (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x1 . 1) ((x2 . 2) . 10) ((x3 . 2) . 10) . -11) . 10) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x1 . 1) ((x2 . 2) . 10) ((x3 . 2) . 10) . -11) . 10)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((x2 . 2) . 10) ((x3 . 2) . 10) . -11)
Arg2: (1 1 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 10
Arg2: (3 1 2 0)
Arg3: 1
poly_sf2poly1 => (p ((3 1 2 0)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x3 . 2) . 10) . -11)
Arg2: (1 1 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 10
Arg2: (3 1 0 2)
Arg3: 1
poly_sf2poly1 => (p ((3 1 0 2)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: -11
Arg2: (1 1 0 0)
Arg3: 1
poly_sf2poly1 => (p ((1 1 0 0)) (-11) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 1 0 2)) (10) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 1 0 0)) (-11) 1)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 1 0 2) (1 1 0 0)) (10 -11) 3)
poly_sf2poly1 => (p ((3 1 0 2) (1 1 0 0)) (10 -11) 3)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 1 2 0)) (10) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((3 1 0 2) (1 1 0 0)) (10 -11) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 0 . #1#)) (10 10 -11) 3)
poly_sf2poly1 => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 0 . #1#)) (10 10 -11) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: 10
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((0 0 0 0)) (10) 0)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 0 . #1#)) (10 10 -11) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((0 0 0 0)) (10) 0)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)
) (10 10 -11 10) 3)
poly_sf2poly1 => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)
) (10 10 -11 10) 3)
poly_sq2poly1 => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)
) (10 10 -11 10) 3)
Calling poly_sq2poly1 from f5_groebner_lp2lp
Arg1: ((((x1 . 2) (#1=(x2 . 1) . 10)) (#1# ((x3 . 2) . 10) . -11) . 10) . 1)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sq2poly1
Arg1: (((x1 . 2) (#1=(x2 . 1) . 10)) (#1# ((x3 . 2) . 10) . -11) . 10)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((x2 . 1) . 10))
Arg2: (2 2 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 10
Arg2: (3 2 1 0)
Arg3: 1
poly_sf2poly1 => (p ((3 2 1 0)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: nil
Arg2: (2 2 0 0)
Arg3: 1
poly_sf2poly1 => (p nil nil 0)
poly_sf2poly1 => (p ((3 2 1 0)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: (((x2 . 1) ((x3 . 2) . 10) . -11) . 10)
Arg2: (0 0 0 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: (((x3 . 2) . 10) . -11)
Arg2: (1 0 1 0)
Arg3: 1
Calling poly_sf2poly1 from poly_sf2poly2
Arg1: 10
Arg2: (3 0 1 2)
Arg3: 1
poly_sf2poly1 => (p ((3 0 1 2)) (10) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: -11
Arg2: (1 0 1 0)
Arg3: 1
poly_sf2poly1 => (p ((1 0 1 0)) (-11) 1)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 0 1 2)) (10) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((1 0 1 0)) (-11) 1)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 0 1 2) (1 0 1 0)) (10 -11) 3)
poly_sf2poly1 => (p ((3 0 1 2) (1 0 1 0)) (10 -11) 3)
Calling poly_sf2poly1 from poly_sf2poly1
Arg1: 10
Arg2: (0 0 0 0)
Arg3: 1
poly_sf2poly1 => (p ((0 0 0 0)) (10) 0)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 0 1 2) (1 0 1 0)) (10 -11) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((0 0 0 0)) (10) 0)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 0 1 2) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (10 -11 10) 3)
poly_sf2poly1 => (p ((3 0 1 2) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (10 -11 10) 3)
Calling poly_paircomb from poly_sf2poly1
Arg1: (p ((3 2 1 0)) (10) 3)
Arg2: (0 0 0 0)
Arg3: -1
Arg4: (p ((3 0 1 2) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (10 -11 10) 3)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10
 10 -11 10) 3)
poly_sf2poly1 => (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10
 10 -11 10) 3)
poly_sq2poly1 => (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10
 10 -11 10) 3)
Calling f5_groebner_poly2poly from f5_groebner_lp2lp
Arg1: ((p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3) (p ((3 1 2
 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 -11 10) 3) (p ((3 
2 1 . #3=(0)) (3 0 1 2) (1 0 1 . #3#) (0 0 0 . #3#)) (10 10 -11 10) 3))
(p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
(p ((3 1 2 0) (3 1 0 2) (1 1 0 0) (0 0 0 0)) (10 10 -11 10) 3)
(p ((3 2 1 0) (3 0 1 2) (1 0 1 0) (0 0 0 0)) (10 10 -11 10) 3)
Calling core_constructmodule from f5_groebner_poly2poly
Arg1: ((p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10
) 3) (p ((3 1 2 . #2=(0)) (3 1 0 2) (1 1 . #3=(0 . #2#)) (0 0 . #3#)) (10 10 -11
 10) 3) (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10
 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1
#)) (0 0 . #2#)) (10 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 
0 0 . #1#)) (10 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10
 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1
#)) (0 0 . #2#)) (10 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 
0 0 . #1#)) (10 10 -11 10) 3)
core_constructmodule => ((lp (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10
 -11 10) 3) (sgn 0 (0 0 0 0))) (lp (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0
 . #1#)) (0 0 . #2#)) (10 10 -11 10) 3) (sgn 1 (0 0 0 0))) (lp (p ((3 2 1 . #3=(
0)) (3 0 1 2) (1 0 1 . #3#) (0 0 0 . #3#)) (10 10 -11 10) 3) (sgn 2 (0 0 0 0))))
Calling core_groebner1 from f5_groebner_poly2poly
Arg1: ((lp (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3) (sgn 0
 (0 0 0 0))) (lp (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)
) (10 10 -11 10) 3) (sgn 1 (0 0 0 0))) (lp (p ((3 2 1 . #3=(0)) (3 0 1 2) (1 0 1
 . #3#) (0 0 0 . #3#)) (10 10 -11 10) 3) (sgn 2 (0 0 0 0))))
(uwuw ((lp (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3) (sgn 0
(0 0 0 0))) (lp (p ((3 1 2 0) (3 1 0 2) (1 1 0 0) (0 0 0 0)) (10 10 -11 10) 3) (
sgn 1 (0 0 0 0))) (lp (p ((3 2 1 0) (3 0 1 2) (1 0 1 0) (0 0 0 0)) (10 10 -11 10
) 3) (sgn 2 (0 0 0 0)))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10
 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1
#)) (0 0 . #2#)) (10 10 -11 10) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 1 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (10 -11 10) 3)
Arg2: (2 1 0 1)
Arg3: 10
Arg4: (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
Arg5: (2 0 2 0)
Arg6: 10
poly_paircomb => (p ((5 0 4 1) (5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)
) (-100 100 -110 110 -100 100) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 4 1) (5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (-100 100
 -110 110 -100 100) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 4 1) (5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (-100 100
 -110 110 -100 100) 5)
poly_contentputin => 10
poly_normalizebycontentputin => (p ((5 0 4 1) (5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0
 2 0) (2 1 0 1)) (10 -10 11 -11 10 -10) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 4 1) (5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (10 -10 
11 -11 10 -10) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 4 1) (5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (10 -10 
11 -11 10 -10) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 4 1) (5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0
 2 0) (2 1 0 1)) (10 -10 11 -11 10 -10) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 
0 0 . #1#)) (10 10 -11 10) 3)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 0 1 2) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (10 -11 10) 3)
Arg2: (1 0 0 1)
Arg3: 10
Arg4: (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
Arg5: (1 0 1 0)
Arg6: 10
poly_paircomb => (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (-100 100 -100 100
) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (-100 100 -100 100) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (-100 100 -100 100) 4)
poly_contentputin => 100
poly_normalizebycontentputin => (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 
-1 1 -1) 4)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 0 1 2) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (10 -11 10) 3)
Arg2: (1 0 1 0)
Arg3: 10
Arg4: (p ((3 1 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (10 -11 10) 3)
Arg5: (1 1 0 0)
Arg6: 10
poly_paircomb => (p ((4 2 0 2) (4 0 2 2) (2 2 0 0) (2 0 2 0) (1 1 0 0) (1 0 1 0)
) (-100 100 110 -110 -100 100) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 2 0 2) (4 0 2 2) (2 2 0 0) (2 0 2 0) (1 1 0 0) (1 0 1 0)) (-100 100
 110 -110 -100 100) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 2 0 2) (4 0 2 2) (2 2 0 0) (2 0 2 0) (1 1 0 0) (1 0 1 0)) (-100 100
 110 -110 -100 100) 4)
poly_contentputin => 10
poly_normalizebycontentputin => (p ((4 2 0 2) (4 0 2 2) (2 2 0 0) (2 0 2 0) (1 1
 0 0) (1 0 1 0)) (10 -10 -11 11 10 -10) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 
-1 1 -1) 4)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (1 1 0 0) (1 0 1 0)) (-10 -11 11 10 -10)
 4)
Arg2: (0 0 0 0)
Arg3: 10
Arg4: (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
Arg5: (1 0 0 1)
Arg6: 10
poly_paircomb => (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0)
 (1 0 0 1)) (-200 -110 110 110 100 -100 -100) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (-200 -110 110 110 100 -100 -100) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (-200 -110 110 110 100 -100 -100) 4)
poly_contentputin => 10
poly_normalizebycontentputin => (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1
 0 0) (1 0 1 0) (1 0 0 1)) (20 11 -11 -11 -10 10 10) 4)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1)) (11 -11 
-11 -10 10 10) 4)
Arg2: (1 0 1 0)
Arg3: 20
Arg4: (p ((4 0 1 3) (1 0 1 0) (1 0 0 1)) (-1 1 -1) 4)
Arg5: (1 0 0 1)
Arg6: 1
poly_paircomb => (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0)
 (2 0 1 1) (2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) 
(2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) 
(2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1
 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) 
(2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) 
(2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1
 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
Calling poly_paircomb from poly_spoly
Arg1: (p ((2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1)) (11 -11 
-11 -10 10 10) 4)
Arg2: (1 1 0 0)
Arg3: 20
Arg4: (p ((3 1 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (10 -11 10) 3)
Arg5: (2 0 0 2)
Arg6: 10
poly_paircomb => (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2 0 0) (2 1 1 0)
 (2 1 0 1) (2 0 0 2)) (-200 110 -110 110 -100 100 100 -200) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) 
(2 0 0 2)) (-200 110 -110 110 -100 100 100 -200) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) 
(2 0 0 2)) (-200 110 -110 110 -100 100 100 -200) 5)
poly_contentputin => 10
poly_normalizebycontentputin => (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2
 0 0) (2 1 1 0) (2 1 0 1) (2 0 0 2)) (20 -11 11 -11 10 -10 -10 20) 5)
Calling poly_paircomb from poly_spoly
Arg1: (p ((4 0 1 3) (1 0 1 0) (1 0 0 1)) (-1 1 -1) 4)
Arg2: (1 1 0 0)
Arg3: 1
Arg4: (p ((3 1 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (10 -11 10) 3)
Arg5: (2 0 1 1)
Arg6: 10
poly_paircomb => (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (-20 11 
10 -10 -10) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (-20 11 10 -10 -10)
 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (-20 11 10 -10 -10)
 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0
 1 1)) (20 -11 -10 10 10) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (20 -11 -10 10 10) 
5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (20 -11 -10 10 10) 
5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0
 1 1)) (20 -11 -10 10 10) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) 
(2 0 0 2)) (20 -11 11 -11 10 -10 -10 20) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) 
(2 0 0 2)) (20 -11 11 -11 10 -10 -10 20) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2
 0 0) (2 1 1 0) (2 1 0 1) (2 0 0 2)) (20 -11 11 -11 10 -10 -10 20) 5)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2))
 (11 -11 -11 -10 10 -10 20) 5)
Arg2: (1 0 1 0)
Arg3: 20
Arg4: (p ((2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1)) (11 -11 
-11 -10 10 10) 4)
Arg5: (2 0 0 2)
Arg6: 20
poly_paircomb => (p ((4 2 2 0) (4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0)
 (3 0 2 1) (3 1 0 2) (3 0 1 2) (3 0 0 3)) (220 -220 -220 220 -200 200 -200 200 
200 -200) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 2 2 0) (4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1) 
(3 1 0 2) (3 0 1 2) (3 0 0 3)) (220 -220 -220 220 -200 200 -200 200 200 -200) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 2 2 0) (4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1) 
(3 1 0 2) (3 0 1 2) (3 0 0 3)) (220 -220 -220 220 -200 200 -200 200 200 -200) 6)
poly_contentputin => 20
poly_normalizebycontentputin => (p ((4 2 2 0) (4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1
 2 0) (3 0 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) (3 0 0 3)) (11 -11 -11 11 -10 10 
-10 10 10 -10) 6)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1) (3 1 0 2) 
(3 0 1 2) (3 0 0 3)) (-11 -11 11 -10 10 -10 10 10 -10) 6)
Arg2: (0 0 0 0)
Arg3: 11
Arg4: (p ((3 1 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (10 -11 10) 3)
Arg5: (1 1 0 0)
Arg6: 10
poly_paircomb => (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1)
 (3 1 0 2) (3 0 1 2) (3 0 0 3) (2 2 0 0) (1 1 0 0)) (-110 -220 110 -100 100 -100
 100 100 -100 121 -110) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1) (3 1 0 2) 
(3 0 1 2) (3 0 0 3) (2 2 0 0) (1 1 0 0)) (-110 -220 110 -100 100 -100 100 100 
-100 121 -110) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1) (3 1 0 2) 
(3 0 1 2) (3 0 0 3) (2 2 0 0) (1 1 0 0)) (-110 -220 110 -100 100 -100 100 100 
-100 121 -110) 6)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0
 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) (3 0 0 3) (2 2 0 0) (1 1 0 0)) (110 220 -110
 100 -100 100 -100 -100 100 -121 110) 6)
Calling poly_paircomb from poly_spoly
Arg1: (p ((4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) 
(3 0 0 3) (2 2 0 0) (1 1 0 0)) (220 -110 100 -100 100 -100 -100 100 -121 110) 6)
Arg2: (1 0 0 1)
Arg3: 110
Arg4: (p ((5 2 0 3) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (-10 11 -11 10 -10)
 5)
Arg5: (0 0 0 0)
Arg6: 10
poly_paircomb => (p ((5 2 0 3) (5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3)
 (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (3300 -1100 1000 
-1000 1000 -1000 -1000 1000 -2420 1210 -1100 2200) 7)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 2 0 3) (5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) 
(4 0 0 4) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (3300 -1100 1000 -1000 1000 
-1000 -1000 1000 -2420 1210 -1100 2200) 7)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 2 0 3) (5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) 
(4 0 0 4) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (3300 -1100 1000 -1000 1000 
-1000 -1000 1000 -2420 1210 -1100 2200) 7)
poly_contentputin => 10
poly_normalizebycontentputin => (p ((5 2 0 3) (5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0
 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (
330 -110 100 -100 100 -100 -100 100 -242 121 -110 220) 7)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) 
(3 2 0 1) (3 0 2 1) (2 0 2 0) (2 1 0 1)) (-110 100 -100 100 -100 -100 100 -242 
121 -110 220) 7)
Arg2: (0 0 0 0)
Arg3: 330
Arg4: (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
Arg5: (2 0 0 2)
Arg6: 10
poly_paircomb => (p ((5 0 2 3) (5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3)
 (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 0 2)
) (-3300 -1100 1000 -1000 1000 -1000 -1000 1000 -2420 1210 3630 -1100 2200 -3300
) 7)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) 
(3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 0 2)) (-1100 1000 -1000 
1000 -1000 -1000 1000 -2420 1210 3630 -1100 2200 -3300) 7)
Arg2: (0 0 0 0)
Arg3: -3300
Arg4: (p ((2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1)) (11 -11 
-11 -10 10 10) 4)
Arg5: (1 0 0 1)
Arg6: 20
poly_paircomb => (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3)
 (4 0 0 4) (3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2)
) (-22000 20000 -20000 20000 -20000 -20000 20000 -12100 -12100 36300 -22000 
11000 33000 -33000) 7)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) 
(3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2)) (-22000 
20000 -20000 20000 -20000 -20000 20000 -12100 -12100 36300 -22000 11000 33000 
-33000) 7)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) 
(3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2)) (-22000 
20000 -20000 20000 -20000 -20000 20000 -12100 -12100 36300 -22000 11000 33000 
-33000) 7)
poly_contentputin => 100
poly_normalizebycontentputin => (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1
 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0
 1 1) (2 0 0 2)) (220 -200 200 -200 200 200 -200 121 121 -363 220 -110 -330 330)
 7)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) 
(3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2)) (220 -200
 200 -200 200 200 -200 121 121 -363 220 -110 -330 330) 7)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) 
(3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2)) (220 -200
 200 -200 200 200 -200 121 121 -363 220 -110 -330 330) 7)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1
 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0
 1 1) (2 0 0 2)) (220 -200 200 -200 200 200 -200 121 121 -363 220 -110 -330 330)
 7)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) (2 0 0 2))
 (-11 11 -11 10 -10 -10 20) 5)
Arg2: (1 1 0 0)
Arg3: 20
Arg4: (p ((3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 -11 10) 3)
Arg5: (3 0 0 3)
Arg6: 10
poly_paircomb => (p ((6 0 2 4) (4 4 0 0) (4 2 2 0) (4 2 0 2) (4 0 0 4) (3 3 0 0)
 (3 2 1 0) (3 2 0 1) (3 1 0 2) (3 0 0 3)) (-200 -110 110 -110 220 100 -100 -100 
200 -200) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((6 0 2 4) (4 4 0 0) (4 2 2 0) (4 2 0 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) 
(3 2 0 1) (3 1 0 2) (3 0 0 3)) (-200 -110 110 -110 220 100 -100 -100 200 -200) 6
)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((6 0 2 4) (4 4 0 0) (4 2 2 0) (4 2 0 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) 
(3 2 0 1) (3 1 0 2) (3 0 0 3)) (-200 -110 110 -110 220 100 -100 -100 200 -200) 6
)
poly_contentputin => 10
poly_normalizebycontentputin => (p ((6 0 2 4) (4 4 0 0) (4 2 2 0) (4 2 0 2) (4 0
 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) (3 1 0 2) (3 0 0 3)) (20 11 -11 11 -22 -10 
10 10 -20 20) 6)
Calling poly_paircomb from poly_spoly
Arg1: (p ((3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (-11 -10 10 10) 5)
Arg2: (1 0 1 0)
Arg3: 20
Arg4: (p ((3 1 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (10 -11 10) 3)
Arg5: (3 0 0 3)
Arg6: 10
poly_paircomb => (p ((6 1 0 5) (4 1 2 1) (4 1 0 3) (3 1 2 0) (3 1 1 1) (3 0 2 1)
 (3 0 0 3)) (-200 -110 220 -100 100 100 -200) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((6 1 0 5) (4 1 2 1) (4 1 0 3) (3 1 2 0) (3 1 1 1) (3 0 2 1) (3 0 0 3))
 (-200 -110 220 -100 100 100 -200) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((6 1 0 5) (4 1 2 1) (4 1 0 3) (3 1 2 0) (3 1 1 1) (3 0 2 1) (3 0 0 3))
 (-200 -110 220 -100 100 100 -200) 6)
poly_contentputin => 10
poly_normalizebycontentputin => (p ((6 1 0 5) (4 1 2 1) (4 1 0 3) (3 1 2 0) (3 1
 1 1) (3 0 2 1) (3 0 0 3)) (20 11 -22 10 -10 -10 20) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((6 1 0 5) (4 1 2 1) (4 1 0 3) (3 1 2 0) (3 1 1 1) (3 0 2 1) (3 0 0 3))
 (20 11 -22 10 -10 -10 20) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((6 1 0 5) (4 1 2 1) (4 1 0 3) (3 1 2 0) (3 1 1 1) (3 0 2 1) (3 0 0 3))
 (20 11 -22 10 -10 -10 20) 6)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((6 1 0 5) (4 1 2 1) (4 1 0 3) (3 1 2 0) (3 1
 1 1) (3 0 2 1) (3 0 0 3)) (20 11 -22 10 -10 -10 20) 6)
Calling poly_paircomb from poly_trytopreductionstep
Arg1: (p ((4 4 0 0) (4 2 2 0) (4 2 0 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) 
(3 1 0 2) (3 0 0 3)) (11 -11 11 -22 -10 10 10 -20 20) 6)
Arg2: (0 0 0 0)
Arg3: 20
Arg4: (p ((2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1)) (11 -11 
-11 -10 10 10) 4)
Arg5: (2 0 0 2)
Arg6: 20
poly_paircomb => (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0)
 (3 2 0 1) (3 1 0 2) (3 0 1 2) (3 0 0 3)) (220 -220 220 -220 -200 200 200 -200 
-200 200) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) 
(3 1 0 2) (3 0 1 2) (3 0 0 3)) (220 -220 220 -220 -200 200 200 -200 -200 200) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) 
(3 1 0 2) (3 0 1 2) (3 0 0 3)) (220 -220 220 -220 -200 200 200 -200 -200 200) 6)
poly_contentputin => 20
poly_normalizebycontentputin => (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3
 0 0) (3 2 1 0) (3 2 0 1) (3 1 0 2) (3 0 1 2) (3 0 0 3)) (11 -11 11 -11 -10 10 
10 -10 -10 10) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) 
(3 1 0 2) (3 0 1 2) (3 0 0 3)) (11 -11 11 -11 -10 10 10 -10 -10 10) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) 
(3 1 0 2) (3 0 1 2) (3 0 0 3)) (11 -11 11 -11 -10 10 10 -10 -10 10) 6)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3
 0 0) (3 2 1 0) (3 2 0 1) (3 1 0 2) (3 0 1 2) (3 0 0 3)) (11 -11 11 -11 -10 10 
10 -10 -10 10) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 1 0 4) (3 3 0 0) (3 1 2 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) 
(2 0 0 2)) (20 -11 11 -11 10 -10 -10 20) 5)
Arg2: (0 0 0 0)
Arg3: 11
Arg4: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
Arg5: (0 0 0 0)
Arg6: 10
poly_paircomb => (p ((5 1 0 4) (3 3 0 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1)
 (2 0 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (200 -110 -220 100 -100 -100 200 121 
-110) 5)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 1 4) (3 2 1 0) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) 
(2 0 0 2)) (20 11 -11 -11 -10 10 -10 20) 5)
Arg2: (0 0 0 0)
Arg3: 11
Arg4: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
Arg5: (0 0 0 0)
Arg6: 10
poly_paircomb => (p ((5 0 1 4) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1)
 (2 0 0 2) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (200 -110 -220 -100 100 -100 200 121 
-110) 5)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 3 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) 
(3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2)) (220 -200
 200 -200 200 200 -200 121 121 -363 220 -110 -330 330) 7)
Arg2: (0 0 0 0)
Arg3: 200
Arg4: (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4)
Arg5: (0 0 0 0)
Arg6: 1
poly_paircomb => (p ((5 0 0 5) (4 1 2 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4)
 (3 2 0 1) (3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 0 1 0)
 (1 0 0 1)) (220 -200 -200 200 400 -200 121 121 -363 220 -110 -330 330 -200 200)
 7)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 0 2 2) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1) 
(3 0 2 1) (3 0 0 3) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 0 1 0) (1 0 0 1))
 (220 -200 -200 200 400 -200 121 121 -363 220 -110 -330 330 -200 200) 7)
Arg2: (0 0 0 0)
Arg3: -200
Arg4: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (20 11 -11 -11 -10 10 10) 4)
Arg5: (0 0 0 0)
Arg6: 20
poly_paircomb => (p ((5 0 0 5) (4 1 2 1) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1)
 (3 0 2 1) (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0)
 (1 0 1 0) (1 0 0 1)) (4400 -4000 4000 8000 -4000 2420 2420 -7260 2200 2200 
-2200 -6600 4400 -2000 -2000 6000) 7)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 0 5) (4 1 2 1) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1) 
(3 0 0 3) (2 2 0 0) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0) (1 0 1 0) 
(1 0 0 1)) (4400 -4000 4000 8000 -4000 2420 2420 -7260 2200 2200 -2200 -6600 
4400 -2000 -2000 6000) 7)
Arg2: (0 0 0 0)
Arg3: -4000
Arg4: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
Arg5: (1 0 0 1)
Arg6: 10
poly_paircomb => (p ((5 0 0 5) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1)
 (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0) (1 0 1 0)
 (1 0 0 1)) (44000 80000 80000 -40000 24200 24200 -72600 22000 22000 -66000 
-66000 44000 -20000 -20000 100000) 7)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((5 0 0 5) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 2 0 1) (3 0 2 1) (3 0 0 3) 
(2 2 0 0) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (44000 80000 80000 -40000 24200 24200 -72600 22000 22000 -66000 -66000 44000 
-20000 -20000 100000) 7)
Arg2: (0 0 0 0)
Arg3: 24200
Arg4: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Arg5: (0 0 0 0)
Arg6: 10
poly_paircomb => (p ((5 0 0 5) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 0 0 3) (2 2 0 0)
 (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) (0 0 0 0)
) (440000 800000 800000 -400000 -726000 220000 220000 -660000 -660000 440000 
-200000 -200000 1266200 -242000) 7)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 4 0 0) (4 2 2 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) 
(3 1 0 2) (3 0 1 2) (3 0 0 3)) (11 -11 11 -11 -10 10 10 -10 -10 10) 6)
Arg2: (0 0 0 0)
Arg3: 11
Arg4: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (20 11 -11 -11 -10 10 10) 4)
Arg5: (0 0 0 0)
Arg6: 20
poly_paircomb => (p ((4 4 0 0) (4 2 2 0) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1)
 (3 1 0 2) (3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0)
 (1 0 0 1)) (220 -220 -220 -200 200 200 -200 -200 200 -121 121 121 110 -110 -110
) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 4 0 0) (4 2 2 0) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) (3 1 0 2) 
(3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (220 -220 -220 -200 200 200 -200 -200 200 -121 121 121 110 -110 -110) 6)
Arg2: (0 0 0 0)
Arg3: -220
Arg4: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
Arg5: (1 0 1 0)
Arg6: 10
poly_paircomb => (p ((4 4 0 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1)
 (3 1 0 2) (3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0)
 (1 0 0 1)) (2200 2200 -2200 -2000 2000 2000 -2000 -2000 2000 -1210 -1210 1210 
1100 1100 -1100) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 4 0 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 2 0 1) (3 1 0 2) 
(3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (2200 2200 -2200 -2000 2000 2000 -2000 -2000 2000 -1210 -1210 1210 1100 1100 
-1100) 6)
Arg2: (0 0 0 0)
Arg3: 2000
Arg4: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Arg5: (0 0 0 0)
Arg6: 10
poly_paircomb => (p ((4 4 0 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 0 2 1)
 (3 1 0 2) (3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0)
 (1 0 0 1) (0 0 0 0)) (22000 22000 -22000 -20000 20000 -20000 -20000 -20000 
20000 -12100 -12100 12100 11000 11000 11000 -20000) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 4 0 0) (4 0 2 2) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 0 2 1) (3 1 0 2) 
(3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) 
(0 0 0 0)) (22000 22000 -22000 -20000 20000 -20000 -20000 -20000 20000 -12100 
-12100 12100 11000 11000 11000 -20000) 6)
Arg2: (0 0 0 0)
Arg3: 22000
Arg4: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (20 11 -11 -11 -10 10 10) 4)
Arg5: (0 0 0 0)
Arg6: 20
poly_paircomb => (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 0 2 1) (3 1 0 2)
 (3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 0 2) (1 1 0 0) (0 0 0 0)) (440000 -440000 
-400000 400000 -400000 -400000 -400000 400000 -484000 484000 440000 -400000) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) (3 2 1 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) 
(3 0 0 3) (2 2 0 0) (2 0 0 2) (1 1 0 0) (0 0 0 0)) (440000 -440000 -400000 
400000 -400000 -400000 -400000 400000 -484000 484000 440000 -400000) 6)
Arg2: (0 0 0 0)
Arg3: 400000
Arg4: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
Arg5: (0 0 0 0)
Arg6: 10
poly_paircomb => (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) (3 0 2 1) (3 1 0 2) (3 0 1 2)
 (3 0 0 3) (2 2 0 0) (2 0 0 2) (1 1 0 0) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (
4400000 -4400000 -4000000 -4000000 -4000000 -8000000 4000000 -4840000 4840000 
4400000 4400000 -8000000) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 1 2 0) (3 0 3 0) (3 0 2 1) (3 1 0 2) 
(3 0 1 2) (3 0 0 3) (2 2 0 0) (1 1 0 0)) (110 220 -110 100 -100 100 -100 -100 
100 -121 110) 6)
Arg2: (0 0 0 0)
Arg3: 100
Arg4: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
Arg5: (0 0 0 0)
Arg6: 10
poly_paircomb => (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1 0 2)
 (3 0 1 2) (3 0 0 3) (2 2 0 0) (1 1 . #1=(0 0)) (0 0 . #1#)) (1100 2200 -1100 
-1000 1000 -2000 -1000 1000 -1210 2200 -1000) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 0 4 0) (4 2 0 2) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) 
(3 0 0 3) (2 2 0 0) (1 1 . #1=(0 0)) (0 0 . #1#)) (1100 2200 -1100 -1000 1000 
-2000 -1000 1000 -1210 2200 -1000) 6)
Arg2: (0 0 0 0)
Arg3: 2200
Arg4: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Arg5: (1 0 0 1)
Arg6: 10
poly_paircomb => (p ((4 0 4 0) (4 0 2 2) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1 0 2)
 (3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 0 2) (1 1 . #1=(0 0)) (1 0 0 1) (0 0 . #1#))
 (11000 -22000 -11000 -10000 10000 -20000 -10000 10000 -12100 24200 22000 -22000
 -10000) 6)
Calling poly_paircomb from poly_tryreductionstep
Arg1: (p ((4 0 4 0) (4 0 2 2) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) 
(3 0 0 3) (2 2 0 0) (2 0 0 2) (1 1 . #1=(0 0)) (1 0 0 1) (0 0 . #1#)) (11000 
-22000 -11000 -10000 10000 -20000 -10000 10000 -12100 24200 22000 -22000 -10000)
 6)
Arg2: (0 0 0 0)
Arg3: -22000
Arg4: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (20 11 -11 -11 -10 10 10) 4)
Arg5: (0 0 0 0)
Arg6: 20
poly_paircomb => (p ((4 0 4 0) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2)
 (3 0 0 3) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) (0 0 0 0)) (220000 
-220000 -200000 200000 -400000 -200000 200000 -242000 242000 220000 220000 
-220000 -200000) 6)
Calling core_standardizeoutput from core_groebner1
Arg1: ((lp (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (20 -11 -10 10
 10) 5) (sgn 2 (2 1 0 1))) (lp (p ((5 1 0 4) (3 3 0 0) #9=(3 1 0 2) (2 2 0 0) (2
 1 1 0) (2 1 0 1) (2 0 0 2) . #17=((1 1 . #1=(0 . #16=(0))) . #12=((0 0 . #1#)))
) (200 -110 -220 100 -100 -100 200 121 -110) 5) (sgn 2 (2 1 1 0))) (lp (p ((5 0 
1 4) (3 0 3 0) #3=(3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2) . #15=(#7=(1
 0 1 . #2=(0)) #8=(0 0 0 . #2#))) (200 -110 -220 -100 100 -100 200 121 -110) 5) 
(sgn 2 (2 0 2 0))) (lp (p ((5 0 0 5) (4 1 0 3) #13=(4 0 1 3) (4 0 0 4) (3 0 0 3)
 #4=(2 2 0 0) #10=(2 0 2 0) (2 1 0 1) (2 0 1 1) #5=(2 0 0 2) #6=(1 1 0 0) #11=(1
 0 1 0) #19=(1 0 0 1) . #20=((0 0 0 0))) (440000 800000 800000 -400000 -726000 
220000 220000 -660000 -660000 440000 -200000 -200000 1266200 -242000) 7) (sgn 2 
(4 0 3 1))) (lp (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) #18=(3 0 2 1) (3 1 0 2) #3# (3
 0 0 3) #4# #5# #6# #7# #8#) (4400000 -4400000 -4000000 -4000000 -4000000 
-8000000 4000000 -4840000 4840000 4400000 4400000 -8000000) 6) (sgn 2 (3 2 1 0))
) (lp (p ((4 0 4 0) (4 0 0 4) (3 0 3 0) (3 0 2 1) #9# (3 0 1 2) (3 0 0 3) #10# #
5# #6# #11# #14=(1 0 0 1) . #12#) (220000 -220000 -200000 200000 -400000 -200000
 200000 -242000 242000 220000 220000 -220000 -200000) 6) (sgn 2 (3 0 3 0))) (lp 
(p ((4 0 3 1) #13# (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4) (sgn 2 (1 0 0 1))) (lp (p
 ((4 0 2 2) #4# #10# #5# #6# #11# #14#) (20 11 -11 -11 -10 10 10) 4) (sgn 2 (1 0
 1 0))) (lp (p ((3 2 1 . #2#) #3# . #15#) (10 10 -11 10) 3) (sgn 2 (0 0 0 0))) (
lp (p ((3 1 2 . #16#) #9# . #17#) (10 10 -11 10) 3) (sgn 1 (0 0 0 0))) (lp (p ((
3 2 0 1) #18# #19# . #20#) (10 10 -11 10) 3) (sgn 0 (0 0 0 0))))
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (20 -11 -10 10 10) 
5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (20 -11 -10 10 10) 
5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0
 1 1)) (20 -11 -10 10 10) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 1 0 4) (3 3 0 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) (2 0 0 2) 
(1 1 . #1=(0 0)) (0 0 . #1#)) (200 -110 -220 100 -100 -100 200 121 -110) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 1 0 4) (3 3 0 0) (3 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) (2 0 0 2) 
(1 1 . #1=(0 0)) (0 0 . #1#)) (200 -110 -220 100 -100 -100 200 121 -110) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 1 0 4) (3 3 0 0) (3 1 0 2) (2 2 0 0) (2 1
 1 0) (2 1 0 1) (2 0 0 2) (1 1 . #1=(0 0)) (0 0 . #1#)) (200 -110 -220 100 -100 
-100 200 121 -110) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 1 4) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2) 
(1 0 1 . #1=(0)) (0 0 0 . #1#)) (200 -110 -220 -100 100 -100 200 121 -110) 5)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 1 4) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2) 
(1 0 1 . #1=(0)) (0 0 0 . #1#)) (200 -110 -220 -100 100 -100 200 121 -110) 5)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((5 0 1 4) (3 0 3 0) (3 0 1 2) (2 1 1 0) (2 0
 2 0) (2 0 1 1) (2 0 0 2) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (200 -110 -220 -100 
100 -100 200 121 -110) 5)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((5 0 0 5) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 0 0 3) (2 2 0 0) (2 0 2 0) 
(2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) (0 0 0 0)) (440000 
800000 800000 -400000 -726000 220000 220000 -660000 -660000 440000 -200000 
-200000 1266200 -242000) 7)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((5 0 0 5) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 0 0 3) (2 2 0 0) (2 0 2 0) 
(2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) (0 0 0 0)) (440000 
800000 800000 -400000 -726000 220000 220000 -660000 -660000 440000 -200000 
-200000 1266200 -242000) 7)
poly_contentputin => 200
poly_normalizebycontentputin => (p ((5 0 0 5) (4 1 0 3) (4 0 1 3) (4 0 0 4) (3 0
 0 3) (2 2 0 0) (2 0 2 0) (2 1 0 1) (2 0 1 1) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0
 0 1) (0 0 0 0)) (2200 4000 4000 -2000 -3630 1100 1100 -3300 -3300 2200 -1000 
-1000 6331 -1210) 7)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) (3 0 0 3) 
(2 2 0 0) (2 0 0 2) (1 1 0 0) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (4400000 -4400000 
-4000000 -4000000 -4000000 -8000000 4000000 -4840000 4840000 4400000 4400000 
-8000000) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) (3 0 0 3) 
(2 2 0 0) (2 0 0 2) (1 1 0 0) (1 0 1 . #1=(0)) (0 0 0 . #1#)) (4400000 -4400000 
-4000000 -4000000 -4000000 -8000000 4000000 -4840000 4840000 4400000 4400000 
-8000000) 6)
poly_contentputin => 40000
poly_normalizebycontentputin => (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) (3 0 2 1) (3 1
 0 2) (3 0 1 2) (3 0 0 3) (2 2 0 0) (2 0 0 2) (1 1 0 0) (1 0 1 . #1=(0)) (0 0 0
 . #1#)) (110 -110 -100 -100 -100 -200 100 -121 121 110 110 -200) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 4 0) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) (3 0 0 3) 
(2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) (0 0 0 0)) (220000 -220000 
-200000 200000 -400000 -200000 200000 -242000 242000 220000 220000 -220000 
-200000) 6)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 4 0) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1 0 2) (3 0 1 2) (3 0 0 3) 
(2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) (0 0 0 0)) (220000 -220000 
-200000 200000 -400000 -200000 200000 -242000 242000 220000 220000 -220000 
-200000) 6)
poly_contentputin => 2000
poly_normalizebycontentputin => (p ((4 0 4 0) (4 0 0 4) (3 0 3 0) (3 0 2 1) (3 1
 0 2) (3 0 1 2) (3 0 0 3) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1) (0 0
 0 0)) (110 -110 -100 100 -200 -100 100 -121 121 110 110 -110 -100) 6)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 3 1) (4 0 1 3) (1 0 1 0) (1 0 0 1)) (1 
-1 1 -1) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (20 11 -11 -11 -10 10 10) 4)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1 0 0) (1 0 1 0) (1 0 0 1))
 (20 11 -11 -11 -10 10 10) 4)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((4 0 2 2) (2 2 0 0) (2 0 2 0) (2 0 0 2) (1 1
 0 0) (1 0 1 0) (1 0 0 1)) (20 11 -11 -11 -10 10 10) 4)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 0 0 . #1#)) (10 10 -11 10)
 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 1 . #1=(0)) (3 0 1 2) (1 0 1 . #1#) (0 
0 0 . #1#)) (10 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1#)) (0 0 . #2#)) (10 10 
-11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 1 2 . #1=(0)) (3 1 0 2) (1 1 . #2=(0 . #1
#)) (0 0 . #2#)) (10 10 -11 10) 3)
Calling poly_normalizebycontentputin from poly_normalize
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
Calling poly_contentputin from poly_normalizebycontentputin
Arg1: (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10 10 -11 10) 3)
poly_contentputin => 1
poly_normalizebycontentputin => (p ((3 2 0 1) (3 0 2 1) (1 0 0 1) (0 0 0 0)) (10
 10 -11 10) 3)
core_standardizeoutput => ((lp (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 
1 1)) (20 -11 -10 10 10) 5) (sgn 2 (2 1 0 1))) (lp (p ((5 1 0 4) (3 3 0 0) #9=(3
 1 0 2) (2 2 0 0) (2 1 1 0) (2 1 0 1) (2 0 0 2) . #17=((1 1 . #1=(0 . #16=(0)))
 . #12=((0 0 . #1#)))) (200 -110 -220 100 -100 -100 200 121 -110) 5) (sgn 2 (2 1
 1 0))) (lp (p ((5 0 1 4) (3 0 3 0) #3=(3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) (
2 0 0 2) . #15=(#7=(1 0 1 . #2=(0)) #8=(0 0 0 . #2#))) (200 -110 -220 -100 100 
-100 200 121 -110) 5) (sgn 2 (2 0 2 0))) (lp (p ((5 0 0 5) (4 1 0 3) #13=(4 0 1 
3) (4 0 0 4) (3 0 0 3) #4=(2 2 0 0) #10=(2 0 2 0) (2 1 0 1) (2 0 1 1) #5=(2 0 0 
2) #6=(1 1 0 0) #11=(1 0 1 0) #19=(1 0 0 1) . #20=((0 0 0 0))) (2200 4000 4000 
-2000 -3630 1100 1100 -3300 -3300 2200 -1000 -1000 6331 -1210) 7) (sgn 2 (4 0 3 
1))) (lp (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) #18=(3 0 2 1) (3 1 0 2) #3# (3 0 0 3)
 #4# #5# #6# #7# #8#) (110 -110 -100 -100 -100 -200 100 -121 121 110 110 -200) 6
) (sgn 2 (3 2 1 0))) (lp (p ((4 0 4 0) (4 0 0 4) (3 0 3 0) (3 0 2 1) #9# (3 0 1 
2) (3 0 0 3) #10# #5# #6# #11# #14=(1 0 0 1) . #12#) (110 -110 -100 100 -200 
-100 100 -121 121 110 110 -110 -100) 6) (sgn 2 (3 0 3 0))) (lp (p ((4 0 3 1) #13
# (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4) (sgn 2 (1 0 0 1))) (lp (p ((4 0 2 2) #4# #
10# #5# #6# #11# #14#) (20 11 -11 -11 -10 10 10) 4) (sgn 2 (1 0 1 0))) (lp (p ((
3 2 1 . #2#) #3# . #15#) (10 10 -11 10) 3) (sgn 2 (0 0 0 0))) (lp (p ((3 1 2 . #
16#) #9# . #17#) (10 10 -11 10) 3) (sgn 1 (0 0 0 0))) (lp (p ((3 2 0 1) #18# #19
# . #20#) (10 10 -11 10) 3) (sgn 0 (0 0 0 0))))
core_groebner1 => ((lp (p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1)) (
20 -11 -10 10 10) 5) (sgn 2 (2 1 0 1))) (lp (p ((5 1 0 4) (3 3 0 0) #9=(3 1 0 2)
 (2 2 0 0) (2 1 1 0) (2 1 0 1) (2 0 0 2) . #17=((1 1 . #1=(0 . #16=(0))) . #12=(
(0 0 . #1#)))) (200 -110 -220 100 -100 -100 200 121 -110) 5) (sgn 2 (2 1 1 0))) 
(lp (p ((5 0 1 4) (3 0 3 0) #3=(3 0 1 2) (2 1 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2)
 . #15=(#7=(1 0 1 . #2=(0)) #8=(0 0 0 . #2#))) (200 -110 -220 -100 100 -100 200 
121 -110) 5) (sgn 2 (2 0 2 0))) (lp (p ((5 0 0 5) (4 1 0 3) #13=(4 0 1 3) (4 0 0
 4) (3 0 0 3) #4=(2 2 0 0) #10=(2 0 2 0) (2 1 0 1) (2 0 1 1) #5=(2 0 0 2) #6=(1 
1 0 0) #11=(1 0 1 0) #19=(1 0 0 1) . #20=((0 0 0 0))) (2200 4000 4000 -2000 
-3630 1100 1100 -3300 -3300 2200 -1000 -1000 6331 -1210) 7) (sgn 2 (4 0 3 1))) (
lp (p ((4 4 0 0) (4 0 0 4) (3 3 0 0) #18=(3 0 2 1) (3 1 0 2) #3# (3 0 0 3) #4# #
5# #6# #7# #8#) (110 -110 -100 -100 -100 -200 100 -121 121 110 110 -200) 6) (sgn
 2 (3 2 1 0))) (lp (p ((4 0 4 0) (4 0 0 4) (3 0 3 0) (3 0 2 1) #9# (3 0 1 2) (3 
0 0 3) #10# #5# #6# #11# #14=(1 0 0 1) . #12#) (110 -110 -100 100 -200 -100 100 
-121 121 110 110 -110 -100) 6) (sgn 2 (3 0 3 0))) (lp (p ((4 0 3 1) #13# (1 0 1 
0) (1 0 0 1)) (1 -1 1 -1) 4) (sgn 2 (1 0 0 1))) (lp (p ((4 0 2 2) #4# #10# #5# #
6# #11# #14#) (20 11 -11 -11 -10 10 10) 4) (sgn 2 (1 0 1 0))) (lp (p ((3 2 1 . #
2#) #3# . #15#) (10 10 -11 10) 3) (sgn 2 (0 0 0 0))) (lp (p ((3 1 2 . #16#) #9#
 . #17#) (10 10 -11 10) 3) (sgn 1 (0 0 0 0))) (lp (p ((3 2 0 1) #18# #19# . #20
#) (10 10 -11 10) 3) (sgn 0 (0 0 0 0))))
f5_groebner_poly2poly => ((p ((5 1 1 3) (3 1 1 1) (2 1 1 0) (2 1 0 1) (2 0 1 1))
 (20 -11 -10 10 10) 5) (p ((5 1 0 4) (3 3 0 0) #9=(3 1 0 2) (2 2 0 0) (2 1 1 0) 
(2 1 0 1) (2 0 0 2) . #17=((1 1 . #1=(0 . #16=(0))) . #12=((0 0 . #1#)))) (200 
-110 -220 100 -100 -100 200 121 -110) 5) (p ((5 0 1 4) (3 0 3 0) #3=(3 0 1 2) (2
 1 1 0) (2 0 2 0) (2 0 1 1) (2 0 0 2) . #15=(#7=(1 0 1 . #2=(0)) #8=(0 0 0 . #2
#))) (200 -110 -220 -100 100 -100 200 121 -110) 5) (p ((5 0 0 5) (4 1 0 3) #13=(
4 0 1 3) (4 0 0 4) (3 0 0 3) #4=(2 2 0 0) #10=(2 0 2 0) (2 1 0 1) (2 0 1 1) #5=(
2 0 0 2) #6=(1 1 0 0) #11=(1 0 1 0) #19=(1 0 0 1) . #20=((0 0 0 0))) (2200 4000 
4000 -2000 -3630 1100 1100 -3300 -3300 2200 -1000 -1000 6331 -1210) 7) (p ((4 4 
0 0) (4 0 0 4) (3 3 0 0) #18=(3 0 2 1) (3 1 0 2) #3# (3 0 0 3) #4# #5# #6# #7# #
8#) (110 -110 -100 -100 -100 -200 100 -121 121 110 110 -200) 6) (p ((4 0 4 0) (4
 0 0 4) (3 0 3 0) (3 0 2 1) #9# (3 0 1 2) (3 0 0 3) #10# #5# #6# #11# #14=(1 0 0
 1) . #12#) (110 -110 -100 100 -200 -100 100 -121 121 110 110 -110 -100) 6) (p (
(4 0 3 1) #13# (1 0 1 0) (1 0 0 1)) (1 -1 1 -1) 4) (p ((4 0 2 2) #4# #10# #5# #6
# #11# #14#) (20 11 -11 -11 -10 10 10) 4) (p ((3 2 1 . #2#) #3# . #15#) (10 10 
-11 10) 3) (p ((3 1 2 . #16#) #9# . #17#) (10 10 -11 10) 3) (p ((3 2 0 1) #18# #
19# . #20#) (10 10 -11 10) 3))
f5_groebner_lp2lp => ((plus (times 20 x1 x2 (expt x3 3)) (minus (times 11 x1 x2 
x3)) (minus (times 10 x1 x2)) (times 10 x1 x3) (times 10 x2 x3)) (plus (times 
200 x1 (expt x3 4)) (minus (times 110 (expt x1 3))) (minus (times 220 x1 (expt 
x3 2))) (times 100 (expt x1 2)) (minus (times 100 x1 x2)) (minus (times 100 x1 
x3)) (times 200 (expt x3 2)) (times 121 x1) (minus 110)) (plus (times 200 x2 (
expt x3 4)) (minus (times 110 (expt x2 3))) (minus (times 220 x2 (expt x3 2))) (
minus (times 100 x1 x2)) (times 100 (expt x2 2)) (minus (times 100 x2 x3)) (
times 200 (expt x3 2)) (times 121 x2) (minus 110)) (plus (times 2200 (expt x3 5)
) (times 4000 x1 (expt x3 3)) (times 4000 x2 (expt x3 3)) (minus (times 2000 (
expt x3 4))) (minus (times 3630 (expt x3 3))) (times 1100 (expt x1 2)) (times 
1100 (expt x2 2)) (minus (times 3300 x1 x3)) (minus (times 3300 x2 x3)) (times 
2200 (expt x3 2)) (minus (times 1000 x1)) (minus (times 1000 x2)) (times 6331 x3
) (minus 1210)) (plus (times 110 (expt x1 4)) (minus (times 110 (expt x3 4))) (
minus (times 100 (expt x1 3))) (minus (times 100 (expt x2 2) x3)) (minus (times 
100 x1 (expt x3 2))) (minus (times 200 x2 (expt x3 2))) (times 100 (expt x3 3)) 
(minus (times 121 (expt x1 2))) (times 121 (expt x3 2)) (times 110 x1) (times 
110 x2) (minus 200)) (plus (times 110 (expt x2 4)) (minus (times 110 (expt x3 4)
)) (minus (times 100 (expt x2 3))) (times 100 (expt x2 2) x3) (minus (times 200 
x1 (expt x3 2))) (minus (times 100 x2 (expt x3 2))) (times 100 (expt x3 3)) (
minus (times 121 (expt x2 2))) (times 121 (expt x3 2)) (times 110 x1) (times 110
 x2) (minus (times 110 x3)) (minus 100)) (plus (times (expt x2 3) x3) (minus (
times x2 (expt x3 3))) x2 (minus x3)) (plus (times 20 (expt x2 2) (expt x3 2)) (
times 11 (expt x1 2)) (minus (times 11 (expt x2 2))) (minus (times 11 (expt x3 2
))) (minus (times 10 x1)) (times 10 x2) (times 10 x3)) (plus (times 10 (expt x1 
2) x2) (times 10 x2 (expt x3 2)) (minus (times 11 x2)) 10) (plus (times 10 x1 (
expt x2 2)) (times 10 x1 (expt x3 2)) (minus (times 11 x1)) 10) (plus (times 10 
(expt x1 2) x3) (times 10 (expt x2 2) x3) (minus (times 11 x3)) 10))
f5_groebner => (list (plus (times 20 x1 x2 (expt x3 3)) (minus (times 11 x1 x2 
x3)) (minus (times 10 x1 x2)) (times 10 x1 x3) (times 10 x2 x3)) (plus (times 
200 x1 (expt x3 4)) (minus (times 110 (expt x1 3))) (minus (times 220 x1 (expt 
x3 2))) (times 100 (expt x1 2)) (minus (times 100 x1 x2)) (minus (times 100 x1 
x3)) (times 200 (expt x3 2)) (times 121 x1) (minus 110)) (plus (times 200 x2 (
expt x3 4)) (minus (times 110 (expt x2 3))) (minus (times 220 x2 (expt x3 2))) (
minus (times 100 x1 x2)) (times 100 (expt x2 2)) (minus (times 100 x2 x3)) (
times 200 (expt x3 2)) (times 121 x2) (minus 110)) (plus (times 2200 (expt x3 5)
) (times 4000 x1 (expt x3 3)) (times 4000 x2 (expt x3 3)) (minus (times 2000 (
expt x3 4))) (minus (times 3630 (expt x3 3))) (times 1100 (expt x1 2)) (times 
1100 (expt x2 2)) (minus (times 3300 x1 x3)) (minus (times 3300 x2 x3)) (times 
2200 (expt x3 2)) (minus (times 1000 x1)) (minus (times 1000 x2)) (times 6331 x3
) (minus 1210)) (plus (times 110 (expt x1 4)) (minus (times 110 (expt x3 4))) (
minus (times 100 (expt x1 3))) (minus (times 100 (expt x2 2) x3)) (minus (times 
100 x1 (expt x3 2))) (minus (times 200 x2 (expt x3 2))) (times 100 (expt x3 3)) 
(minus (times 121 (expt x1 2))) (times 121 (expt x3 2)) (times 110 x1) (times 
110 x2) (minus 200)) (plus (times 110 (expt x2 4)) (minus (times 110 (expt x3 4)
)) (minus (times 100 (expt x2 3))) (times 100 (expt x2 2) x3) (minus (times 200 
x1 (expt x3 2))) (minus (times 100 x2 (expt x3 2))) (times 100 (expt x3 3)) (
minus (times 121 (expt x2 2))) (times 121 (expt x3 2)) (times 110 x1) (times 110
 x2) (minus (times 110 x3)) (minus 100)) (plus (times (expt x2 3) x3) (minus (
times x2 (expt x3 3))) x2 (minus x3)) (plus (times 20 (expt x2 2) (expt x3 2)) (
times 11 (expt x1 2)) (minus (times 11 (expt x2 2))) (minus (times 11 (expt x3 2
))) (minus (times 10 x1)) (times 10 x2) (times 10 x3)) (plus (times 10 (expt x1 
2) x2) (times 10 x2 (expt x3 2)) (minus (times 11 x2)) 10) (plus (times 10 x1 (
expt x2 2)) (times 10 x1 (expt x3 2)) (minus (times 11 x1)) 10) (plus (times 10 
(expt x1 2) x3) (times 10 (expt x2 2) x3) (minus (times 11 x3)) 10))







*** End-of-file read 
