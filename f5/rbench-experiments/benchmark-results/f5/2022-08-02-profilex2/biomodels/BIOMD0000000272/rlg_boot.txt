load_package f5$

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_interreduceinput compiled, 11 + 16 bytes
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes

torder({}, revgradlex)$



k1 := 164683/5000000;


       164683
k1 := ---------
       5000000

k2 := 76;


k2 := 76

k3 := 114701/50000000000;


         114701
k3 := -------------
       50000000000

k4 := 339973/50000000;


        339973
k4 := ----------
       50000000

k5 := 1101/100000;


        1101
k5 := --------
       100000

k6 := 317871/100000000;


        317871
k6 := -----------
       100000000

k7 := 82021/5000000;


        82021
k7 := ---------
       5000000

k8 := 999293/1000;


       999293
k8 := --------
        1000

k9 := 0;


k9 := 0

k10 := 1;


k10 := 1

k11 := 1;


k11 := 1

k12 := 1;


k12 := 1

k13 := 999293/1000;


        999293
k13 := --------
         1000

k14 := 0;


k14 := 0

k15 := 0;


k15 := 0

operator diff$


odes := { diff(x1, t) = (1*k1*k2*k12 + (-1)*k1*x1*k12 + (-1)*k3*x2*x1*k12 + 1*k4*x3*k12)/k11,
  diff(x2, t) = ((-1)*k3*x2*x1*k12 + 1*k4*x3*k12 + 1*k5*x4*k12)/k10,
  diff(x3, t) = (1*k3*x2*x1*k12 + (-1)*k4*x3*k12 + (-1)*k1*x3*k12)/k11,
  diff(x4, t) = (1*k1*x3*k12 + (-1)*k5*x4*k12 + (-1)*k6*x4*k12 + (-1)*k7*x4*k12)/k12,
  diff(x5, t) = 1*k6*x4*k12/k12,
  diff(x6, t) = 1*k7*x4*k12/k10 }$


odes := for each o in odes collect part(o, 2)$



gb := f5(odes)$


in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := BIOMD0000000272

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

num3 := lisp caddr assoc ('(core_interreduceInput), profile_alist!*);


num3 := 0

total := lisp (time() - profile_time!*);


total := 10

share dir, num1, num2, num3, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",", num3, ",",total , "' >> ~/signature-based-gb/f5/putin2.csv"});


str := echo 'BIOMD0000000272,0,0,0,10' >> ~/signature-based-gb/f5/putin2.csv

share str;


lisp system str;


0

end;


end;

