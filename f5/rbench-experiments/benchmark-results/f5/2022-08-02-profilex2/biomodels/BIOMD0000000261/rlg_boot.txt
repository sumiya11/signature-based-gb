load_package f5$

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_interreduceinput compiled, 11 + 16 bytes
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes

torder({}, revgradlex)$



k1 := 1;


k1 := 1

k2 := 1;


k2 := 1

k3 := 173/25;


       173
k3 := -----
       25

k4 := 1/2;


       1
k4 := ---
       2

k5 := 4/125;


        4
k5 := -----
       125

k6 := 191/100;


       191
k6 := -----
       100

k7 := 23/500;


       23
k7 := -----
       500

k8 := 21/4;


       21
k8 := ----
       4

k9 := 1/10;


       1
k9 := ----
       10

k10 := 63/25;


        63
k10 := ----
        25

k11 := 7/50;


        7
k11 := ----
        50

k12 := 19/500;


        19
k12 := -----
        500

k13 := 93/100;


        93
k13 := -----
        100

k14 := 133/100;


        133
k14 := -----
        100

k15 := 11/50;


        11
k15 := ----
        50

k16 := 9/125;


         9
k16 := -----
        125

k17 := 9/25;


        9
k17 := ----
        25

k18 := 17/100;


        17
k18 := -----
        100

k19 := 63/100;


        63
k19 := -----
        100

k20 := 43/500;


        43
k20 := -----
        500

k21 := 81/50;


        81
k21 := ----
        50

k22 := 23/100;


        23
k22 := -----
        100

k23 := 43/1000;


         43
k23 := ------
        1000

k24 := 67/1000;


         67
k24 := ------
        1000

k25 := 27/100;


        27
k25 := -----
        100

k26 := 33/500;


        33
k26 := -----
        500

k27 := 99/1000;


         99
k27 := ------
        1000

k28 := 21/1000;


         21
k28 := ------
        1000

k29 := 7/250;


         7
k29 := -----
        250

k30 := 6/25;


        6
k30 := ----
        25

k31 := 29/100;


        29
k31 := -----
        100

k33 := 0;


k33 := 0

k32 := 100;


k32 := 100

operator diff$


odes := { diff(x1, t) = ((-1)*x1*k3 + 1*x4*k6 + (-1)*x1*k8 + 1*x5*k9 + (-1)*x1*k10 + 1*x6*k11 + (-1)*x1*k12 + (-1)*x1*k13 + (-1)*x1*k14 + (-1)*x1*k17 + 1*x11*k18 + (-1)*x1*k19 + 1*x12*k20 + (-1)*x1*k21 + 1*x13*k22 + (-1)*x1*k23 + 1*x14*k24 + (-1)*x1*k25 + (-1)*x1*k26 + 1*x16*k27 + (-1)*x1*k28 + 1*x17*k29 + 1*k30*x7)/k2,
  diff(x2, t) = (1*x1*k3 + (-1)*x2*k4 + (-1)*x2*k7)/k2,
  diff(x3, t) = (1*x2*k4 + (-1)*x3*k5)/k2,
  diff(x4, t) = (1*x3*k5 + (-1)*x4*k6 + 1*x2*k7)/k2,
  diff(x5, t) = (1*x1*k8 + (-1)*x5*k9)/k2,
  diff(x6, t) = (1*x1*k10 + (-1)*x6*k11)/k2,
  diff(x7, t) = (1*x1*k12 + (-1)*k30*x7)/k2,
  diff(x8, t) = (1*x1*k14 + (-1)*x8*k16)/k2,
  diff(x9, t) = (1*x1*k13 + (-1)*x9*k15)/k2,
  diff(x10, t) = (1*x9*k15 + 1*x8*k16 + 1*k31*x15)/k1,
  diff(x11, t) = (1*x1*k17 + (-1)*x11*k18)/k2,
  diff(x12, t) = (1*x1*k19 + (-1)*x12*k20)/k2,
  diff(x13, t) = (1*x1*k21 + (-1)*x13*k22)/k2,
  diff(x14, t) = (1*x1*k23 + (-1)*x14*k24)/k2,
  diff(x15, t) = (1*x1*k25 + (-1)*k31*x15)/k2,
  diff(x16, t) = (1*x1*k26 + (-1)*x16*k27)/k2,
  diff(x17, t) = (1*x1*k28 + (-1)*x17*k29)/k2 }$


odes := for each o in odes collect part(o, 2)$



gb := f5(odes)$


in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := BIOMD0000000261

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

num3 := lisp caddr assoc ('(core_interreduceInput), profile_alist!*);


num3 := 0

total := lisp (time() - profile_time!*);


total := 10

share dir, num1, num2, num3, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",", num3, ",",total , "' >> ~/signature-based-gb/f5/putin2.csv"});


str := echo 'BIOMD0000000261,0,0,0,10' >> ~/signature-based-gb/f5/putin2.csv

share str;


lisp system str;


0

end;


end;

