load_package f5$

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_interreduceinput compiled, 11 + 16 bytes
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes

torder({}, revgradlex)$



k1 := 1/17;


       1
k1 := ----
       17

k2 := 1/100;


        1
k2 := -----
       100

k3 := 3;


k3 := 3

k4 := 1;


k4 := 1

k5 := 1/2;


       1
k5 := ---
       2

k6 := 1;


k6 := 1

k7 := 1/40;


       1
k7 := ----
       40

k8 := 1/100;


        1
k8 := -----
       100

k9 := 1/4;


       1
k9 := ---
       4

k10 := 1/50;


        1
k10 := ----
        50

k11 := 1/200;


         1
k11 := -----
        200

k12 := 3/2;


        3
k12 := ---
        2

k13 := 1/200;


         1
k13 := -----
        200

k14 := 1/200;


         1
k14 := -----
        200

k15 := 1/200;


         1
k15 := -----
        200

k16 := 1/2;


        1
k16 := ---
        2

operator diff$


odes := { diff(x1, t) = (1*k6*k7 + (-1)*x1*k6*k8 + (-1)*x1*k6*k9*x3*(x1 + k10)^(-1))/k6,
  diff(x2, t) = (1*k6*(1 + (-1)*x2)*x1*k3*(x1 + k5)^(-1)*(k11 + (-1)*x2 + 1)^(-1) + (-1)*k6*x2*k12*(k13 + x2)^(-1))/k6,
  diff(x3, t) = (1*k6*x2*k4*(1 + (-1)*x3)*(k14 + (-1)*x3 + 1)^(-1) + (-1)*k6*k16*x3*(k15 + x3)^(-1))/k6 }$


odes := for each o in odes collect part(o, 2)$



gb := f5(odes)$


*** (x2 x1 x3) implicitly declared as parameters 

in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := BIOMD0000000003

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

num3 := lisp caddr assoc ('(core_interreduceInput), profile_alist!*);


num3 := 0

total := lisp (time() - profile_time!*);


total := 10

share dir, num1, num2, num3, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",", num3, ",",total , "' >> ~/signature-based-gb/f5/putin2.csv"});


str := echo 'BIOMD0000000003,0,0,0,10' >> ~/signature-based-gb/f5/putin2.csv

share str;


lisp system str;


0

end;


end;

