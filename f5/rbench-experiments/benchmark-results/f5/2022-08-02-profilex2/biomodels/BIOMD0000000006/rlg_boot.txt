load_package f5$

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_interreduceinput compiled, 11 + 16 bytes
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes

torder({}, revgradlex)$



k1 := 3/200;


        3
k1 := -----
       200

k2 := 1;


k2 := 1

k3 := 180;


k3 := 180

k4 := 9/500;


        9
k4 := -----
       500

k5 := 1/10000;


         1
k5 := -------
       10000

k6 := 1;


k6 := 1

k7 := 1;


k7 := 1

operator diff$


odes := { diff(x1, t) = 0,
  diff(x2, t) = k3*(x4 - x2)*(k4/k3 + x2^2) - k2*x2,
  diff(x4, t) = k1 - k2*x2 }$


odes := for each o in odes collect part(o, 2)$



gb := f5(odes)$


in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := BIOMD0000000006

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

num3 := lisp caddr assoc ('(core_interreduceInput), profile_alist!*);


num3 := 0

total := lisp (time() - profile_time!*);


total := 10

share dir, num1, num2, num3, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",", num3, ",",total , "' >> ~/signature-based-gb/f5/putin2.csv"});


str := echo 'BIOMD0000000006,0,0,0,10' >> ~/signature-based-gb/f5/putin2.csv

share str;


lisp system str;


0

end;


end;

