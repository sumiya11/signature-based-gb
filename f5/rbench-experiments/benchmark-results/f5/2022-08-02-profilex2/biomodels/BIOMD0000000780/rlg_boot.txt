load_package f5$

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_interreduceinput compiled, 11 + 16 bytes
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes

torder({}, revgradlex)$



k1 := 1/50;


       1
k1 := ----
       50

k2 := 1/50;


       1
k2 := ----
       50

k3 := 1/5;


       1
k3 := ---
       5

k4 := 2/5;


       2
k4 := ---
       5

k5 := 4/5;


       4
k5 := ---
       5

k6 := 1/100;


        1
k6 := -----
       100

k7 := 4/5;


       4
k7 := ---
       5

k8 := 1/25;


       1
k8 := ----
       25

k9 := 1/10;


       1
k9 := ----
       10

k10 := 1/1000;


         1
k10 := ------
        1000

k11 := 1/2;


        1
k11 := ---
        2

k12 := 1/100;


         1
k12 := -----
        100

k13 := 16/3;


        16
k13 := ----
        3

k14 := 16/3;


        16
k14 := ----
        3

k15 := 0;


k15 := 0

k16 := 1;


k16 := 1

operator diff$


odes := { diff(x1, t) = (1*k16*k1 + (-1)*k16*k2*x1 + (-1)*k16*k3*x1*x2 + (-1)*k16*k4*x1*x3)/k16,
  diff(x2, t) = (1*k16*k5*k3*x1*x2 + (-1)*k16*(k2 + k6)*x2)/k16,
  diff(x3, t) = (1*k16*k7*k4*x1*x3 + (-1)*k16*(k2 + k8)*x3 + (-1)*k16*k9*x3*x4)/k16,
  diff(x4, t) = (1*k16*k10 + 1*k16*k11*k9*x3*x4 + (-1)*k16*(k2 + k12)*x4)/k16 }$


odes := for each o in odes collect part(o, 2)$



gb := f5(odes)$


in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := BIOMD0000000780

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

num3 := lisp caddr assoc ('(core_interreduceInput), profile_alist!*);


num3 := 0

total := lisp (time() - profile_time!*);


total := 0

share dir, num1, num2, num3, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",", num3, ",",total , "' >> ~/signature-based-gb/f5/putin2.csv"});


str := echo 'BIOMD0000000780,0,0,0,0' >> ~/signature-based-gb/f5/putin2.csv

share str;


lisp system str;


0

end;


end;

