load_package f5$

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_interreduceinput compiled, 11 + 16 bytes
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes

torder({}, revgradlex)$



k1 := 1;


k1 := 1

k2 := 47;


k2 := 47

k3 := 23/1000;


        23
k3 := ------
       1000

k4 := 27/50;


       27
k4 := ----
       50

k5 := 187/100;


       187
k5 := -----
       100

k6 := 29/20;


       29
k6 := ----
       20

k7 := 10000;


k7 := 10000

k8 := 601/100;


       601
k8 := -----
       100

k9 := 24/5;


       24
k9 := ----
       5

k10 := 237/100;


        237
k10 := -----
        100

k11 := 73/100;


        73
k11 := -----
        100

k12 := 217/100;


        217
k12 := -----
        100

k13 := 2;


k13 := 2

k14 := 93/100;


        93
k14 := -----
        100

k15 := 6/5;


        6
k15 := ---
        5

k16 := 53;


k16 := 53

k17 := 7/2;


        7
k17 := ---
        2

k18 := 1;


k18 := 1

k19 := 1;


k19 := 1

k20 := 151/10;


        151
k20 := -----
        10

k21 := 59/100;


        59
k21 := -----
        100

operator diff$


odes := { diff(x1, t) = (1*k1*k2/(k3*k4)*(k5*k21 - k6*x1/k7)/((1 + k8/k9 + k10/k11 + k12/k13)*(1 + k5/k3 + k6/k14)*(1 + k21/k4 + x1/k15)) + (-1)*k1*k16*x1/k17/((1 + x1/k17)*(1 + k18/k19)))/k1,
  diff(x2, t) = 0,
  diff(x3, t) = 0 }$


odes := for each o in odes collect part(o, 2)$



gb := f5(odes)$


*** (x1) implicitly declared as parameters 

in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := BIOMD0000000076

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

num3 := lisp caddr assoc ('(core_interreduceInput), profile_alist!*);


num3 := 0

total := lisp (time() - profile_time!*);


total := 10

share dir, num1, num2, num3, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",", num3, ",",total , "' >> ~/signature-based-gb/f5/putin2.csv"});


str := echo 'BIOMD0000000076,0,0,0,10' >> ~/signature-based-gb/f5/putin2.csv

share str;


lisp system str;


0

end;


end;

