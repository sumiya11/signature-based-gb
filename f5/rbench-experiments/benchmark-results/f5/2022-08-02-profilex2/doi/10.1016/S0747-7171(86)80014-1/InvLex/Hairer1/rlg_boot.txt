% Boege, W., Gebauer, R., Kredel, H., Some Examples for Solving Systems of Algebraic Equations by
% Calculating Groebner Bases, J. Symbolic Computation (1986) 1, 83-96,
% https://doi.org/10.1016/S0747-7171(86)80014-1
%
% Hairer, Runge-Kutta 1, 05.11.83

load_package f5;

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_interreduceinput compiled, 11 + 16 bytes
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes


system := {+ C2 - A21,
   + C3 - A31 - A32,
   + B1 + B2 + B3 - 1,
   + B2*C2 + B3*C3 - 1/2,
   + B2*C2**2 + B3*C3**2 - 1/3,
   + B3*A32*C2 - 1/6}$



vars := {C2, C3, B3, B2, B1, A21, A32, A31}$


torder(reverse vars, lex)$



gb := f5(system)$


in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := Hairer1

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

num3 := lisp caddr assoc ('(core_interreduceInput), profile_alist!*);


num3 := 0

total := lisp (time() - profile_time!*);


total := 0

share dir, num1, num2, num3, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",", num3, ",",total , "' >> ~/signature-based-gb/f5/putin2.csv"});


str := echo 'Hairer1,0,0,0,0' >> ~/signature-based-gb/f5/putin2.csv

share str;


lisp system str;


0

end;


end;

