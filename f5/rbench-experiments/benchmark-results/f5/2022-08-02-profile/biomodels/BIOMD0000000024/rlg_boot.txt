load_package f5$

Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n
       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n
       proprint([p_1,..., p_n | all]);  print collected data in tables
       proall();                        list all profiled procedures
       pronested();                     list procedures with nested calls
       proreset();                      delete all collected data
       prousage();                      this information
+++ core_normalform compiled, 21 + 24 bytes
+++ core_topreductionf5 compiled, 22 + 24 bytes

torder({}, revgradlex)$



k1 := 1/1000000000000000;


              1
k1 := ------------------
       1000000000000000

k2 := 1;


k2 := 1

k3 := 1;


k3 := 1

k4 := 2;


k4 := 2

k5 := 1;


k5 := 1

k6 := 3;


k6 := 3

k7 := 4;


k7 := 4

k8 := 21/100;


       21
k8 := -----
       100

k9 := 21/100;


       21
k9 := -----
       100

k10 := 0;


k10 := 0

operator diff$


odes := { diff(x1, t) = 0,
  diff(x2, t) = (1*k1*k2/(1 + (x3/k3)^k4) + (-1)*k1*k8*x2)/k1,
  diff(x3, t) = (1*k1*k5*delay(x2, k7)^k6 + (-1)*k1*k9*x3)/k1 }$


*** delay declared operator 

odes := for each o in odes collect part(o, 2)$



gb := f5(odes)$


*** (x3) implicitly declared as parameters 

in "~/signature-based-gb/f5/sed.red";

dir := lisp lastcar lto_stringsplit(get!-current!-directory(), {'!/});


dir := BIOMD0000000024

num1 := lisp caddr assoc ('(core_normalform), profile_alist!*);


num1 := 0

num2 := lisp caddr assoc ('(core_topReductionF5), profile_alist!*);


num2 := 0

total := lisp (time() - profile_time!*);


total := 10

share dir, num1, num2, total;


str := lisp lto_sconcat({"echo '", dir, ",", num1, ",", num2, ",",total , "' >> ~/signature-based-gb/f5/putin.csv"});


str := echo 'BIOMD0000000024,0,0,10' >> ~/signature-based-gb/f5/putin.csv

share str;


lisp system str;


0

end;


end;

